---
# bring up diffs between this file and the BitbucketDataCenter.template, and JiraDataCenter.template.
# As a rule, we should work to minimize our diffs between these files as best we can, so that future changes are easy to make across all supported CloudFormation templates.
# Using YAML as our file format will allow us to put a block comment at the top of the file saying exactly this.
AWSTemplateFormatVersion: 2010-09-09
Description: QS(5027) Atlassian Confluence Data Center Oct,19,2016
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Confluence setup
        Parameters:
          - ConfluenceVersion
      - Label:
          default: Cluster nodes
        Parameters:
          - ClusterNodeInstanceType
          - ClusterNodeMax
          - ClusterNodeMin
          - ClusterNodeSize
          - SynchronyClusterNodeMax
          - SynchronyClusterNodeMin
          - SynchronyNodeInstanceType
      - Label:
          default: Database
        Parameters:
          - DBInstanceClass
          - DBIops
          - DBMasterUserPassword
          - DBMultiAZ
          - DBPassword
          - DBStorage
          - DBStorageType
      - Label:
          default: Networking
        Parameters:
          - AssociatePublicIpAddress
          - CidrBlock
          - ExternalSubnets
          - InternalSubnets
          - KeyName
          - SSLCertificateName
          - VPC
      - Label:
          default: Linux Bastion Configuration
        Parameters:
          - BastionAMIOS
          - BastionBanner
          - BastionInstanceType
          - EnableBanner
          - EnableTCPForwarding
          - EnableX11Forwarding
          - NumBastionHosts
      - Label:
          default: DNS (Optional)
        Parameters:
          - CustomDnsName
          - HostedZone
          - SubDomainName
      - Label:
          default: Advanced (Optional)
        Parameters:
          - ConfluenceDownloadUrl
          - DBSnapshotId
          - StartCollectd
      - Label:
          default: Application Tuning (Optional) - dbref - https://confluence.atlassian.com/doc/performance-tuning-130289.html tomcatref - http://tomcat.apache.org/tomcat-8.0-doc/config/http.html
        Parameters:
            - TomcatContextPath
            - CatalinaOpts
            - JvmHeapOverride
            - DBPoolMaxSize
            - DBPoolMinSize
            - DBTimeout
            - DBIdleTestPeriod
            - DBMaxStatements
            - DBValidate
            - DBPreferredTestQuery
            - DBAcquireIncrement
            - TomcatAcceptCount
            - TomcatConnectionTimeout
            - TomcatEnableLookups
            - TomcatMaxThreads
            - TomcatMinSpareThreads
            - TomcatProtocol
            - TomcatProxyPort
            - TomcatRedirectPort
            - TomcatScheme
            - TomcatSecure
    ParameterLabels:
      AssociatePublicIpAddress:
        default: Assign public IP
      BastionAMIOS:
        default: Bastion AMI Operating System
      BastionBanner:
        default: Bastion Banner
      BastionInstanceType:
        default: Bastion Instance Type
      CatalinaOpts:
        default: Catalina options
      CidrBlock:
        default: Permitted IP range
      ClusterNodeMax:
        default: Maximum number of cluster nodes
      ClusterNodeMin:
        default: Minimum number of cluster nodes
      ClusterNodeInstanceType:
        default: Confluence cluster node instance type
      ClusterNodeSize:
        default: Confluence cluster node instance volume size
      ConfluenceDownloadUrl:
        default: Confluence download URL
      ConfluenceVersion:
        default: Version *
      CustomDnsName:
        default: Existing DNS name (optional)
      DBInstanceClass:
        default: Database instance class
      DBIops:
        default: RDS Provisioned IOPS
      DBMasterUserPassword:
        default: Master password *
      DBMultiAZ:
        default: Enable RDS Multi-AZ deployment
      DBPassword:
        default: Confluence database password *
      DBPoolMaxSize:
        default: DB Pool Maximum Size
      DBPoolMinSize:
        default: DB Pool Minimum Size
      DBTimeout:
        default: DB Timeout
      DBIdleTestPeriod:
        default: DB Idle Test Period
      DBMaxStatements:
        default: DB Max Statements
      DBValidate:
        default: DB Validate
      DBPreferredTestQuery:
        default: DB Preferred Test Query
      DBAcquireIncrement:
        default: DB Acquire Increment
      DBSnapshotId:
        default: Database snapshot ID to restore
      DBStorage:
        default: Database storage
      DBStorageType:
        default: Database storage type
      EnableBanner:
        default: Enable Banner
      EnableTCPForwarding:
        default: Enable TCP Forwarding
      EnableX11Forwarding:
        default: Enable X11 Forwarding
      ExternalSubnets:
        default: External subnets *
      HostedZone:
        default: Route 53 Hosted Zone (optional)
      InternalSubnets:
        default: Internal subnets *
      JvmHeapOverride:
        default: JVM Heap Size Override
      KeyName:
        default: Key Name *
      NumBastionHosts:
        default: Number of Bastion Hosts
      SSLCertificateName:
        default: SSL Certificate Name
      SubDomainName:
        default: Sub-domain for Hosted Zone (optional)
      SynchronyClusterNodeMax:
        default: Maximum number of Synchrony cluster nodes
      SynchronyClusterNodeMin:
        default: Minimum number of Synchrony cluster nodes
      SynchronyNodeInstanceType:
        default: Synchrony cluster node instance type
      TomcatAcceptCount:
        default: Tomcat Accept Count
      TomcatConnectionTimeout:
        default: Tomcat Connection Timeout
      TomcatContextPath:
        default: Tomcat Context Path
      TomcatEnableLookups:
        default: Tomcat Enable DNS Lookups
      TomcatMaxThreads:
        default: Tomcat Maximum Threads
      TomcatMinSpareThreads:
        default: Tomcat Minimum Spare Threads
      TomcatProtocol:
        default: Tomcat Protocol
      TomcatProxyPort:
        default: Tomcat Proxy Port
      TomcatRedirectPort:
        default: Tomcat Redirect Port
      TomcatScheme:
        default: Tomcat protocol Scheme
      TomcatSecure:
        default: Tomcat Secure?
      VPC:
        default: VPC *
Parameters:
  AssociatePublicIpAddress:
    Default: true
    AllowedValues: [true, false]
    ConstraintDescription: Must be 'true' or 'false'.
    Description: Controls if the EC2 instances are assigned a public IP address
    Type: String
  BastionAMIOS:
    AllowedValues:
    - Amazon-Linux-HVM
    - CentOS-7-HVM
    - Ubuntu-Server-14.04-LTS-HVM
    - Ubuntu-Server-16.04-LTS-HVM
    Default: Amazon-Linux-HVM
    Description: The Linux distribution for the AMI to be used for the bastion instances
    Type: String
  BastionBanner:
    Default: https://s3.amazonaws.com/quickstart-reference/linux/bastion/latest/scripts/banner_message.txt
    Description: Banner text to display upon login
    Type: String
  BastionInstanceType:
    Description: Amazon EC2 instance type for the bastion instances
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
  CatalinaOpts:
    Description: Pass in any additional jvm options to tune Catalina
    Type: String
  CidrBlock:
    Default: '0.0.0.0/0'
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
    Description: The CIDR IP range that is permitted to access the Confluence URL. Use 0.0.0.0/0 if you want public access from the internet.
    Type: String
    MinLength: 9
    MaxLength: 18
  ClusterNodeMax:
    Default: 1
    Type: Number
  ClusterNodeMin:
    Default: 1
    Type: Number
  ClusterNodeSize:
    Default: 50
    Description: Size of cluster node root volume in Gb (note - size based upon Confluence indexes x 4)
    Type: Number
  ClusterNodeInstanceType:
    Default: c5.xlarge
    AllowedValues:
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - m3.medium
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - x1.16xlarge
      - x1.32xlarge
    ConstraintDescription: Must be an EC2 instance type from the selection list
    Description: Instance type for the cluster application nodes.
    Type: String
  ConfluenceDownloadUrl:
    Default: ''
    Description: This parameter is used to download a custom Confluence version for testing purposes. Leave this parameter blank to automatically download the official version you specified earlier. internal dev versions can be found at downloads.internal.atlassian.com:/import/downloads/software/confluence/downloads/atlassian-confluence-<version>.tar.gz
    Type: String
    ConstraintDescription: "Must be a valid Confluence download url from version 6.1.x or higher. Find valid versions at https://confluence.atlassian.com/display/DOC/Confluence+Release+Notes"
  ConfluenceVersion:
    AllowedPattern: '(\d+\.\d+\.\d+(-?.*))'
    ConstraintDescription: "Must be a valid Confluence version number, for example 6.1.0. Find valid versions at https://confluence.atlassian.com/display/DOC/Confluence+Release+Notes"
    Description: The version of Confluence to install
    Type: String
  CustomDnsName:
    Description: 'Use custom existing DNS name for your Confluence Data Center instance. Please note: you must own the domain and configure it to point at the load balancer.'
    Type: String
  DBInstanceClass:
    Default: db.m4.xlarge
    AllowedValues:
      - db.m3.medium
      - db.m3.large
      - db.m3.xlarge
      - db.m3.2xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.r3.large
      - db.r3.xlarge
      - db.r3.2xlarge
      - db.r3.4xlarge
      - db.r3.8xlarge
      - db.t2.medium
      - db.t2.large
    ConstraintDescription: Must be a valid RDS instance class, from the selection list
    Description: RDS instance type
    Type: String
  DBIops:
    Default: 1000
    ConstraintDescription: 'Must be in the range 1000 - 30000'
    Description: 'Must be in the range of 1000 - 30000 and a multiple of 1000. This value is only used with Provisioned IOPS. Note: The ratio of IOPS per allocated-storage must be between 3.00 and 10.00'
    MinValue: 1000
    MaxValue: 3000
    Type: Number
  DBMasterUserPassword:
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: Must be at least 8 alphanumeric characters.
    Description: Database admin account password.
    NoEcho: True
    MinLength: 8
    MaxLength: 128
    Type: String
  DBMultiAZ:
    Default: true
    AllowedValues:
      - true
      - false
    ConstraintDescription: Must be 'true' or 'false'.
    Type: String
  DBPassword:
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: Must be at least 8 alphanumeric characters.
    Description: Database user account password.
    MinLength: 8
    MaxLength: 128
    NoEcho: true
    Type: String
  DBPoolMaxSize:
    Default: 60
    Description: The maximum number of database connections that can be opened at any time
    Type: String
  DBPoolMinSize:
    Default: 10
    Description: The minimum number of idle database connections that are kept open at any time
    Type: String
  DBTimeout:
    Default: 0
    Description: Number of seconds that Connections in excess of minPoolSize should be permitted to remain idle in the pool before being culled
    Type: String
  DBIdleTestPeriod:
    Default: 0
    Description: If this is a number greater than 0, c3p0 will test all idle, pooled but unchecked-out connections, every this number of seconds
    Type: String
  DBMaxStatements:
    Default: 0
    Description: The size of c3p0's global PreparedStatement cache. It controls the total number of Statements cached, for all Connections. If set, it should be a fairly large number, as each pooled Connection requires its own, distinct flock of cached statements.
    Type: String
  DBValidate:
    Default: false
    Description: If true, a connection test will be performed at every connection checkout to verify that the connection is valid
    Type: String
  DBPreferredTestQuery:
    Default: ''
    Description: The query that will be executed for all connection tests
    Type: String
  DBAcquireIncrement:
    Default: 3
    Description: Determines how many connections at a time c3p0 will try to acquire when the pool is exhausted
    Type: String
  DBSnapshotId:
    Default: ''
    Description: RDS snapshot ID of an existing backup to restore. If you use this parameter you will also need to manually restore your shared home directory.  Leave blank for a new instance.
    Type: String
    ConstraintDescription:
        Must be a valid RDS snapshot ID, or blank.
  DBStorage:
    Default: 10
    Description: Database allocated storage size, in gigabytes (GB)
    Type: Number
  DBStorageType:
    Default: General Purpose (SSD)
    AllowedValues:
      - General Purpose (SSD)
      - Provisioned IOPS
    ConstraintDescription: Must be 'General Purpose (SSD)' or 'Provisioned IOPS'.
    Description: Database storage type
    Type: String
  EnableBanner:
    AllowedValues:
      - true
      - false
    Default: false
    Description: To include a banner to be displayed when connecting via SSH to the bastion, set this parameter to true
    Type: String
  EnableTCPForwarding:
    Type: String
    Description: Enable/Disable TCP Forwarding
    Default: false
    AllowedValues:
      - true
      - false
  EnableX11Forwarding:
    Type: String
    Description: Enable/Disable X11 Forwarding
    Default: false
    AllowedValues:
      - true
      - false
  ExternalSubnets:
    ConstraintDescription: Must be a list of two or more Subnet ID's within the selected VPC.
    Description: Subnets (two or more) where your user-facing load balancer will be deployed. MUST be within the selected VPC.
    Type: List<AWS::EC2::Subnet::Id>
  HostedZone:
    Default: ''
    ConstraintDescription: Must be the name of an existing Route53 Hosted Zone.
    Description: The domain name of the Route53 PRIVATE Hosted Zone in which to create cnames
    Type: String
  InternalSubnets:
    ConstraintDescription: Must be a list of two or more Subnet ID's within the selected VPC.
    Description: Subnets (two or more) where your cluster nodes and other internal infrastructure will be deployed. MUST be within the selected VPC. Specify the ExternalSubnets again here if you wish to deploy the whole stack into the same subnets.
    Type: List<AWS::EC2::Subnet::Id>
  JvmHeapOverride:
    Default: ''
    Description: Override the default amount of Memory to allocate to the JVM for your instance type - set size in meg or gig e.g. 1024m or 1g
    Type: String
  KeyName:
    ConstraintDescription: Must be the name of an existing EC2 Key Pair.
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
  NumBastionHosts:
    AllowedValues:
      - '1'
      - '2'
      - '3'
      - '4'
    Default: '1'
    Description: Enter the number of bastion hosts to create
    Type: String
  SubDomainName:
    Description: Leave this field blank to use your stack name as the sub-domain.
    Default: ''
    Type: String
  SSLCertificateName:
    Default: ''
    Description: The name of your Server Certificate to use for HTTPS.  Leave blank if you don't want to set up HTTPS at this time
    MinLength: 0
    MaxLength: 50
    Type: String
  StartCollectd:
    Default: true
    AllowedValues:
      - true
      - false
    ConstraintDescription: Must be 'true' or 'false'.
    Description: Start the collectd service
    Type: String
  SynchronyClusterNodeMax:
    Default: 1
    Type: Number
  SynchronyClusterNodeMin:
    Default: 1
    Type: Number
  SynchronyNodeInstanceType:
    Default: c5.large
    AllowedValues:
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - m3.medium
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - x1.16xlarge
      - x1.32xlarge
    ConstraintDescription: Must be an EC2 instance type from the selection list
    Description: Synchrony cluster node instance type.
    Type: String
  TomcatAcceptCount:
    Default: 10
    Description: The maximum queue length for incoming connection requests when all possible request processing threads are in use
    Type: String
  TomcatConnectionTimeout:
    Default: 20000
    Description: The number of milliseconds this Connector will wait, after accepting a connection, for the request URI line to be presented
    Type: String
  TomcatContextPath:
    Default: ''
    Description: The context path of this web application, which is matched against the beginning of each request URI to select the appropriate web application for processing
    Type: String
  TomcatEnableLookups:
    Default: false
    Description: Set to true if you want calls to request.getRemoteHost() to perform DNS lookups in order to return the actual host name of the remote client
    Type: String
  TomcatMaxThreads:
    Default: 48
    Description: The maximum number of request processing threads to be created by this Connector, which therefore determines the maximum number of simultaneous requests that can be handled
    Type: String
  TomcatMinSpareThreads:
    Default: 10
    Description: The minimum number of threads always kept running
    Type: String
  TomcatProtocol:
    Default: 'HTTP/1.1'
    Description: Sets the protocol to handle incoming traffic
    Type: String
  TomcatProxyPort:
    Default: 443
    Description: If this Connector is being used in a proxy configuration, configure this attribute to specify the server port to be returned for calls to request.getServerPort()
    Type: String
  TomcatRedirectPort:
    Default: 8443
    Description: For a non-ssl conenctor actioning a redirect to ssl URI, Catalina will automatically redirect the request to the port number specified here
    Type: String
  TomcatScheme:
    Default: http
    Description: The name of the protocol you wish to have returned, ie "https" for an SSL Connector
    Type: String
  TomcatSecure:
    Default: false
    Description: Set this attribute to true if you wish to have calls to request.isSecure() to return true for requests received by this Connector. Needed for ssl offloading.
    Type: String
  VPC:
    ConstraintDescription: Must be the ID of a VPC.
    Description: Virtual Private Cloud
    Type: AWS::EC2::VPC::Id
Conditions:
  DBProvisionedIops:
    !Equals [!Ref DBStorageType, Provisioned IOPS]
  DoCollectd:
    !Equals [!Ref StartCollectd, true]
  DoRestoreFromRDSSnapshot:
    !Not [!Equals [!Ref DBSnapshotId, '']]
  DoSetDBMasterUserPassword:
    !Not [!Equals [!Ref DBMasterUserPassword, '']]
  DoSSL:
    !Not [!Equals [!Ref SSLCertificateName, '']]
  OverrideHeap:
    !Not [!Equals [!Ref JvmHeapOverride, '']]
  UseContextPath:
    !Not [!Equals [!Ref TomcatContextPath, '']]
  UseCustomDnsName:
    !Not [!Equals [!Ref CustomDnsName, '']]
  UseHostedZone:
    !Not [!Equals [!Ref HostedZone, '']]
  UsePublicIp:
    !Equals [!Ref AssociatePublicIpAddress, 'true']
  UseSubDomainName:
    !Not [!Equals [!Ref SubDomainName, '']]
  GovCloudCondition:
    !Equals [!Ref 'AWS::Region', 'us-gov-west-1']
Mappings:
  AWSInstanceType2Arch:
    c3.large:
      Arch: HVM64
      Jvmheap: 3072m
    c3.xlarge:
      Arch: HVM64
      Jvmheap: 6144m
    c3.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c3.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c3.8xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c4.large:
      Arch: HVM64
      Jvmheap: 3072m
    c4.xlarge:
      Arch: HVM64
      Jvmheap: 6144m
    c4.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c4.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c4.8xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c5.large:
      Arch: HVM64
      Jvmheap: 3072m
    c5.xlarge:
      Arch: HVM64
      Jvmheap: 6144m
    c5.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c5.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c5.9xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c5.18xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    d2.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    d2.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    d2.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    d2.8xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    i2.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    i2.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    i2.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    i2.8xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    i3.large:
      Arch: HVM64
      Jvmheap: 12288m
    i3.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    i3.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    i3.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    i3.8xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    i3.16xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m3.medium:
      Arch: HVM64
      Jvmheap: 3072m
    m4.large:
      Arch: HVM64
      Jvmheap: 6144m
    m4.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m4.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m4.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m4.10xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m4.16xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r3.large:
      Arch: HVM64
      Jvmheap: 12288m
    r3.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r3.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r3.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r3.8xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r4.large:
      Arch: HVM64
      Jvmheap: 12288m
    r4.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r4.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r4.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r4.8xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r4.16xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    t2.medium:
      Arch: HVM64
      Jvmheap: 2048m
    t2.large:
      Arch: HVM64
      Jvmheap: 6144m
    t2.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    t2.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    x1.16xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    x1.32xlarge:
      Arch: HVM64
      Jvmheap: 12288m
  AWSRegionArch2AMI:
    ap-northeast-1:
      HVM64: ami-e16e9587
      HVMG2: NOT_SUPPORTED
    ap-northeast-2:
      HVM64: ami-f36db59d
      HVMG2: NOT_SUPPORTED
    ap-south-1:
      HVM64: ami-0d83c762
      HVMG2: NOT_SUPPORTED
    ap-southeast-1:
      HVM64: ami-5b660b38
      HVMG2: NOT_SUPPORTED
    ap-southeast-2:
      HVM64: ami-01c42163
      HVMG2: NOT_SUPPORTED
    ca-central-1:
      HVM64: ami-56239d32
      HVMG2: NOT_SUPPORTED
    eu-central-1:
      HVM64: ami-d5982dba
      HVMG2: NOT_SUPPORTED
    eu-west-1:
      HVM64: ami-17609a6e
      HVMG2: NOT_SUPPORTED
    eu-west-2:
      HVM64: ami-39e7f75d
      HVMG2: NOT_SUPPORTED
    sa-east-1:
      HVM64: ami-cbb7c4a7
      HVMG2: NOT_SUPPORTED
    us-east-1:
      HVM64: ami-ff197785
      HVMG2: NOT_SUPPORTED
    us-east-2:
      HVM64: ami-5bbf9c3e
      HVMG2: NOT_SUPPORTED
    us-west-1:
      HVM64: ami-55f3c735
      HVMG2: NOT_SUPPORTED
    us-west-2:
      HVM64: ami-3dcf6845
      HVMG2: NOT_SUPPORTED
Resources:
  ConfluenceClusterNodeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: ConfluenceClusterNodePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action: ['ec2:DescribeInstances']
                Effect: Allow
                Resource: ['*']
              - Action: ['s3:ListBucket']
                Effect: Allow
                Resource: ['arn:aws:s3:::/aws-deployment-test/releases/confluence']
              - Action: ['s3:Get*']
                Effect: Allow
                Resource: ['arn:aws:s3:::/aws-deployment-test/releases/confluence/*']
              - Action: ['s3:ListBucket']
                Effect: Allow
                Resource: ['arn:aws:s3:::/atlassian-software/releases/confluence']
              - Action: ['s3:Get*']
                Effect: Allow
                Resource: ['arn:aws:s3:::/atlassian-software/releases/confluence/*']
              - Action: ['s3:ListBucket']
                Effect: Allow
                Resource: ['arn:aws:s3:::/atlassian-software/snapshots/confluence']
              - Action: ['s3:Get*']
                Effect: Allow
                Resource: ['arn:aws:s3:::/atlassian-software/snapshots/confluence/*']
  ConfluenceClusterNodeInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles: [!Ref ConfluenceClusterNodeRole]
# Confluence node config
  ClusterNodeGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: !Ref ClusterNodeMin
      LaunchConfigurationName: !Ref ClusterNodeLaunchConfig
      MaxSize: !Ref ClusterNodeMax
      MinSize: !Ref ClusterNodeMin
      TargetGroupARNs: [!Ref MainTargetGroup]
      VPCZoneIdentifier: !Ref InternalSubnets
      Tags:
        - Key: Name
          Value: !Sub ["${StackName} Confluence Node", StackName: !Ref 'AWS::StackName']
          PropagateAtLaunch: true
        - Key: Cluster
          Value: !Ref AWS::StackName
          PropagateAtLaunch: true
  ClusterNodeLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    DependsOn:
      - EFSMountAz1
      - EFSMountAz2
      - DB
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default: [1]
        "1":
          packages:
            !If
              - DoCollectd
              - yum:
                  collectd: [5.7.1]
                  collectd-java: []
                  collectd-generic-jmx: []
                  collectd-rrdtool: []
                  collectd-disk: []
              - !Ref "AWS::NoValue"
          files:
            /etc/atl:
              content:
                !Join
                  - "\n"
                  -
                    - !Sub
                      - "ATL_JVM_HEAP=${AtlJvmHeap}"
                      - AtlJvmHeap: !If
                          - OverrideHeap
                          - !Ref 'JvmHeapOverride'
                          - !FindInMap
                              - AWSInstanceType2Arch
                              - !Ref ClusterNodeInstanceType
                              - Jvmheap
                    - !Sub
                        - "ATL_SYNCHRONY_SERVICE_URL=${Protocol}://${LoadBalancerName}/synchrony/v1"
                        - Protocol: !If [DoSSL, "https", "http"]
                          LoadBalancerName: !GetAtt LoadBalancer.DNSName
                    - !Sub ["ATL_CONFLUENCE_INSTALLER_DOWNLOAD_URL=${ConfluenceDownloadUrl}", ConfluenceDownloadUrl: !Ref ConfluenceDownloadUrl]
                    - !Sub ["ATL_CATALINA_OPTS=\"${CatalinaOpts}\"", CatalinaOpts: !Ref CatalinaOpts]
                    - "ATL_RELEASE_S3_BUCKET=atlassian-software"
                    - "ATL_RELEASE_S3_PATH=releases/confluence"
                    - "ATL_APP_DATA_MOUNT_ENABLED=false"
                    - !Sub ["ATL_DB_PASSWORD=${DBMasterUserPassword}", DBMasterUserPassword: !Ref DBMasterUserPassword]
                    - "ATL_DB_NAME=confluence"
                    - !Sub ["ATL_DB_HOST=${DBEndpointAddress}", DBEndpointAddress: !GetAtt DB.Endpoint.Address]
                    - !Sub ["ATL_DB_PORT=${DBEndpointPort}", DBEndpointPort: !GetAtt DB.Endpoint.Port]
                    - !Sub ["ATL_DB_POOLMAXSIZE=${DBPoolMaxSize}", DBPoolMaxSize: !Ref DBPoolMaxSize]
                    - !Sub ["ATL_DB_POOLMINSIZE=${DBPoolMinSize}", DBPoolMinSize: !Ref DBPoolMinSize]
                    - !Sub ["ATL_DB_TIMEOUT=${DBTimeout}", DBTimeout: !Ref DBTimeout]
                    - !Sub ["ATL_DB_IDLETESTPERIOD=${DBIdleTestPeriod}", DBIdleTestPeriod: !Ref DBIdleTestPeriod]
                    - !Sub ["ATL_DB_MAXSTATEMENTS=${DBMaxStatements}", DBMaxStatements: !Ref DBMaxStatements]
                    - !Sub ["ATL_DB_VALIDATE=${DBValidate}", DBValidate: !Ref DBValidate]
                    - !Sub ["ATL_DB_PREFERREDTESTQUERY=\"${DBPreferredTestQuery}\"", DBPreferredTestQuery: !Ref DBPreferredTestQuery]
                    - !Sub ["ATL_DB_ACQUIREINCREMENT=${DBAcquireIncrement}", DBAcquireIncrement: !Ref DBAcquireIncrement]
                    - "ATL_JDBC_DRIVER=org.postgresql.Driver"
                    - !Sub
                      - "ATL_JDBC_URL=jdbc:postgresql://${DBEndpointAddress}:${DBEndpointPort}/confluence"
                      - DBEndpointAddress: !GetAtt DB.Endpoint.Address
                        DBEndpointPort: !GetAtt DB.Endpoint.Port
                    - "ATL_JDBC_USER=atlconfluence"
                    - !Sub ["ATL_JDBC_PASSWORD=${DBPassword}", DBPassword: !Ref DBPassword]
                    - "ATL_ENABLED_PRODUCTS=Confluence"
                    - "ATL_ENABLED_SHARED_HOMES="
                    - !Sub ["ATL_CONFLUENCE_VERSION=${ConfluenceVersion}", ConfluenceVersion: !Ref ConfluenceVersion]
                    - "ATL_CONFLUENCE_DATA_CENTER=true"
                    - "ATL_NGINX_ENABLED=false"
                    - "ATL_POSTGRES_ENABLED=false"
                    - !Sub
                      - "ATL_PROXY_NAME=${AtlProxyName}"
                      - AtlProxyName: !If
                          - UseCustomDnsName
                          - !Ref 'CustomDnsName'
                          - !If
                            - UseHostedZone
                            - !Ref 'LoadBalancerCname'
                            - !GetAtt [LoadBalancer, DNSName]
                    - "ATL_SSL_SELF_CERT_ENABLED=false"
                    - !If [DoSSL, "ATL_SSL_PROXY=true", !Ref "AWS::NoValue"]
                    - !Sub ["ATL_AWS_STACK_NAME=${StackName}", StackName: !Ref "AWS::StackName"]
                    - !Sub ["ATL_HAZELCAST_NETWORK_AWS_IAM_ROLE=${ConfluenceClusterNodeRole}", ConfluenceClusterNodeRole: !Ref ConfluenceClusterNodeRole]
                    - !Sub ["ATL_HAZELCAST_NETWORK_AWS_IAM_REGION=${HazelcastAWSRegion}", HazelcastAWSRegion: !Ref "AWS::Region"]
                    - "ATL_HAZELCAST_NETWORK_AWS_TAG_KEY=Cluster"
                    - !Sub ["ATL_HAZELCAST_NETWORK_AWS_TAG_VALUE=${HazelcastAWSTagValue}", HazelcastAWSTagValue: !Ref "AWS::StackName"]
                    - !Sub ["ATL_STARTCOLLECTD=${StartCollectd}", StartCollectd: !Ref StartCollectd]
                    - !Sub ["ATL_TOMCAT_ACCEPTCOUNT=${TomcatAcceptCount}", TomcatAcceptCount: !Ref TomcatAcceptCount]
                    - !Sub ["ATL_TOMCAT_CONNECTIONTIMEOUT=${TomcatConnectionTimeout}", TomcatConnectionTimeout: !Ref TomcatConnectionTimeout]
                    - !Sub ["ATL_TOMCAT_CONTEXTPATH=${TomcatContextPath}", TomcatContextPath: !Ref TomcatContextPath]
                    - !Sub ["ATL_TOMCAT_ENABLELOOKUPS=${TomcatEnableLookups}", TomcatEnableLookups: !Ref TomcatEnableLookups]
                    - !Sub ["ATL_TOMCAT_MAXTHREADS=${TomcatMaxThreads}", TomcatMaxThreads: !Ref TomcatMaxThreads]
                    - !Sub ["ATL_TOMCAT_MINSPARETHREADS=${TomcatMinSpareThreads}", TomcatMinSpareThreads: !Ref TomcatMinSpareThreads]
                    - !Sub ["ATL_TOMCAT_PROTOCOL=${TomcatProtocol}", TomcatProtocol: !Ref TomcatProtocol]
                    - !Sub ["ATL_TOMCAT_PROXYPORT=${TomcatProxyPort}", TomcatProxyPort: !Ref TomcatProxyPort]
                    - !Sub ["ATL_TOMCAT_REDIRECTPORT=${TomcatRedirectPort}", TomcatRedirectPort: !Ref TomcatRedirectPort]
                    - !Sub ["ATL_TOMCAT_SCHEME=${TomcatScheme}", TomcatScheme: !Ref TomcatScheme]
                    - !Sub ["ATL_TOMCAT_SECURE=${TomcatSecure}", TomcatSecure: !Ref TomcatSecure]
            /etc/cfn/cfn-hup.conf:
              content: !Join
                - "\n"
                -
                  - "[main]"
                  - !Sub ["stack=${StackId}", StackId: !Ref "AWS::StackId"]
                  - !Sub ["region=${Region}", Region: !Ref "AWS::Region"]
              mode: 000400
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content:
                !Join
                  - "\n"
                  -
                    - "[cfn-auto-reloader-hook]"
                    - triggers=post.update
                    - "path=Resources.ClusterNodeLaunchConfig.Metadata.AWS::CloudFormation::Init"
                    - !Sub
                      - "action=/opt/aws/bin/cfn-init -v --stack ${StackName} --resource ClusterNodeLaunchConfig --region ${Region}"
                      - StackName: !Ref "AWS::StackName"
                        Region: !Ref "AWS::Region"
                    - runas=root
          commands:
            010_make_mount_point:
              command: mkdir -p /media/atl
              ignoreErrors: false
            020_add_nfs_mount:
              command:
                !Join
                  - ""
                  -
                    - "echo "
                    - !If
                      - UseHostedZone
                      - !Ref EFSCname
                      - !Sub
                          - $(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone).${ElasticFileSystem}".efs."${Region}".amazonaws.com"
                          - ElasticFileSystem: !Ref ElasticFileSystem
                            Region: !Ref "AWS::Region"
                    - ":/ /media/atl nfs4 noatime,intr,rsize=32768,wsize=32768 0 0 >>/etc/fstab"
              ignoreErrors: false
            030_mount_all:
              command: mount -a
              ignoreErrors: true
            040_make_shared_home_dir:
              command: mkdir -p /media/atl/confluence/shared-home
              ignoreErrors: false
          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files: [/etc/cfn/cfn-hup.conf, /etc/cfn/hooks.d/cfn-auto-reloader.conf]
              collectd:
                !If [DoCollectd, {enabled: true, ensureRunning: true}, !Ref 'AWS::NoValue']
              rpcbind:
                enabled: true
                ensureRunning: true
                packages:
                  yum: [nfs-utils]
    Properties:
      AssociatePublicIpAddress: !Ref AssociatePublicIpAddress
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: !Ref ClusterNodeSize
        - DeviceName: /dev/xvdf
          Ebs: {}
          NoDevice: true
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref ConfluenceClusterNodeInstanceProfile
      ImageId:
        !FindInMap
          - AWSRegionArch2AMI
          - !Ref 'AWS::Region'
          - !FindInMap
              - AWSInstanceType2Arch
              - !Ref ClusterNodeInstanceType
              - Arch
      InstanceType: !Ref ClusterNodeInstanceType
      SecurityGroups: [!Ref SecurityGroup]
      UserData:
        Fn::Base64:
          !Join
            - ""
            -
              - "#!/bin/bash -xe\n"
              - "yum update -y aws-cfn-bootstrap\n"
              - !Sub ["/opt/aws/bin/cfn-init -v --stack ${StackName}", StackName: !Ref "AWS::StackName"]
              - !Sub [" --resource ClusterNodeLaunchConfig --region ${Region}\n", Region: !Ref "AWS::Region"]
              - !Sub ["/opt/aws/bin/cfn-signal -e $? --stack ${StackName}", StackName: !Ref "AWS::StackName"]
              - !Sub [" --resource ClusterNodeGroup --region ${Region}", Region: !Ref "AWS::Region"]
  ClusterNodeScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref ClusterNodeGroup
      Cooldown: 600
      ScalingAdjustment: 1
  ClusterNodeScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref ClusterNodeGroup
      Cooldown: 600
      ScalingAdjustment: -1
  CPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale up if CPU > 60% for 5 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: 60
      EvaluationPeriods: 5
      Threshold: 60
      AlarmActions: [!Ref ClusterNodeScaleUpPolicy]
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref ClusterNodeGroup
      ComparisonOperator: GreaterThanThreshold
  CPUAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale down if CPU < 40% for 30 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: 60
      EvaluationPeriods: 30
      Threshold: 40
      AlarmActions: [!Ref ClusterNodeScaleDownPolicy]
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref ClusterNodeGroup
      ComparisonOperator: LessThanThreshold
# Synchrony node config
  SynchronyClusterNodeGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: !Ref SynchronyClusterNodeMin
      LaunchConfigurationName: !Ref SynchronyClusterNodeLaunchConfig
      MaxSize: !Ref SynchronyClusterNodeMax
      MinSize: !Ref SynchronyClusterNodeMin
      TargetGroupARNs: [!Ref SynchronyTargetGroup]
      VPCZoneIdentifier: !Ref InternalSubnets
      Tags:
        - Key: Name
          Value: !Sub ["${StackName} Synchrony Node", StackName: !Ref 'AWS::StackName']
          PropagateAtLaunch: true
        - Key: synchrony_service
          Value: !Ref AWS::StackName
          PropagateAtLaunch: true
        - Key: environment
          Value: Production
          PropagateAtLaunch: true
  SynchronyClusterNodeLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    DependsOn:
      - EFSMountAz1
      - EFSMountAz2
      - DB
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default: [1]
        "1":
          packages:
            !If
              - DoCollectd
              - yum:
                  collectd: [5.7.1]
                  collectd-java: []
                  collectd-generic-jmx: []
                  collectd-rrdtool: []
                  collectd-disk: []
              - Ref "AWS::NoValue"
          files:
            /etc/atl:
              content:
                !Join
                  - "\n"
                  -
                    - !Sub
                      - "ATL_JVM_HEAP=${AtlJvmHeap}"
                      - AtlJvmHeap: !If
                          - OverrideHeap
                          - !Ref 'JvmHeapOverride'
                          - !FindInMap
                              - AWSInstanceType2Arch
                              - !Ref ClusterNodeInstanceType
                              - Jvmheap
                    - !Sub
                      - "ATL_SYNCHRONY_SERVICE_URL=${Protocol}://${LoadBalancerName}/synchrony"
                      - Protocol: !If [DoSSL, "https", "http"]
                        LoadBalancerName: !GetAtt LoadBalancer.DNSName
                    - !Sub ["ATL_CONFLUENCE_INSTALLER_DOWNLOAD_URL=${ConfluenceDownloadUrl}", ConfluenceDownloadUrl: !Ref ConfluenceDownloadUrl]
                    - !Sub ["ATL_CATALINA_OPTS=\"${CatalinaOpts}\"", CatalinaOpts: !Ref CatalinaOpts]
                    - "ATL_RELEASE_S3_BUCKET=atlassian-software"
                    - "ATL_RELEASE_S3_PATH=releases/confluence"
                    - "ATL_SYNCHRONY_WAITING_CONFIG_TIME=20"
                    - "ATL_SYNCHRONY_STACK_SPACE=-Xss2048k"
                    - "ATL_SYNCHRONY_MEMORY=-Xmx2g"
                    - "ATL_APP_DATA_MOUNT_ENABLED=false"
                    - !Sub ["ATL_DB_PASSWORD=${DBMasterUserPassword}", DBMasterUserPassword: !Ref DBMasterUserPassword]
                    - "ATL_DB_NAME=confluence"
                    - !Sub ["ATL_DB_HOST=$DbHost", DbHost: !GetAtt DB.Endpoint.Address]
                    - !Sub ["ATL_DB_PORT=${DBEndpointPort}", DBEndpointPort: !GetAtt DB.Endpoint.Port]
                    - "ATL_JDBC_DRIVER=org.postgresql.Driver"
                    - !Sub
                      - "ATL_JDBC_URL=jdbc:postgresql://${DBEndpointAddress}:${DBEndpointPort}/confluence"
                      - DBEndpointAddress: !GetAtt DB.Endpoint.Address
                        DBEndpointPort: !GetAtt DB.Endpoint.Port
                    - "ATL_JDBC_USER=atlconfluence"
                    - !Sub ["ATL_JDBC_PASSWORD=${DBPassword}", DBPassword: !Ref DBPassword]
                    - "ATL_ENABLED_PRODUCTS=Synchrony"
                    - "ATL_ENABLED_SHARED_HOMES="
                    - !Sub ["ATL_CONFLUENCE_VERSION=${ConfluenceVersion}", ConfluenceVersion: !Ref ConfluenceVersion]
                    - "ATL_CONFLUENCE_DATA_CENTER=true"
                    - "ATL_NGINX_ENABLED=false"
                    - "ATL_POSTGRES_ENABLED=false"
                    - !Sub ["ATL_PROXY_NAME=${ProxyName}", ProxyName: !If [UseHostedZone, !Ref LoadBalancerCname, !GetAtt LoadBalancer.DNSName]]
                    - "ATL_SSL_SELF_CERT_ENABLED=false"
                    - !If [DoSSL, "ATL_SSL_PROXY=true", !Ref "AWS::NoValue"]
                    - !Sub ["ATL_AWS_STACK_NAME=${StackName}", StackName: !Ref "AWS::StackName"]
                    - !Sub ["ATL_HAZELCAST_NETWORK_AWS_IAM_ROLE=${ConfluenceClusterNodeRole}", ConfluenceClusterNodeRole: !Ref ConfluenceClusterNodeRole]
                    - !Sub ["ATL_HAZELCAST_NETWORK_AWS_IAM_REGION=${HazelcastAWSRegion}", HazelcastAWSRegion: !Ref "AWS::Region"]
                    - "ATL_HAZELCAST_NETWORK_AWS_TAG_KEY=synchrony_service"
                    - !Sub ["ATL_HAZELCAST_NETWORK_AWS_TAG_VALUE=${HazelcastAWSTagValue}", HazelcastAWSTagValue: !Ref "AWS::StackName"]
            /etc/cfn/cfn-hup.conf:
              content:
                !Join
                  - "\n"
                  -
                    - "[main]"
                    - !Sub ["stack=${StackId}", StackId: !Ref "AWS::StackId"]
                    - !Sub ["region=${Region}", Region: !Ref "AWS::Region"]
              mode: 000400
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content:
                !Join
                  - "\n"
                  -
                    - "[cfn-auto-reloader-hook]"
                    - triggers=post.update
                    - "path=Resources.SynchronyClusterNodeLaunchConfig.Metadata.AWS::CloudFormation::Init"
                    - !Sub
                      - "action=/opt/aws/bin/cfn-init -v --stack ${StackName} --resource SynchronyClusterNodeLaunchConfig --region ${Region}"
                      - StackName: !Ref "AWS::StackName"
                        Region: !Ref "AWS::Region"
                    - runas=root
          commands:
            010_make_mount_point:
              command: mkdir -p /media/atl
              ignoreErrors: false
            020_add_nfs_mount:
              command:
                !Join
                  - ""
                  -
                    - "echo "
                    - !If
                      - UseHostedZone
                      - !Ref EFSCname
                      - !Sub
                          - $(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone).${ElasticFileSystem}".efs."${Region}".amazonaws.com"
                          - ElasticFileSystem: !Ref ElasticFileSystem
                            Region: !Ref "AWS::Region"
                    - ":/ /media/atl nfs4 noatime,intr,rsize=32768,wsize=32768 0 0 >>/etc/fstab"
              ignoreErrors: false
            030_mount_all:
              command: mount -a
              ignoreErrors: true
            040_make_shared_home_dir:
              command: mkdir -p /media/atl/confluence/shared-home
              ignoreErrors: false
          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              collectd:
                !If [DoCollectd, {enabled: true, ensureRunning: true}, !Ref 'AWS::NoValue']
              rpcbind:
                enabled: true
                ensureRunning: true
                packages:
                  yum:
                    - nfs-utils
    Properties:
      AssociatePublicIpAddress: !Ref AssociatePublicIpAddress
      BlockDeviceMappings:
        - DeviceName: /dev/xvdf
          Ebs: {}
          NoDevice: true
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref ConfluenceClusterNodeInstanceProfile
      ImageId:
        !FindInMap
          - AWSRegionArch2AMI
          - !Ref AWS::Region
          - !FindInMap
              - AWSInstanceType2Arch
              - !Ref SynchronyNodeInstanceType
              - Arch
      InstanceType: !Ref SynchronyNodeInstanceType
      SecurityGroups: [!Ref SecurityGroup]
      UserData:
        Fn::Base64:
          !Join
            - ""
            -
              - "#!/bin/bash -xe\n"
              - "yum update -y aws-cfn-bootstrap\n"
              - !Sub ["/opt/aws/bin/cfn-init -v --stack ${StackName}", StackName: !Ref "AWS::StackName"]
              - !Sub [" --resource SynchronyClusterNodeLaunchConfig --region ${Region}\n", Region: !Ref "AWS::Region"]
              - !Sub ["/opt/aws/bin/cfn-signal -e $? --stack ${StackName}", StackName: !Ref "AWS::StackName"]
              - !Sub [" --resource SynchronyClusterNodeGroup --region ${Region}", Region: !Ref "AWS::Region"]
  SynchronyClusterNodeScaleUpPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref SynchronyClusterNodeGroup
      Cooldown: 600
      ScalingAdjustment: 1
  SynchronyClusterNodeScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref SynchronyClusterNodeGroup
      Cooldown: 600
      ScalingAdjustment: -1
  SynchronyCPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale up if CPU > 60% for 5 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: 60
      EvaluationPeriods: 5
      Threshold: 60
      AlarmActions: [!Ref SynchronyClusterNodeScaleUpPolicy]
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref SynchronyClusterNodeGroup
      ComparisonOperator: GreaterThanThreshold
  SynchronyCPUAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale down if CPU < 40% for 30 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: 60
      EvaluationPeriods: 30
      Threshold: 40
      AlarmActions: [!Ref SynchronyClusterNodeScaleDownPolicy]
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref SynchronyClusterNodeGroup
      ComparisonOperator: LessThanThreshold
# Elastic file system
  ElasticFileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      FileSystemTags:
        - Key: Name
          Value: !Join [' ', [!Ref 'AWS::StackName', 'cluster shared-files']]
        - Key: Application
          Value: !Ref AWS::StackId
  EFSMountAz1:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref ElasticFileSystem
      SecurityGroups: [!Ref SecurityGroup]
      SubnetId: !Select [0, !Ref InternalSubnets]
  EFSMountAz2:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref ElasticFileSystem
      SecurityGroups: [!Ref SecurityGroup]
      SubnetId: !Select [1, !Ref InternalSubnets]
  EFSCname:
    Type: AWS::Route53::RecordSet
    Condition: UseHostedZone
    Properties:
      HostedZoneName: !Ref HostedZone
      Comment: Route53 cname for the efs
      Name: !Join ['.', [!Ref 'AWS::StackName', 'efs', !Ref 'HostedZone']]
      Type: CNAME
      TTL: '900'
      ResourceRecords:
        - !Join ['.', [!Ref ElasticFileSystem, 'efs', !Ref 'AWS::Region', 'amazonaws.com.']]
# Database
  DB:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: !Ref DBStorage
      DBInstanceClass: !Ref DBInstanceClass
      DBInstanceIdentifier: !Ref AWS::StackName
      DBSubnetGroupName: !Ref DBSubnetGroup
      DBSnapshotIdentifier: !If [DoRestoreFromRDSSnapshot, !Ref DBSnapshotId, !Ref 'AWS::NoValue']
      Engine: postgres
      EngineVersion: 9.5.2
      MasterUsername: postgres
      MasterUserPassword: !If [DoSetDBMasterUserPassword, !Ref DBMasterUserPassword, !Ref 'AWS::NoValue']
      StorageType: !If [DBProvisionedIops, io1, gp2]
      Iops: !If [DBProvisionedIops, !Ref DBIops, !Ref 'AWS::NoValue']
      MultiAZ: !Ref DBMultiAZ
      VPCSecurityGroups: [!Ref SecurityGroup]
      Tags:
        - Key: Name
          Value: Confluence PostgreSQL Database
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
     DBSubnetGroupDescription: DBSubnetGroup
     SubnetIds: !Ref InternalSubnets
  DBCname:
    Condition: UseHostedZone
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Ref HostedZone
      Comment: Route53 cname for the RDS
      Name: !Join ['.', [!Ref 'AWS::StackName', 'db', !Ref 'HostedZone']]
      Type: CNAME
      TTL: '900'
      ResourceRecords:
        - !GetAtt DB.Endpoint.Address
# Loadbalancer
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: 300
      Subnets: !Ref ExternalSubnets
      Scheme: !If [UsePublicIp, 'internet-facing', 'internal']
      SecurityGroups: [!Ref SecurityGroup]
  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
        - CertificateArn:
            !If
              - DoSSL
              - !Sub
                - "arn:aws:iam::${AccountId}:server-certificate/${SSLCertificateName}"
                - AccountId: !Ref AWS::AccountId
                  SSLCertificateName: !Ref SSLCertificateName
              - !Ref AWS::NoValue
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref MainTargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: !If [DoSSL, 443, 80]
      Protocol: !If [DoSSL, HTTPS, HTTP]
  LoadBalancerCname:
    Condition: UseHostedZone
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Ref HostedZone
      Comment: Route53 cname for the ALB
      Name: !Sub
        - "${SubDomainName}.${HostedZone}"
        - SubDomainName: !If [UseSubDomainName, !Ref 'SubDomainName', !Ref 'AWS::StackName']
          HostedZone: !Ref 'HostedZone'
      Type: CNAME
      TTL: 900
      ResourceRecords:
        - !GetAtt LoadBalancer.DNSName
  SynchronyListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref SynchronyTargetGroup
      Conditions:
        - Field: path-pattern
          Values:
            - '/synchrony/*'
      ListenerArn: !Ref LoadBalancerListener
      Priority: 1
  MainTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 8080
      Protocol: HTTP
      VpcId: !Ref VPC
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 4
      Matcher:
        HttpCode: 200
      HealthCheckPath: !If [UseContextPath, !Join ['', [!Ref 'TomcatContextPath', '/status']], '/status']
      HealthCheckPort: 8080
      HealthCheckProtocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: true
        - Key: stickiness.type
          Value: lb_cookie
      Tags:
        - Key: Name
          Value: MainTargetGroup
        - Key: Cluster
          Value: !Ref AWS::StackName
    DependsOn:
      - LoadBalancer
  SynchronyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 8091
      Protocol: HTTP
      VpcId: !Ref VPC
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 4
      Matcher:
        HttpCode: 200
      HealthCheckPath: /synchrony/heartbeat
      HealthCheckPort: 8091
      HealthCheckProtocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: true
        - Key: stickiness.type
          Value: lb_cookie
      Tags:
        - Key: Name
          Value: SynchronyTargetGroup
        - Key: Cluster
          Value: !Ref AWS::StackName
    DependsOn:
      - LoadBalancer
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags:
        - Key: Name
          Value: !Join [' ', [!Ref "AWS::StackName", 'sg']]
      GroupDescription: Security group allowing SSH and HTTP/HTTPS access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref CidrBlock
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref CidrBlock
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref CidrBlock
        - IpProtocol: tcp
          FromPort: 25500
          ToPort: 25500
          CidrIp: !Ref CidrBlock
        - IpProtocol: tcp
          FromPort: 5801
          ToPort: 5801
          CidrIp: !Ref CidrBlock
        - IpProtocol: tcp
          FromPort: 8091
          ToPort: 8091
          CidrIp: !Ref CidrBlock
  SecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      SourceSecurityGroupId: !Ref SecurityGroup
Outputs:
  ConfluenceTargetGroupARN:
    Description: The name of the load balancer of Confluence cluster nodes
    Value: !Ref MainTargetGroup
  ClusterNodeGroup:
    Description: The name of the auto scaling group of Confluence cluster nodes
    Value: !Ref ClusterNodeGroup
  SynchronyClusterNodeGroup:
    Description: The name of the auto scaling group of Synchrony cluster nodes
    Value: !Ref SynchronyClusterNodeGroup
  URL:
    Description: The URL of the Confluence Data Center instance
    Value: !Sub
      - "${HTTP}://${LoadBalancerDNSName}"
      - HTTP: !If [DoSSL, 'https', 'http']
        LoadBalancerDNSName: !If [UseHostedZone, !Ref LoadBalancerCname, !GetAtt LoadBalancer.DNSName]
