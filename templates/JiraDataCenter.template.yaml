AWSTemplateFormatVersion: 2010-09-09
Description: Atlassian JIRA Data Center
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: JIRA setup
        Parameters:
          - JiraProduct
          - JiraVersion
      - Label:
          default: Cluster nodes
        Parameters:
          - ClusterNodeInstanceType
          - ClusterNodeMin
          - ClusterNodeMax
      - Label:
          default: Database
        Parameters:
          - DBInstanceClass
          - DBMasterUserPassword
          - DBPassword
          - DBStorage
          - DBStorageType
          - DBIops
          - DBMultiAZ
      - Label:
          default: Networking
        Parameters:
          - VPC
          - ExternalSubnets
          - InternalSubnets
          - AssociatePublicIpAddress
          - CidrBlock
          - KeyName
          - SSLCertificateName
      - Label:
          default: DNS (Optional)
        Parameters:
          - CustomDnsName
          - HostedZone
      - Label:
          default: Advanced (Optional)
        Parameters:
          - StartCollectd
          - JiraDownloadUrl
      - Label:
          default: Application Tuning (Optional) - dbref - https://confluence.atlassian.com/display/AdminJIRAServer/Tuning+database+connections tomcatref - http://tomcat.apache.org/tomcat-7.0-doc/config/http.html
        Parameters:
            - TomcatContextPath
            - CatalinaOpts
            - JvmHeapOverride
            - DBMaxIdle
            - DBMaxWaitMillis
            - DBMinEvictableIdleTimeMillis
            - DBMinIdle
            - DBPoolMaxSize
            - DBPoolMinSize
            - DBRemoveAbandoned
            - DBRemoveAbandonedTimeout
            - DBTestOnBorrow
            - DBTestWhileIdle
            - DBTimeBetweenEvictionRunsMillis
            - TomcatAcceptCount
            - TomcatConnectionTimeout
            - TomcatEnableLookups
            - TomcatMaxThreads
            - TomcatMinSpareThreads
            - TomcatProtocol
            - TomcatProxyPort
            - TomcatRedirectPort
            - TomcatScheme
            - TomcatSecure
    ParameterLabels:
      AssociatePublicIpAddress:
        default: Assign public IP
      CatalinaOpts:
        default: Catalina options
      CidrBlock:
        default: Permitted IP range
      ClusterNodeMax:
        default: Maximum number of cluster nodes
      ClusterNodeMin:
        default: Minimum number of cluster nodes
      ClusterNodeInstanceType:
        default: JIRA cluster node instance type
      CustomDnsName:
        default: Existing DNS name (optional)
      DBInstanceClass:
        default: Database instance class
      DBIops:
        default: RDS Provisioned IOPS
      DBMasterUserPassword:
        default: Master password *
      DBMaxIdle:
        default: DB Maximum Idle
      DBMaxWaitMillis:
        default: DB Maximum Wait
      DBMinEvictableIdleTimeMillis:
        default: DB Minimum Evictable Idle Time
      DBMinIdle:
        default: DB Minimum Idle Connections
      DBPassword:
        default: JIRA database password *
      DBPoolMaxSize:
        default: DB Pool Maximum Size
      DBPoolMinSize:
        default: DB Pool Minimum Size
      DBRemoveAbandoned:
        default: DB Remove Abandoned?
      DBRemoveAbandonedTimeout:
        default: DB Remove Abandoned Timeout
      DBStorage:
        default: Database storage
      DBStorageType:
        default: Database storage type
      DBTestOnBorrow:
        default: DB Test On Borrow?
      DBTestWhileIdle:
        default: DB Test While Idle?
      DBTimeBetweenEvictionRunsMillis:
        default: DB Time Between Eviction Runs
      ExternalSubnets:
        default: External subnets *
      HostedZone:
        default: R53 Hosted Zone (optional)
      InternalSubnets:
        default: Internal subnets *
      JiraProduct:
        default: JIRA Product *
      JiraVersion:
        default: Version *
      JiraDownloadUrl:
        default: Jira Download URL
      JvmHeapOverride:
        default: JVM Heap Size Override
      KeyName:
        default: Key Name *
      SSLCertificateName:
        default: SSL Certificate Name
      TomcatAcceptCount:
        default: Tomcat Accept Count
      TomcatConnectionTimeout:
        default: Tomcat Connection Timeout
      TomcatContextPath:
        default: Tomcat Context Path
      TomcatEnableLookups:
        default: Tomcat Enable DNS Lookups
      TomcatMaxThreads:
        default: Tomcat Maximum Threads
      TomcatMinSpareThreads:
        default: Tomcat Minimum Spare Threads
      TomcatProtocol:
        default: Tomcat Protocol
      TomcatProxyPort:
        default: Tomcat Proxy Port
      TomcatRedirectPort:
        default: Tomcat Redirect Port
      TomcatScheme:
        default: Tomcat protocol Scheme
      TomcatSecure:
        default: Tomcat Secure?
      VPC:
        default: VPC *
Parameters:
  AssociatePublicIpAddress:
    Default: 'true'
    Description: Controls if the EC2 instances are assigned a public IP address
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    ConstraintDescription: Must be 'true' or 'false'.
  CidrBlock:
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
    Description: The CIDR IP range that is permitted to access the Confluence URL. Use 0.0.0.0/0 if you want public access from the internet.
    Type: String
    MinLength: 9
    MaxLength: 18
  ClusterNodeMax:
    Default: '1'
    Type: Number
  ClusterNodeMin:
    Default: '1'
    Type: Number
  ClusterNodeInstanceType:
    Default: c3.xlarge
    Type: String
    AllowedValues:
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - m3.medium
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - x1.16xlarge
      - x1.32xlarge
    ConstraintDescription: >-
      Must be a valid EC2 instance type from the selection list
    Description: Instance type for the cluster nodes.
  CatalinaOpts:
    Default: ''
    Description: Pass in any additional jvm options to tune Catalina
    Type: String
  DBInstanceClass:
    Default: db.m4.xlarge
    Description: RDS instance type
    Type: String
    AllowedValues:
      - db.m3.medium
      - db.m3.large
      - db.m3.xlarge
      - db.m3.2xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.r3.large
      - db.r3.xlarge
      - db.r3.2xlarge
      - db.r3.4xlarge
      - db.r3.8xlarge
      - db.t2.medium
      - db.t2.large
    ConstraintDescription: 'Must be a valid RDS instance class, ''db.t2.medium'' or larger.'
  DBMasterUserPassword:
    Default: ''
    NoEcho: 'true'
    Description: Database admin account password.
    Type: String
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: Must be at least 8 alphanumeric characters.
  DBPassword:
    Default: ''
    Description: Database user account password.
    Type: String
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: Must contain only alphanumeric characters.
    NoEcho: 'true'
  DBStorage:
    Default: '10'
    Description: 'Database allocated storage size, in gigabytes (GB)'
    Type: Number
  DBStorageType:
    Default: General Purpose (SSD)
    Description: Database storage type
    Type: String
    AllowedValues:
      - General Purpose (SSD)
      - Provisioned IOPS
    ConstraintDescription: Must be 'General Purpose (SSD)' or 'Provisioned IOPS'.
  DBMultiAZ:
    Default: 'true'
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    ConstraintDescription: Must be 'true' or 'false'.
  DBIops:
    Default: '1000'
    Description: 'Must be in the range of 1000 - 30000 and a multiple of 1000. This value is only used with Provisioned IOPS. Note: The ratio of IOPS per allocated-storage must be between 3.00 and 10.00.'
    Type: Number
    MinValue: '1000'
    MaxValue: '30000'
    ConstraintDescription: Must be in the range 1000 - 30000.
  DBMaxIdle:
    Default: "20"
    Description: The maximum number of database connections that are allowed to remain idle in the pool
    Type: String
  DBMaxWaitMillis:
    Default: "10000"
    Description: The length of time (in milliseconds) that JIRA is allowed to wait for a database connection to become available (while there are no free ones available in the pool), before returning an error
    Type: String
  DBMinEvictableIdleTimeMillis:
    Default: "180000"
    Description: The minimum amount of time an object may sit idle in the database connection pool before it is eligible for eviction by the idle object eviction
    Type: String
  DBMinIdle:
    Default: "10"
    Description: The minimum number of idle database connections that are kept open at any time
    Type: String
  DBPoolMaxSize:
    Default: "20"
    Description: The maximum number of database connections that can be opened at any time
    Type: String
  DBPoolMinSize:
    Default: "20"
    Description: The minimum number of idle database connections that are kept open at any time
    Type: String
  DBRemoveAbandoned:
    Default: "true"
    Description: Flag to remove abandoned database connections if they exceed the Removed Abandoned Timeout
    Type: String
  DBRemoveAbandonedTimeout:
    Default: "60"
    Description: The length of time (in seconds) that a database connection can be idle before it is considered abandoned
    Type: String
  DBTestOnBorrow:
    Default: "false"
    Description: Tests if the database connection is valid when it is borrowed from the database connection pool by JIRA
    Type: String
  DBTestWhileIdle:
    Default: "true"
    Description: Periodically tests if the database connection is valid when it is idle
    Type: String
  DBTimeBetweenEvictionRunsMillis:
    Default: "60000"
    Description: The number of milliseconds to sleep between runs of the idle object eviction thread. When non-positive, no idle object eviction thread will be run
    Type: String
  JiraDownloadUrl:
    Default: ""
    Description: This parameter is used to download a custom Jira version for testing purposes. Leave this parameter blank to automatically download the official version you specified earlier. internal dev versions can be found at downloads.internal.atlassian.com:/import/downloads/software/jira/downloads/atlassian-jira-<product>-<version>.x64.bin
    Type: String
    ConstraintDescription: "Must be a valid Jira download url from version 7 or higher"
  JiraProduct:
    Description: The JIRA Product to install. Installs latest available version of the selected product
    Type: String
    ConstraintDescription: 'Must be "Software", "ServiceDesk", or "Core"'
    AllowedValues:
      - Software
      - ServiceDesk
      - Core
  JiraVersion:
    Default: "latest"
    AllowedPattern: "(\\d+\\.\\d+\\.\\d+(-?.*))|(latest)"
    ConstraintDescription: "Must be a valid Jira version number, for example 7.2.3. Find valid versions at https://jira.atlassian.com/display/DOC/Jira+Release+Notes"
    Description: The version of Jira to install (found at downloads.internal.atlassian.com:/import/downloads/software/jira/downloads/atlassian-jira-<product>-<version>-x64.bin)
    Type: String
  JvmHeapOverride:
    Default: ""
    Description: Override the default amount of Memory to allocate to the JVM for your instance type
    Type: String
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: Must be the name of an existing EC2 Key Pair.
  CustomDnsName:
    Description: 'Use custom existing DNS name for your JIRA Data Center instance. This will take prescedence over HostedZone. Please note: you must own the domain and configure it to point at the load balancer.'
    Type: String
  HostedZone:
    Default: ''
    ConstraintDescription: Must be the name of an existing Route53 Hosted Zone.
    Description: The domain name of the Route53 PRIVATE Hosted Zone in which to create cnames
    Type: String
  SSLCertificateName:
    Default: ''
    Description: "The name of your Server Certificate to use for HTTPS.  Leave blank if you don't want to set up HTTPS at this time"
    Type: String
    MinLength: '0'
    MaxLength: '32'
  StartCollectd:
    Default: 'true'
    Description: Should the collectd service be started
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    ConstraintDescription: Must be 'true' or 'false'.
  TomcatAcceptCount:
    Default: "10"
    Description: The maximum queue length for incoming connection requests when all possible request processing threads are in use
    Type: String
  TomcatConnectionTimeout:
    Default: "20000"
    Description: The number of milliseconds this Connector will wait, after accepting a connection, for the request URI line to be presented
    Type: String
  TomcatContextPath:
    Default: ""
    Description: The context path of this web application, which is matched against the beginning of each request URI to select the appropriate web application for processing
    Type: String
  TomcatEnableLookups:
    Default: "false"
    Description: Set to true if you want calls to request.getRemoteHost() to perform DNS lookups in order to return the actual host name of the remote client
    Type: String
  TomcatMaxThreads:
    Default: "200"
    Description: The maximum number of request processing threads to be created by this Connector, which therefore determines the maximum number of simultaneous requests that can be handled
    Type: String
  TomcatMinSpareThreads:
    Default: "10"
    Description: The minimum number of threads always kept running
    Type: String
  TomcatProtocol:
    Default: "org.apache.coyote.http11.Http11NioProtocol"
    Description: Sets the protocol to handle incoming traffic
    Type: String
  TomcatProxyPort:
    Default: "80"
    Description: If this Connector is being used in a proxy configuration, configure this attribute to specify the server port to be returned for calls to request.getServerPort()
    Type: String
  TomcatRedirectPort:
    Default: "8443"
    Description: For a non-ssl conenctor actioning a redirect to ssl URI, Catalina will automatically redirect the request to the port number specified here
    Type: String
  TomcatScheme:
    Default: "http"
    Description: The name of the protocol you wish to have returned, ie "https" for an SSL Connector
    Type: String
  TomcatSecure:
    Default: "false"
    Description: Set this attribute to true if you wish to have calls to request.isSecure() to return true for requests received by this Connector. Needed for ssl offloading.
    Type: String
  ExternalSubnets:
    Description: >-
      Subnets (two or more) where your user-facing load balancer will be
      deployed. MUST be within the selected VPC.
    Type: 'List<AWS::EC2::Subnet::Id>'
    ConstraintDescription: Must be a list of two or more Subnet ID's within the selected VPC.
  InternalSubnets:
    Description: >-
      Subnets (two or more) where your cluster nodes and other internal
      infrastructure will be deployed. MUST be within the selected VPC. Specify
      the ExternalSubnets again here if you wish to deploy the whole stack into
      the same subnets.
    Type: 'List<AWS::EC2::Subnet::Id>'
    ConstraintDescription: Must be a list of two or more Subnet ID's within the selected VPC.
  VPC:
    Description: Virtual Private Cloud
    Type: 'AWS::EC2::VPC::Id'
    ConstraintDescription: Must be the ID of a VPC.
Conditions:
  DBProvisionedIops:
    !Equals [!Ref DBStorageType, Provisioned IOPS]
  DoCollectd:
    !Equals [!Ref StartCollectd, true]
  DoSetDBMasterUserPassword:
    !Not [!Equals [!Ref DBMasterUserPassword, ""]]
  DoSSL:
    !Not [!Equals [!Ref SSLCertificateName, ""]]
  OverrideHeap:
    !Not [!Equals [!Ref JvmHeapOverride, ""]]
  UseContextPath:
    !Not [!Equals [!Ref TomcatContextPath, ""]]
  UsePublicIp: !Equals
    - !Ref AssociatePublicIpAddress
    - 'true'
  UseCustomDnsName: !Not
    - !Equals
      - !Ref CustomDnsName
      - ''
  UseHostedZone: !Not
    - !Equals
      - !Ref HostedZone
      - ''
Mappings:
  AWSInstanceType2Arch:
    c3.large:
      Arch: HVM64
      Jvmheap: 3072
    c3.xlarge:
      Arch: HVM64
      Jvmheap: 6144
    c3.2xlarge:
      Arch: HVM64
      Jvmheap: 12288
    c3.4xlarge:
      Arch: HVM64
      Jvmheap: 12288
    c3.8xlarge:
      Arch: HVM64
      Jvmheap: 12288
    c4.large:
      Arch: HVM64
      Jvmheap: 3072
    c4.xlarge:
      Arch: HVM64
      Jvmheap: 6144
    c4.2xlarge:
      Arch: HVM64
      Jvmheap: 12288
    c4.4xlarge:
      Arch: HVM64
      Jvmheap: 12288
    c4.8xlarge:
      Arch: HVM64
      Jvmheap: 12288
    d2.xlarge:
      Arch: HVM64
      Jvmheap: 12288
    d2.2xlarge:
      Arch: HVM64
      Jvmheap: 12288
    d2.4xlarge:
      Arch: HVM64
      Jvmheap: 12288
    d2.8xlarge:
      Arch: HVM64
      Jvmheap: 12288
    i3.large:
      Arch: HVM64
      Jvmheap: 12288
    i3.xlarge:
      Arch: HVM64
      Jvmheap: 12288
    i3.2xlarge:
      Arch: HVM64
      Jvmheap: 12288
    i3.4xlarge:
      Arch: HVM64
      Jvmheap: 12288
    i3.8xlarge:
      Arch: HVM64
      Jvmheap: 12288
    m3.medium:
      Arch: HVM64
      Jvmheap: 3072
    m4.large:
      Arch: HVM64
      Jvmheap: 6144
    m4.xlarge:
      Arch: HVM64
      Jvmheap: 12288
    m4.2xlarge:
      Arch: HVM64
      Jvmheap: 12288
    m4.4xlarge:
      Arch: HVM64
      Jvmheap: 12288
    m4.10xlarge:
      Arch: HVM64
      Jvmheap: 12288
    m4.16xlarge:
      Arch: HVM64
      Jvmheap: 12288
    r3.large:
      Arch: HVM64
      Jvmheap: 12288
    r3.xlarge:
      Arch: HVM64
      Jvmheap: 12288
    r3.2xlarge:
      Arch: HVM64
      Jvmheap: 12288
    r3.4xlarge:
      Arch: HVM64
      Jvmheap: 12288
    r3.8xlarge:
      Arch: HVM64
      Jvmheap: 12288
    r4.large:
      Arch: HVM64
      Jvmheap: 12288
    r4.xlarge:
      Arch: HVM64
      Jvmheap: 12288
    r4.2xlarge:
      Arch: HVM64
      Jvmheap: 12288
    r4.4xlarge:
      Arch: HVM64
      Jvmheap: 12288
    r4.8xlarge:
      Arch: HVM64
      Jvmheap: 12288
    t2.medium:
      Arch: HVM64
      Jvmheap: 3072
    t2.large:
      Arch: HVM64
      Jvmheap: 6144
    t2.xlarge:
      Arch: HVM64
      Jvmheap: 12288
    t2.2xlarge:
      Arch: HVM64
      Jvmheap: 12288
    x1.16xlarge:
      Arch: HVM64
      Jvmheap: 12288
    x1.32xlarge:
      Arch: HVM64
      Jvmheap: 12288
  AWSRegionArch2AMI:
    us-east-1:
      HVM64: ami-bb5642ac
      HVMG2: NOT_SUPPORTED
    ap-south-1:
      HVM64: ami-67c6b108
      HVMG2: NOT_SUPPORTED
    eu-west-2:
      HVM64: ami-eeede78a
      HVMG2: NOT_SUPPORTED
    eu-west-1:
      HVM64: ami-afcaeadc
      HVMG2: NOT_SUPPORTED
    ap-northeast-2:
      HVM64: ami-15a0767b
      HVMG2: NOT_SUPPORTED
    ap-northeast-1:
      HVM64: ami-da107bbd
      HVMG2: NOT_SUPPORTED
    sa-east-1:
      HVM64: ami-5a71e936
      HVMG2: NOT_SUPPORTED
    ca-central-1:
      HVM64: ami-ab2a98cf
      HVMG2: NOT_SUPPORTED
    ap-southeast-1:
      HVM64: ami-b7ae00d4
      HVMG2: NOT_SUPPORTED
    ap-southeast-2:
      HVM64: ami-5bc2f938
      HVMG2: NOT_SUPPORTED
    eu-central-1:
      HVM64: ami-982aeaf7
      HVMG2: NOT_SUPPORTED
    us-east-2:
      HVM64: ami-1ccc9679
      HVMG2: NOT_SUPPORTED
    us-west-1:
      HVM64: ami-f0267790
      HVMG2: NOT_SUPPORTED
    us-west-2:
      HVM64: ami-560fbb36
      HVMG2: NOT_SUPPORTED
  JIRAProduct2NameAndVersion:
    Software:
      name: jira-software
      shortdisplayname: '"JIRA SW"'
      fulldisplayname: '"Atlassian JIRA Software"'
    ServiceDesk:
      name: servicedesk
      shortdisplayname: '"JIRA SD"'
      fulldisplayname: '"Atlassian JIRA Service Desk"'
    Core:
      name: jira-core
      shortdisplayname: '"JIRA Core"'
      fulldisplayname: '"Atlassian JIRA Core"'
Resources:
  ClusterNodeGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      DesiredCapacity: !Ref ClusterNodeMin
      LaunchConfigurationName: !Ref ClusterNodeLaunchConfig
      MaxSize: !Ref ClusterNodeMax
      MinSize: !Ref ClusterNodeMin
      LoadBalancerNames:
        - !Ref LoadBalancer
      VPCZoneIdentifier: !Ref InternalSubnets
      Tags:
        - Key: Name
          Value: !Sub ["${StackName} JIRA Node", StackName: !Ref "AWS::StackName"]
          PropagateAtLaunch: true
        - Key: Cluster
          Value: !Ref 'AWS::StackName'
          PropagateAtLaunch: true
  ClusterNodeLaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    DependsOn:
      - EFSMountAz1
      - EFSMountAz2
      - DB
    Metadata:
      Comment: ''
      'AWS::CloudFormation::Init':
        '0':
          files:
            /etc/atl:
              content:
                'Fn::Join':
                  - "\n"
                  -
                    - "ATL_NGINX_ENABLED=false"
                    - "ATL_APP_DATA_MOUNT_ENABLED=false"
                    - "ATL_DB_NAME=jira"
                    - "ATL_DB_USER=jira"
                  - !Sub
                    - "ATL_JVM_HEAP=${AtlJvmHeap}"
                    - AtlJvmHeap: !If
                        - OverrideHeap
                        - !Ref 'JvmHeapOverride'
                        - !FindInMap
                            - AWSInstanceType2Arch
                            - !Ref ClusterNodeInstanceType
                            - Jvmheap
                  - !Sub ["ATL_CATALINA_OPTS=\"${CatalinaOpts}\"", CatalinaOpts: !Ref CatalinaOpts]
                  - !Sub ["ATL_DB_PASSWORD=${DBMasterUserPassword}", DBMasterUserPassword: !Ref DBMasterUserPassword]
                  - !Sub ["ATL_DB_HOST=${DBEndpointAddress}", DBEndpointAddress: !GetAtt DB.Endpoint.Address]
                  - !Sub ["ATL_DB_PORT=${DBEndpointPort}", DBEndpointPort: !GetAtt DB.Endpoint.Port]
                  - !Sub ["ATL_DB_MAXIDLE=${DBMaxIdle}", DBMaxIdle: !Ref DBMaxIdle]
                  - !Sub ["ATL_DB_MAXWAITMILLIS=${DBMaxWaitMillis}", DBMaxWaitMillis: !Ref DBMaxWaitMillis]
                  - !Sub ["ATL_DB_MINEVICTABLEIDLETIMEMILLIS=${DBMinEvictableIdleTimeMillis}", DBMinEvictableIdleTimeMillis: !Ref DBMinEvictableIdleTimeMillis]
                  - !Sub ["ATL_DB_MINIDLE=${DBMinIdle}", DBMinIdle: !Ref DBMinIdle]
                  - !Sub ["ATL_DB_POOLMAXSIZE=${DBPoolMaxSize}", DBPoolMaxSize: !Ref DBPoolMaxSize]
                  - !Sub ["ATL_DB_POOLMINSIZE=${DBPoolMinSize}", DBPoolMinSize: !Ref DBPoolMinSize]
                  - !Sub ["ATL_DB_REMOVEABANDONED=${DBRemoveAbandoned}", DBRemoveAbandoned: !Ref DBRemoveAbandoned]
                  - !Sub ["ATL_DB_REMOVEABANDONEDTIMEOUT=${DBRemoveAbandonedTimeout}", DBRemoveAbandonedTimeout: !Ref DBRemoveAbandonedTimeout]
                  - !Sub ["ATL_DB_TESTONBORROW=${DBTestOnBorrow}", DBTestOnBorrow: !Ref DBTestOnBorrow]
                  - !Sub ["ATL_DB_TESTWHILEIDLE=${DBTestWhileIdle}", DBTestWhileIdle: !Ref DBTestWhileIdle]
                  - !Sub ["ATL_DB_TIMEBETWEENEVICTIONRUNSMILLIS=${DBTimeBetweenEvictionRunsMillis}", DBTimeBetweenEvictionRunsMillis: !Ref DBTimeBetweenEvictionRunsMillis]
                  - "ATL_JDBC_DRIVER=org.postgresql.Driver"
                  - !Sub
                    - "ATL_JDBC_URL=jdbc:postgresql://${DBEndpointAddress}:${DBEndpointPort}/jira"
                    - DBEndpointAddress: !GetAtt DB.Endpoint.Address
                      DBEndpointPort: !GetAtt DB.Endpoint.Port
                  - "ATL_JDBC_USER=atljira"
                  - !Sub ["ATL_JDBC_PASSWORD=${DBPassword}", DBPassword: !Ref DBPassword]
                  - "ATL_ENABLED_PRODUCTS=Jira"
                  - !Sub ["ATL_JIRA_VERSION=${JiraVersion}", JiraVersion: !Ref JiraVersion]
                  - !Sub ["ATL_JIRA_INSTALLER_DOWNLOAD_URL=${JiraDownloadUrl}", JiraDownloadUrl: !Ref JiraDownloadUrl]
                  - "ATL_ENABLED_SHARED_HOMES="
                  - !Sub
                    - "ATL_JIRA_NAME=${JiraProductName}"
                    - JiraProductName: !FindInMap [ "JIRAProduct2NameAndVersion", !Ref JiraProduct, "name"]
                  - !Sub
                    - "ATL_JIRA_SHORT_DISPLAY_NAME=${JiraShortDisplayName}"
                    - JiraShortDisplayName: !FindInMap [ "JIRAProduct2NameAndVersion", !Ref JiraProduct, "shortdisplayname"]
                  - !Sub
                    - "ATL_JIRA_FULL_DISPLAY_NAME=${JiraFullDisplayName}"
                    - JiraFullDisplayName: !FindInMap [ "JIRAProduct2NameAndVersion", !Ref JiraProduct, "fulldisplayname"]
                  - "ATL_RELEASE_S3_BUCKET=atlassian-software"
                  - "ATL_RELEASE_S3_PATH=releases"
                  - "ATL_POSTGRES_ENABLED=false"
                  - !Sub
                    - "ATL_PROXY_NAME=${AtlProxyName}"
                    - AtlProxyName: !If
                        - UseCustomDnsName
                        - !Ref 'CustomDnsName'
                        - !If
                          - UseHostedZone
                          - !Ref 'LoadBalancerCname'
                          - !GetAtt [LoadBalancer, DNSName]
                  - "ATL_SSL_SELF_CERT_ENABLED=false"
                  - !If [DoSSL, "ATL_SSL_PROXY=true", !Ref "AWS::NoValue"]
                  - !Sub ["ATL_TOMCAT_ACCEPTCOUNT=${TomcatAcceptCount}", TomcatAcceptCount: !Ref TomcatAcceptCount]
                  - !Sub ["ATL_TOMCAT_CONNECTIONTIMEOUT=${TomcatConnectionTimeout}", TomcatConnectionTimeout: !Ref TomcatConnectionTimeout]
                  - !Sub ["ATL_TOMCAT_CONTEXTPATH=${TomcatContextPath}", TomcatContextPath: !Ref TomcatContextPath]
                  - !Sub ["ATL_TOMCAT_ENABLELOOKUPS=${TomcatEnableLookups}", TomcatEnableLookups: !Ref TomcatEnableLookups]
                  - !Sub ["ATL_TOMCAT_MAXTHREADS=${TomcatMaxThreads}", TomcatMaxThreads: !Ref TomcatMaxThreads]
                  - !Sub ["ATL_TOMCAT_MINSPARETHREADS=${TomcatMinSpareThreads}", TomcatMinSpareThreads: !Ref TomcatMinSpareThreads]
                  - !Sub ["ATL_TOMCAT_PROTOCOL=${TomcatProtocol}", TomcatProtocol: !Ref TomcatProtocol]
                  - !Sub ["ATL_TOMCAT_PROXYPORT=${TomcatProxyPort}", TomcatProxyPort: !Ref TomcatProxyPort]
                  - !Sub ["ATL_TOMCAT_REDIRECTPORT=${TomcatRedirectPort}", TomcatRedirectPort: !Ref TomcatRedirectPort]
                  - !Sub ["ATL_TOMCAT_SCHEME=${TomcatScheme}", TomcatScheme: !Ref TomcatScheme]
                  - !Sub ["ATL_TOMCAT_SECURE=${TomcatSecure}", TomcatSecure: !Ref TomcatSecure]
            /etc/cfn/cfn-hup.conf:
              content:
                !Join
                  - "\n"
                  -
                    - "[main]"
                    - !Sub ["stack=${StackId}", StackId: !Ref "AWS::StackId"]
                    - !Sub ["region=${Region}", Region: !Ref "AWS::Region"]
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content:
                !Join
                  - "\n"
                  -
                    - "[cfn-auto-reloader-hook]"
                    - triggers=post.update
                    - "path=Resources.ClusterNodeLaunchConfig.Metadata.AWS::CloudFormation::Init"
                    - !Sub
                      - "action=/opt/aws/bin/cfn-init -v --stack ${StackName} --resource ClusterNodeLaunchConfig --region ${Region}"
                      - StackName: !Ref "AWS::StackName"
                        Region: !Ref "AWS::Region"
                    - runas=root
          commands:
            010_make_mount_point:
              command: mkdir -p /media/atl
              ignoreErrors: 'false'
            020_add_nfs_mount:
              command: !Join
                - ''
                - - 'echo '
                  - !If
                    - UseHostedZone
                    - !Ref EFSCname
                    - !Sub
                      - >-
                        $(curl -s
                        http://169.254.169.254/latest/meta-data/placement/availability-zone).${ElasticFileSystem}".efs."${Region}".amazonaws.com"
                      - ElasticFileSystem: !Ref ElasticFileSystem
                        Region: !Ref 'AWS::Region'
                  - >-
                    :/ /media/atl nfs4 noatime,intr,rsize=32768,wsize=32768 0 0
                    >>/etc/fstab
              ignoreErrors: false
            030_mount_all:
              command: mount -a
              ignoreErrors: 'true'
            040_make_shared_home_dir:
              command: mkdir -p /media/atl/jira/shared
              ignoreErrors: 'false'
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              collectd: !If
                - DoCollectd
                - enabled: 'true'
                  ensureRunning: 'true'
                - !Ref 'AWS::NoValue'
              rpcbind:
                enabled: 'true'
                ensureRunning: 'true'
                packages:
                  yum:
                    - nfs-utils
        configSets:
          default:
            - '0'
    Properties:
      AssociatePublicIpAddress: !Ref AssociatePublicIpAddress
      BlockDeviceMappings:
        - DeviceName: /dev/xvdf
          Ebs: {}
          NoDevice: true
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap
          - AWSInstanceType2Arch
          - !Ref ClusterNodeInstanceType
          - Arch
      InstanceType: !Ref ClusterNodeInstanceType
      SecurityGroups:
        - !Ref SecurityGroup
      UserData:
        'Fn::Base64':
          !Join
            - ""
            -
              - "#!/bin/bash -xe\n"
              - "yum update -y aws-cfn-bootstrap\n"
              - !Sub ["/opt/aws/bin/cfn-init -v --stack ${StackName}", StackName: !Ref "AWS::StackName"]
              - !Sub [" --resource ClusterNodeLaunchConfig --region ${Region}\n", Region: !Ref "AWS::Region"]
              - !Sub ["/opt/aws/bin/cfn-signal -e $? --stack ${StackName}", StackName: !Ref "AWS::StackName"]
              - !Sub [" --resource ClusterNodeLaunchConfig --region ${Region}", Region: !Ref "AWS::Region"]

  ElasticFileSystem:
    Type: 'AWS::EFS::FileSystem'
    Properties:
      FileSystemTags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  EFSMountAz1:
    Type: 'AWS::EFS::MountTarget'
    Properties:
      FileSystemId: !Ref ElasticFileSystem
      SecurityGroups:
        - !Ref SecurityGroup
      SubnetId: !Select
        - '0'
        - !Ref InternalSubnets
  EFSMountAz2:
    Type: 'AWS::EFS::MountTarget'
    Properties:
      FileSystemId: !Ref ElasticFileSystem
      SecurityGroups:
        - !Ref SecurityGroup
      SubnetId: !Select
        - '1'
        - !Ref InternalSubnets
  EFSCname:
    Condition: UseHostedZone
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Ref HostedZone
      Comment: Route53 cname for the efs
      Name: !Join ['', [!Ref "AWS::StackName", '.', 'efs', '.', !Ref 'HostedZone']]
      Type: CNAME
      TTL: '900'
      ResourceRecords:
        - !Join ['', [!Ref ElasticFileSystem, ., 'efs.', !Ref "AWS::Region", ., 'amazonaws.com.']]
  DB:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      AllocatedStorage: !Ref DBStorage
      DBInstanceClass: !Ref DBInstanceClass
      DBInstanceIdentifier: !Ref "AWS::StackName"
      DBSubnetGroupName: !Ref DBSubnetGroup
      Engine: postgres
      MasterUsername: postgres
      MasterUserPassword: !If [DoSetDBMasterUserPassword, !Ref DBMasterUserPassword, !Ref "AWS::NoValue"]
      StorageType: !If [DBProvisionedIops, io1, gp2]
      Iops: !If [DBProvisionedIops, !Ref DBIops, !Ref "AWS::NoValue"]
      MultiAZ: !Ref DBMultiAZ
      VPCSecurityGroups:
        - !Ref SecurityGroup
      Tags:
        - Key: Name
          Value: !Sub ["${StackName} JIRA PostgreSQL Database", StackName: !Ref "AWS::StackName"]
  DBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: DBSubnetGroup
      SubnetIds: !Ref InternalSubnets
  DBCname:
    Condition: UseHostedZone
    Type: 'AWS::Route53::RecordSet'
    Properties:
      HostedZoneName: !Ref HostedZone
      Comment: Route53 cname for the RDS
      Name: !Join ['', [!Ref "AWS::StackName", '.', 'db', '.', !Ref 'HostedZone']]
      Type: CNAME
      TTL: '900'
      ResourceRecords:
        - !GetAtt DB.Endpoint.Address
  LoadBalancer:
    Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
    Properties:
      AppCookieStickinessPolicy:
        - CookieName: JSESSIONID
          PolicyName: JSessionIdStickiness
      ConnectionDrainingPolicy:
        Enabled: true
        Timeout: 300
      ConnectionSettings:
        IdleTimeout: 3600
      CrossZone: 'true'
      Listeners:
        - LoadBalancerPort: '80'
          Protocol: HTTP
          InstancePort: !If [DoSSL, "8081", "8080"]
          InstanceProtocol: HTTP
          PolicyNames:
            - JSessionIdStickiness
        - !If
          - DoSSL
          - LoadBalancerPort: '443'
            Protocol: HTTPS
            InstancePort: '8080'
            InstanceProtocol: HTTP
            PolicyNames:
              - JSessionIdStickiness
            SSLCertificateId: !Join
              - ''
              - - 'arn:aws:iam::'
                - !Ref 'AWS::AccountId'
                - ':server-certificate/'
                - !Ref SSLCertificateName
          - !Ref 'AWS::NoValue'
      HealthCheck:
        Target: !If [UseContextPath, !Join ['', ['HTTP:8080', !Ref 'TomcatContextPath', '/status']], 'HTTP:8080/status']
        Timeout: '29'
        Interval: '30'
        UnhealthyThreshold: '2'
        HealthyThreshold: '2'
      Scheme: !If [UsePublicIp, "internet-facing", "internal"]
      SecurityGroups:
        - !Ref SecurityGroup
      Subnets: !Ref ExternalSubnets
  LoadBalancerCname:
    Condition: UseHostedZone
    Type: 'AWS::Route53::RecordSet'
    Properties:
      HostedZoneName: !Ref HostedZone
      Comment: Route53 cname for the ALB
      Name: !Join ['', [!Ref "AWS::StackName", '.', !Ref 'HostedZone']]
      Type: CNAME
      TTL: '900'
      ResourceRecords:
        - !GetAtt LoadBalancer.DNSName
  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security group allowing SSH and HTTP/HTTPS access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref CidrBlock
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: !Ref CidrBlock
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: !Ref CidrBlock
  SecurityGroupIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: '-1'
      FromPort: '-1'
      ToPort: '-1'
      SourceSecurityGroupId: !Ref SecurityGroup
Outputs:
  JIRAURL:
    Description: The URL of JIRA Data Center instance
    Value: !If
      - UseCustomDnsName
      - !Ref CustomDnsName
      - !If
        - UseHostedZone
        - !Ref LoadBalancerCname
        - !Sub
          - "${HTTP}://${LoadBalancerDNSName}"
          - HTTP: !If [DoSSL, "https", "http"]
            LoadBalancerDNSName: !If
              - UseCustomDnsName
              - !Ref CustomDnsName
              - !GetAtt LoadBalancer.DNSName
  LoadBalancerURL:
    Description: The Load Balancer URL
    Value: !Sub
      - "${HTTP}://${LoadBalancerDNSName}"
      - HTTP: !If [DoSSL, "https", "http"]
        LoadBalancerDNSName: !GetAtt LoadBalancer.DNSName
  EFSCname:
    Description: The cname of the EFS
    Value: !If
      - UseHostedZone
      - !Ref EFSCname
      - !Ref ElasticFileSystem
    Export: {
      Name: !Join ['', [!Ref "AWS::StackName", '-EFSCname']]
    }
  SGname:
    Description: The name of the SecurityGroup
    Value: !Ref SecurityGroup
    Export: {
      Name: !Join ['', [!Ref "AWS::StackName", '-SGname']]
    }
