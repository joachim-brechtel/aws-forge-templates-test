---
# Bring up diffs between this file and the JiraDataCenterClone.template, ConfluenceServerClone.template and CrowdDataCenterClone.template.
# As a rule, we should work to minimize our diffs between these files as best we can, so that future changes are easy to make across all supported CloudFormation templates.
# Using YAML as our file format will allow us to put a block comment at the top of the file saying exactly this.
AWSTemplateFormatVersion: 2010-09-09
Description: Atlassian Confluence Data Center Clone Stack
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Confluence setup
        Parameters:
          - CollaborativeEditingMode
          - ConfluenceVersion
      - Label:
          default: Deployment information
        Parameters:
          - DeployEnvironment
      - Label:
          default: Cluster nodes
        Parameters:
          - ClusterNodeInstanceType
          - ClusterNodeMax
          - ClusterNodeMin
          - ClusterNodeVolumeSize
          - SynchronyClusterNodeMax
          - SynchronyClusterNodeMin
          - SynchronyNodeInstanceType
      - Label:
          default: Database
        Parameters:
          - DBInstanceClass
          - DBIops
          - DBMasterUserPassword
          - DBMultiAZ
          - DBPassword
          - DBStorageType
      - Label:
          default: Networking
        Parameters:
          - LoadBalancerScheme
          - CidrBlock
          - ExternalSubnets
          - InternalSubnets
          - KeyPairName
          - SSLCertificateARN
          - VPC
      - Label:
          default: Disaster Recovery Snapshot IDs
        Parameters:
          - DBSnapshotName
          - EBSSnapshotId
      - Label:
          default: DNS (Optional)
        Parameters:
          - CustomDnsName
          - HostedZone
          - SubDomainName
      - Label:
          default: Advanced (Optional)
        Parameters:
          - AutologinCookieAge
          - ConfluenceDownloadUrl
          - LocalAnsibleGitRepo
          - LocalAnsibleGitSshKeyName
          - StartCollectd
          - StorageEncrypted
      - Label:
          default: Application Tuning (Optional) - dbref - https://confluence.atlassian.com/doc/performance-tuning-130289.html tomcatref - http://tomcat.apache.org/tomcat-8.0-doc/config/http.html
        Parameters:
          - TomcatContextPath
          - CatalinaOpts
          - DBPoolMaxSize
          - DBPoolMinSize
          - DBTimeout
          - DBIdleTestPeriod
          - DBMaxStatements
          - DBValidate
          - DBAcquireIncrement
          - JvmHeapOverride
          - JvmHeapOverrideSynchrony
          - MailEnabled
          - TomcatAcceptCount
          - TomcatConnectionTimeout
          - TomcatDefaultConnectorPort
          - TomcatEnableLookups
          - TomcatMaxThreads
          - TomcatMinSpareThreads
          - TomcatProtocol
          - TomcatRedirectPort
          - TomcatScheme
    ParameterLabels:
      AutologinCookieAge:
        default: Remember Me cookie expiry
      CatalinaOpts:
        default: Catalina options
      CidrBlock:
        default: Permitted IP range
      ClusterNodeMax:
        default: Maximum number of cluster nodes
      ClusterNodeMin:
        default: Minimum number of cluster nodes
      ClusterNodeInstanceType:
        default: Cluster node instance type
      ClusterNodeVolumeSize:
        default: Cluster node instance volume size
      CollaborativeEditingMode:
        default: Collaborative editing mode
      ConfluenceDownloadUrl:
        default: Confluence download URL
      ConfluenceVersion:
        default: Version *
      CustomDnsName:
        default: Existing DNS name (optional)
      DBAcquireIncrement:
          default: DB Acquire Increment
      DBIdleTestPeriod:
        default: DB Idle Test Period
      DBInstanceClass:
        default: Database instance class
      DBIops:
        default: RDS Provisioned IOPS
      DBMasterUserPassword:
        default: Master (admin) password *
      DBMaxStatements:
        default: DB Max Statements
      DBMultiAZ:
        default: Enable RDS Multi-AZ deployment
      DBPassword:
        default: Application user database password *
      DBSnapshotName:
        default: Database snapshot Name to restore from
      DBPoolMaxSize:
        default: DB Pool Maximum Size
      DBPoolMinSize:
        default: DB Pool Minimum Size
      DBStorageType:
        default: Database storage type
      DBTimeout:
        default: DB Timeout
      DBValidate:
        default: DB Validate
      DeployEnvironment:
        default: Deployment Environment
      EBSSnapshotId:
        default: EBS (shared filesystem) snapshot ID to restore from
      ExternalSubnets:
        default: External subnets *
      HostedZone:
        default: Route 53 Hosted Zone (optional)
      InternalSubnets:
        default: Internal subnets *
      JvmHeapOverride:
        default: Confluence Heap Size Override
      JvmHeapOverrideSynchrony:
        default: Synchrony Heap Size Override
      KeyPairName:
        default: Key Name *
      LoadBalancerScheme:
        default: Load Balancer Scheme
      LocalAnsibleGitRepo:
        default: Git repo for local-ansible
      LocalAnsibleGitSshKeyName:
        default: Git SSH key name for local-ansible
      MailEnabled:
        default: Enable App to Process Email
      SSLCertificateARN:
        default: SSL Certificate ARN
      StartCollectd:
        default: Start the collectd metrics agent
      StorageEncrypted:
        default: Encryption
      SubDomainName:
        default: Sub-domain for Hosted Zone (optional)
      SynchronyClusterNodeMax:
        default: Maximum number of Synchrony cluster nodes
      SynchronyClusterNodeMin:
        default: Minimum number of Synchrony cluster nodes
      SynchronyNodeInstanceType:
        default: Synchrony cluster node instance type
      TomcatAcceptCount:
        default: Tomcat Accept Count
      TomcatConnectionTimeout:
        default: Tomcat Connection Timeout
      TomcatContextPath:
        default: Tomcat Context Path
      TomcatDefaultConnectorPort:
        default: Tomcat Default Connector Port
      TomcatEnableLookups:
        default: Tomcat Enable DNS Lookups
      TomcatMaxThreads:
        default: Tomcat Maximum Threads
      TomcatMinSpareThreads:
        default: Tomcat Minimum Spare Threads
      TomcatProtocol:
        default: Tomcat Protocol
      TomcatRedirectPort:
        default: Tomcat Redirect Port
      TomcatScheme:
        default: Tomcat protocol Scheme
      VPC:
        default: VPC *
Parameters:
  AutologinCookieAge:
    Description: Sets the Remember Me (autologin) cookie expiry length in seconds. If blank this defaults to 1 year.
    Type: String
  CatalinaOpts:
    Description: Pass in any additional JVM options to tune Catalina Tomcat
    Type: String
  CidrBlock:
    Default: '0.0.0.0/0'
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
    Description: CIDR block allowed to access the Atlassian product. This should be set to a trusted IP range; if you want to give public access use '0.0.0.0/0'.
    MinLength: 9
    MaxLength: 18
    Type: String
  ClusterNodeInstanceType:
    Default: t3.medium
    AllowedValues:
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - c5d.large
      - c5d.xlarge
      - c5d.2xlarge
      - c5d.4xlarge
      - c5d.9xlarge
      - c5d.18xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - h1.2xlarge
      - h1.4xlarge
      - h1.8xlarge
      - h1.16xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.12xlarge
      - m5a.24xlarge
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.12xlarge
      - m5d.24xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5a.large
      - r5a.xlarge
      - r5a.2xlarge
      - r5a.4xlarge
      - r5a.12xlarge
      - r5a.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - x1.16xlarge
      - x1.32xlarge
      - x1e.xlarge
      - x1e.2xlarge
      - x1e.4xlarge
      - x1e.8xlarge
      - x1e.16xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: Must be an EC2 instance type from the selection list
    Description: Instance type for the cluster application nodes (note - for "synchrony-local" collaborative editing you must chose an instance size with over 5 GB RAM).
    Type: String
  ClusterNodeMax:
    Default: 1
    Description: Maximum number of nodes in the cluster.
    Type: Number
  ClusterNodeMin:
    Default: 1
    Description: Minimum number of nodes in the cluster.
    Type: Number
  ClusterNodeVolumeSize:
    Default: 50
    Description: Size of cluster node root volume in GB (note - size based upon Application indexes x 4)
    Type: Number
  CollaborativeEditingMode:
    Default: synchrony-separate-nodes
    AllowedValues:
      - none
      - synchrony-local
      - synchrony-separate-nodes
    Description: Collaborative Editing can be off, run locally on the Confluence nodes (leave 1 GB heap free for Synchrony), or run on a separately autoscaled group of nodes.
    Type: String
  ConfluenceDownloadUrl:
    Description: This parameter is used to download a custom Confluence version for testing purposes. Leave this parameter blank to automatically download the official version you specified earlier.
    Type: String
    ConstraintDescription: "Must be a valid Confluence download url from version 6.1.x or higher. Find valid versions at https://confluence.atlassian.com/display/DOC/Confluence+Release+Notes"
  ConfluenceVersion:
    Default: 6.14.2
    AllowedPattern: '(\d+\.\d+\.\d+(-?.*))'
    ConstraintDescription: "Must be a valid Confluence version number, for example 6.14.2. Find valid versions at https://confluence.atlassian.com/display/DOC/Confluence+Release+Notes"
    Description: The version of Confluence to install
    Type: String
  CustomDnsName:
    Description: 'Use custom existing DNS name for this Atlassian service. This will take precedence over HostedZone. Please note: you must own the domain and configure it to point at the load balancer.'
    Type: String
  DBAcquireIncrement:
    Default: 1
    Description: Determines how many connections at a time c3p0 will try to acquire when the pool is exhausted
    Type: String
  DBIdleTestPeriod:
    Default: 100
    Description: If greater than 0, this is the frequency (in seconds) that c3po will test all idle, pooled but unchecked-out connections.
    Type: String
  DBInstanceClass:
    Default: db.t2.medium
    AllowedValues:
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.m4.16xlarge
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
      - db.m5.12xlarge
      - db.m5.24xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
      - db.r5.large
      - db.r5.xlarge
      - db.r5.2xlarge
      - db.r5.4xlarge
      - db.r5.12xlarge
      - db.r5.24xlarge
      - db.t2.medium
      - db.t2.large
      - db.t2.xlarge
      - db.t2.2xlarge
      - db.t3.medium
      - db.t3.large
      - db.t3.xlarge
      - db.t3.2xlarge
    ConstraintDescription: Must be a valid RDS instance class, from the selection list
    Description: RDS instance type
    Type: String
  DBIops:
    Default: 1000
    ConstraintDescription: Must be in the range 1000 - 30000
    Description: 'Must be in the range of 1000 - 30000 and a multiple of 1000. This value is only used with Provisioned IOPS. Note: The ratio of IOPS per allocated-storage must be between 3.00 and 10.00.'
    MinValue: 1000
    MaxValue: 30000
    Type: Number
  DBMasterUserPassword:
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: Must be at least 8 alphanumeric characters.
    Description: Password for the master ('postgres') account.
    MinLength: 8
    MaxLength: 128
    NoEcho: true
    Type: String
  DBMaxStatements:
    Default: 0
    Description: The size of c3p0's global PreparedStatement cache. It controls the total number of Statements cached, for all Connections. If set, it should be a fairly large number, as each pooled Connection requires its own, distinct flock of cached statements.
    Type: String
  DBMultiAZ:
    Description: Whether to provision a multi-AZ RDS instance.
    Default: false
    AllowedValues:
      - true
      - false
    ConstraintDescription: Must be 'true' or 'false'.
    Type: String
  DBPassword:
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: Must be at least 8 alphanumeric characters.
    Description: Database user account password.
    MinLength: 8
    MaxLength: 128
    NoEcho: true
    Type: String
  DBPoolMaxSize:
    Default: 60
    Description: The maximum number of database connections that can be opened at any time
    Type: String
  DBPoolMinSize:
    Default: 20
    Description: The minimum number of idle database connections that are kept open at any time
    Type: String
  DBSnapshotName:
    ConstraintDescription: Must be a valid RDS snapshot Name
    Default: "look this up in RDS at DR region"
    Description: RDS snapshot Name of an existing snapshot to restore from like "dr-opsj-snap-201709241212".
    Type: String
  DBStorageType:
    Default: General Purpose (SSD)
    AllowedValues:
      - General Purpose (SSD)
      - Provisioned IOPS
    ConstraintDescription: Must be 'General Purpose (SSD)' or 'Provisioned IOPS'.
    Description: Database storage type
    Type: String
  DBTimeout:
    Default: 30
    Description: Number of seconds that Connections in excess of minPoolSize should be permitted to remain idle in the pool before being culled
    Type: String
  DBValidate:
    Default: false
    Description: If true, a connection test will be performed at every connection checkout to verify that the connection is valid
    Type: String
  DeployEnvironment:
    Default: stg
    AllowedValues:
      - dev
      - dr
      - prod
      - stg
    ConstraintDescription: Must be either Production (prod), Staging (stg), or Disaster Recovery (dr).
    Description: Environment of the application - either Production, Staging, or Disaster Recovery (DR)
    Type: String
  EBSSnapshotId:
    Default: "look this up in ec2 snapshots at DR region"
    ConstraintDescription: Must be a valid EBS snapshot ID
    Description: EBS snapshot ID of an existing backup to restore of the form "snap-065c60da27161cb43".
    Type: String
  ExternalSubnets:
    ConstraintDescription: Must be a list of two or more Subnet IDs within the selected VPC.
    Description: Subnets (two or more) where your user-facing load balancer will be deployed. MUST be within the selected VPC.
    Type: List<AWS::EC2::Subnet::Id>
  HostedZone:
    ConstraintDescription: Must be the name of an existing Route53 Hosted Zone.
    Description: The domain name of the Route53 PRIVATE Hosted Zone in which to create cnames
    Type: String
  InternalSubnets:
    ConstraintDescription: Must be a list of two or more Subnet IDs within the selected VPC.
    Description: Subnets (two or more) where your cluster nodes and other internal infrastructure will be deployed. MUST be within the selected VPC. Specify the ExternalSubnets again here if you wish to deploy the whole stack into the same subnets.
    Type: List<AWS::EC2::Subnet::Id>
  JvmHeapOverride:
    Description: Override the default amount of memory to allocate to the JVM for your instance type - set size in meg or gig e.g. 1024m or 1g
    Type: String
  JvmHeapOverrideSynchrony:
    Description: Override the default amount of memory to allocate to the JVM for Synchrony, for your instance type - set size in meg or gig e.g. 1024m or 1g.
    Type: String
  KeyPairName:
    ConstraintDescription: Must be the name of an existing EC2 Key Pair.
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
  LoadBalancerScheme:
    Default: internet-facing
    AllowedValues:
      - internet-facing
      - internal
    ConstraintDescription: Must be 'internet-facing' or 'internal'.
    Description: Controls if the load balancer is assigned a public IP address
    Type: String
  LocalAnsibleGitRepo:
    Description: For additional node customization, provide repo location to git clone. This must be in format git@bitbucket.org:atlassian/atlassian-local-ansible-example.git if using Bitbucket Cloud, or ssh://git@stash.example.com:7997/my-local-ansible.git (ie protocol included) if using Bitbucket Server.
    Type: String
  LocalAnsibleGitSshKeyName:
    Description: If your git repo is private, provide an AWS Systems Manager ParameterStore key name that holds an SSH private key that can access the repo
    Type: String
  MailEnabled:
    AllowedValues:
      - true
      - false
    ConstraintDescription: Must be 'true' or 'false'.
    Default: false
    Description: Enable mail processing and sending
    Type: String
  SubDomainName:
    Description: Leave this field blank to use your stack name as the sub-domain.
    Type: String
  SSLCertificateARN:
    Description: Amazon Resource Name (ARN) of your SSL certificate. If you want to use your own certificate that you generated outside of Amazon, you need to first import it to AWS Certificate Manager. After a successful import, you'll receive the ARN. If you want to create a certificate with AWS Certificate Manager (ACM certificate), you will receive the ARN after it's successfully created.
    MinLength: 0
    MaxLength: 90
    Type: String
  StartCollectd:
    Default: true
    AllowedValues:
      - true
      - false
    ConstraintDescription: Must be 'true' or 'false'.
    Description: Start the collectd service
    Type: String
  StorageEncrypted:
    Default: false
    AllowedValues:
      - true
      - false
    Description: Whether or not to encrypt the local storage on the EC2 nodes. The database and file system will be encrypted if the snapshots are of encrypted services.
    Type: String
  SynchronyClusterNodeMax:
    Description: Maximum number of Synchrony cluster nodes
    Default: 1
    Type: Number
  SynchronyClusterNodeMin:
    Description: Minimum number of Synchrony cluster nodes
    Default: 1
    Type: Number
  SynchronyNodeInstanceType:
    Default: t3.medium
    AllowedValues:
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - c5d.large
      - c5d.xlarge
      - c5d.2xlarge
      - c5d.4xlarge
      - c5d.9xlarge
      - c5d.18xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - h1.2xlarge
      - h1.4xlarge
      - h1.8xlarge
      - h1.16xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.12xlarge
      - m5a.24xlarge
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.12xlarge
      - m5d.24xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5a.large
      - r5a.xlarge
      - r5a.2xlarge
      - r5a.4xlarge
      - r5a.12xlarge
      - r5a.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - x1.16xlarge
      - x1.32xlarge
      - x1e.xlarge
      - x1e.2xlarge
      - x1e.4xlarge
      - x1e.8xlarge
      - x1e.16xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: Must be an EC2 instance type from the selection list
    Description: Synchrony cluster node instance type.
    Type: String
  TomcatAcceptCount:
    Default: 10
    Description: The maximum queue length for incoming connection requests when all possible request processing threads are in use
    Type: String
  TomcatConnectionTimeout:
    Default: 20000
    Description: The number of milliseconds this Connector will wait, after accepting a connection, for the request URI line to be presented
    Type: String
  TomcatContextPath:
    AllowedPattern: '^(\/[A-z_\-0-9\.]+)?$'
    Description: The context path of this web application, which is matched against the beginning of each request URI to select the appropriate web application for processing. If used, must include leading "/"
    Type: String
  TomcatDefaultConnectorPort:
    Default: 8080
    Description: The port on which to serve the application
    Type: String
  TomcatEnableLookups:
    Default: false
    Description: Set to true if you want calls to request.getRemoteHost() to perform DNS lookups in order to return the actual host name of the remote client
    Type: String
  TomcatMaxThreads:
    Default: 48
    Description: The maximum number of request processing threads to be created by this Connector, which therefore determines the maximum number of simultaneous requests that can be handled
    Type: String
  TomcatMinSpareThreads:
    Default: 10
    Description: The minimum number of threads always kept running
    Type: String
  TomcatProtocol:
    Default: 'HTTP/1.1'
    Description: Sets the protocol to handle incoming traffic
    Type: String
  TomcatRedirectPort:
    Default: 8443
    Description: The port number for Catalina to use when automatically redirecting a non-SSL connector actioning a redirect to a SSL URI
    Type: String
  TomcatScheme:
    Default: http
    Description: "The name of the protocol you wish to have returned, ie 'https' for an SSL Connector. The value of this setting also configures Tomcat's proxy port (443/80) and secure (true/false) settings appropriately."
    Type: String
    AllowedValues: [http, https]
  VPC:
    ConstraintDescription: Must be the ID of a VPC.
    Description: Virtual Private Cloud
    Type: AWS::EC2::VPC::Id
Conditions:
  DBProvisionedIops:
    !Equals [!Ref DBStorageType, Provisioned IOPS]
  DisableMail:
    !Not [!Equals [!Ref MailEnabled, true]]
  DoCollectd:
    !Equals [!Ref StartCollectd, true]
  DoSetDBMasterUserPassword:
    !Not [!Equals [!Ref DBMasterUserPassword, '']]
  DoSSL:
    !Not [!Equals [!Ref SSLCertificateARN, '']]
  SSLScheme:
    !Equals [!Ref TomcatScheme, 'https']
  OverrideHeap:
    !Not [!Equals [!Ref JvmHeapOverride, '']]
  OverrideHeapSynchrony:
    !Not [!Equals [!Ref JvmHeapOverrideSynchrony, '']]
  UseContextPath:
    !Not [!Equals [!Ref TomcatContextPath, '']]
  UseCustomDnsName:
    !Not [!Equals [!Ref CustomDnsName, '']]
  UseEncryption:
    !Equals [!Ref StorageEncrypted, true]
  UseHostedZone:
    !Not [!Equals [!Ref HostedZone, '']]
  UseSubDomainName:
    !Not [!Equals [!Ref SubDomainName, '']]
  UseSynchronyAutoScalingGroup:
    !Equals [!Ref CollaborativeEditingMode, 'synchrony-separate-nodes']
Mappings:
  AWSInstanceType2Arch:
    c4.xlarge:
      Arch: HVM64
      Jvmheap: 4608m
    c4.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c4.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c4.8xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c5.large:
      Arch: HVM64
      Jvmheap: 2048m
    c5.xlarge:
      Arch: HVM64
      Jvmheap: 5120m
    c5.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c5.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c5.9xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c5.18xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c5d.large:
      Arch: HVM64
      Jvmheap: 2048m
    c5d.xlarge:
      Arch: HVM64
      Jvmheap: 5120m
    c5d.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c5d.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c5d.9xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    c5d.18xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    d2.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    d2.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    d2.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    d2.8xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    h1.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    h1.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    h1.8xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    h1.16xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    i3.large:
      Arch: HVM64
      Jvmheap: 12288m
    i3.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    i3.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    i3.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    i3.8xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    i3.16xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m4.large:
      Arch: HVM64
      Jvmheap: 5120m
    m4.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m4.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m4.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m4.10xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m4.16xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5.large:
      Arch: HVM64
      Jvmheap: 5120m
    m5.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5.12xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5.24xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5a.large:
      Arch: HVM64
      Jvmheap: 5120m
    m5a.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5a.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5a.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5a.12xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5a.24xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5d.large:
      Arch: HVM64
      Jvmheap: 5120m
    m5d.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5d.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5d.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5d.12xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    m5d.24xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r4.large:
      Arch: HVM64
      Jvmheap: 12288m
    r4.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r4.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r4.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r4.8xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r4.16xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5.large:
      Arch: HVM64
      Jvmheap: 12288m
    r5.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5.12xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5.24xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5a.large:
      Arch: HVM64
      Jvmheap: 12288m
    r5a.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5a.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5a.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5a.12xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5a.24xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5d.large:
      Arch: HVM64
      Jvmheap: 12288m
    r5d.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5d.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5d.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5d.12xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    r5d.24xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    t2.medium:
      Arch: HVM64
      Jvmheap: 2048m
    t2.large:
      Arch: HVM64
      Jvmheap: 5120m
    t2.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    t2.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    t3.medium:
      Arch: HVM64
      Jvmheap: 2048m
    t3.large:
      Arch: HVM64
      Jvmheap: 5120m
    t3.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    t3.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    x1.16xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    x1.32xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    x1e.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    x1e.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    x1e.4xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    x1e.8xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    x1e.16xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    z1d.large:
      Arch: HVM64
      Jvmheap: 12288m
    z1d.xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    z1d.2xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    z1d.3xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    z1d.6xlarge:
      Arch: HVM64
      Jvmheap: 12288m
    z1d.12xlarge:
      Arch: HVM64
      Jvmheap: 12288m
  AWSRegionArch2AMI:
    ap-northeast-1:
      HVM64: ami-0aacdff09302c167c
      HVMG2: NOT_SUPPORTED
    ap-northeast-2:
      HVM64: ami-0e8aa0524e47ce091
      HVMG2: NOT_SUPPORTED
    ap-south-1:
      HVM64: ami-0373f38ccfc3b6cd2
      HVMG2: NOT_SUPPORTED
    ap-southeast-1:
      HVM64: ami-090ee03ba1e11795a
      HVMG2: NOT_SUPPORTED
    ap-southeast-2:
      HVM64: ami-01db1c7fc8b362e6e
      HVMG2: NOT_SUPPORTED
    ca-central-1:
      HVM64: ami-009d10d2df4b050e7
      HVMG2: NOT_SUPPORTED
    eu-central-1:
      HVM64: ami-07883944485996218
      HVMG2: NOT_SUPPORTED
    eu-north-1:
      HVM64: ami-0b006e403a6def05b
      HVMG2: NOT_SUPPORTED
    eu-west-1:
      HVM64: ami-044edc2cae76630b3
      HVMG2: NOT_SUPPORTED
    eu-west-2:
      HVM64: ami-0dcb67331fec8bdf3
      HVMG2: NOT_SUPPORTED
    eu-west-3:
      HVM64: ami-0d541099f4d1a9a55
      HVMG2: NOT_SUPPORTED
    sa-east-1:
      HVM64: ami-0e6a8f098c1599df5
      HVMG2: NOT_SUPPORTED
    us-east-1:
      HVM64: ami-0a8e2ea828687c8e9
      HVMG2: NOT_SUPPORTED
    us-east-2:
      HVM64: ami-096ae99e3249c3b01
      HVMG2: NOT_SUPPORTED
    us-west-1:
      HVM64: ami-07b0bab77725d36c1
      HVMG2: NOT_SUPPORTED
    us-west-2:
      HVM64: ami-09864792f360c8bae
      HVMG2: NOT_SUPPORTED
Resources:
  ConfluenceClusterNodeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ['sts:AssumeRole']
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Path: /
      Policies:
        - PolicyName: ConfluenceClusterNodePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                - 'ec2:DescribeInstances'
                - 'ec2:DescribeSecurityGroups'
                Effect: Allow
                Resource: ['*']
              - Action: ['s3:ListBucket']
                Effect: Allow
                Resource: ['arn:aws:s3:::/aws-deployment-test/releases/confluence']
              - Action: ['s3:Get*']
                Effect: Allow
                Resource: ['arn:aws:s3:::/aws-deployment-test/releases/confluence/*']
              - Action: ['s3:ListBucket']
                Effect: Allow
                Resource: ['arn:aws:s3:::/atlassian-software/releases/confluence']
              - Action: ['s3:Get*']
                Effect: Allow
                Resource: ['arn:aws:s3:::/atlassian-software/releases/confluence/*']
              - Action: ['s3:ListBucket']
                Effect: Allow
                Resource: ['arn:aws:s3:::/atlassian-software/snapshots/confluence']
              - Action: ['s3:Get*']
                Effect: Allow
                Resource: ['arn:aws:s3:::/atlassian-software/snapshots/confluence/*']
              - Action:
                  - 'ec2:AuthorizeSecurityGroupIngress'
                Condition:
                  StringEquals:
                    'ec2:ResourceTag/Name':
                    - !Sub '${AWS::StackName} sg'
                Effect: Allow
                Resource: ['*']
        - PolicyName: !Sub '${AWS::StackName}-ansible-custom-policy'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action: ['iam:ListRolePolicies', 'iam:GetRolePolicy']
                Effect: Allow
                Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-JiraClusterNodeRole*'
              - Action: ['rds:ModifyDBInstance']
                Effect: Allow
                Resource: ['arn:aws:rds:*:*:db:*']
              - Action: ['iam:PassRole']
                Effect: Allow
                Resource: ['*']
  ConfluenceClusterNodeInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles: [!Ref ConfluenceClusterNodeRole]
# Confluence node config
  ClusterNodeGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: !Ref ClusterNodeMin
      LaunchConfigurationName: !Ref ClusterNodeLaunchConfig
      MinSize: !Ref ClusterNodeMin
      MaxSize: !Ref ClusterNodeMax
      TargetGroupARNs: [!Ref MainTargetGroup]
      VPCZoneIdentifier: !Ref InternalSubnets
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} Confluence Node"
          PropagateAtLaunch: true
        - Key: Cluster
          Value: !Ref AWS::StackName
          PropagateAtLaunch: true
      TerminationPolicies:
        - OldestInstance
  ClusterNodeLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              !If
                - DoCollectd
                - collectd: []
                  collectd-java: []
                  collectd-generic-jmx: []
                  collectd-rrdtool: []
                  collectd-disk: []
                - !Ref "AWS::NoValue"
          files:
            /etc/atl:
              content:
                !Join
                  - "\n"
                  -
                    - !If [SSLScheme, "ATL_SSL_PROXY=true", !Ref "AWS::NoValue"]
                    - !If [UseSynchronyAutoScalingGroup, !Sub ["ATL_SYNCHRONY_SERVICE_URL=${Protocol}://${LoadBalancerName}/synchrony/v1", {Protocol: !If [SSLScheme, "https", "http"], LoadBalancerName: !If [UseCustomDnsName, !Ref CustomDnsName, !If [UseHostedZone, !Ref LoadBalancerCname, !If [UseCustomDnsName, !Ref CustomDnsName, !GetAtt LoadBalancer.DNSName]]]}], !Ref "AWS::NoValue"]
                    - !Sub ["ATL_AWS_STACK_NAME=${StackName}", StackName: !Ref "AWS::StackName"]
                    - !Sub ["ATL_AUTOLOGIN_COOKIE_AGE=${AutologinCookieAge}", AutologinCookieAge: !Ref AutologinCookieAge]
                    - !Sub ["ATL_CATALINA_OPTS=\"${CatalinaOpts} ${MailOpts}\"", { CatalinaOpts: !Ref CatalinaOpts, MailOpts: !If [DisableMail, '-Datlassian.mail.senddisabled=true -Datlassian.mail.fetchdisabled=true -Datlassian.mail.popdisabled=true -Dconfluence.disable.mailpolling=true', ''] }]
                    - !Sub ["ATL_CONFLUENCE_INSTALLER_DOWNLOAD_URL=${ConfluenceDownloadUrl}", ConfluenceDownloadUrl: !Ref ConfluenceDownloadUrl]
                    - !Sub ["ATL_CONFLUENCE_VERSION=${ConfluenceVersion}", ConfluenceVersion: !Ref ConfluenceVersion]
                    - !Sub ["ATL_DB_ACQUIREINCREMENT=${DBAcquireIncrement}", DBAcquireIncrement: !Ref DBAcquireIncrement]
                    - !Sub ["ATL_DB_HOST=${DBEndpointAddress}", DBEndpointAddress: !GetAtt DB.Endpoint.Address]
                    - !Sub ["ATL_DB_IDLETESTPERIOD=${DBIdleTestPeriod}", DBIdleTestPeriod: !Ref DBIdleTestPeriod]
                    - !Sub ["ATL_DB_MAXSTATEMENTS=${DBMaxStatements}", DBMaxStatements: !Ref DBMaxStatements]
                    - !Sub ["ATL_DB_PASSWORD=${DBMasterUserPassword}", DBMasterUserPassword: !Ref DBMasterUserPassword]
                    - !Sub ["ATL_DB_POOLMAXSIZE=${DBPoolMaxSize}", DBPoolMaxSize: !Ref DBPoolMaxSize]
                    - !Sub ["ATL_DB_POOLMINSIZE=${DBPoolMinSize}", DBPoolMinSize: !Ref DBPoolMinSize]
                    - !Sub ["ATL_DB_PORT=${DBEndpointPort}", DBEndpointPort: !GetAtt DB.Endpoint.Port]
                    - !Sub ["ATL_DB_TIMEOUT=${DBTimeout}", DBTimeout: !Ref DBTimeout]
                    - !Sub ["ATL_DB_VALIDATE=${DBValidate}", DBValidate: !Ref DBValidate]
                    - !Sub ["ATL_ENVIRONMENT=${DeployEnvironment}", DeployEnvironment: !Ref DeployEnvironment]
                    - !Sub ["ATL_HAZELCAST_NETWORK_AWS_IAM_REGION=${HazelcastAWSRegion}", HazelcastAWSRegion: !Ref "AWS::Region"]
                    - !Sub ["ATL_HAZELCAST_NETWORK_AWS_IAM_ROLE=${ConfluenceClusterNodeRole}", ConfluenceClusterNodeRole: !Ref ConfluenceClusterNodeRole]
                    - !Sub ["ATL_HAZELCAST_NETWORK_AWS_TAG_VALUE=${HazelcastAWSTagValue}", HazelcastAWSTagValue: !Ref "AWS::StackName"]
                    - !Sub ["ATL_HOSTEDZONE=${HostedZone}", HostedZone: !Ref HostedZone]
                    - !Sub ["ATL_JDBC_PASSWORD=${DBPassword}", DBPassword: !Ref DBPassword]
                    - !Sub ["ATL_JDBC_URL=jdbc:postgresql://${DBEndpointAddress}:${DBEndpointPort}/confluence", { DBEndpointAddress: !GetAtt DB.Endpoint.Address, DBEndpointPort: !GetAtt DB.Endpoint.Port }]
                    - !Sub ["ATL_JVM_HEAP=${AtlJvmHeap}", AtlJvmHeap: !If [OverrideHeap, !Ref 'JvmHeapOverride', !FindInMap [AWSInstanceType2Arch, !Ref ClusterNodeInstanceType, Jvmheap]]]
                    - !Sub ["ATL_LOCALANSIBLE_REPO=${AnsibleRepo}", AnsibleRepo: !Ref LocalAnsibleGitRepo]
                    - !Sub ["ATL_LOCALANSIBLE_SSHKEYNAME=${AnsibleKey}", AnsibleKey: !Ref LocalAnsibleGitSshKeyName]
                    - !Sub ["ATL_PROXY_NAME=${AtlProxyName}", AtlProxyName: !If [UseCustomDnsName, !Ref CustomDnsName, !If [UseHostedZone, !Ref LoadBalancerCname, !GetAtt LoadBalancer.DNSName]]]
                    - !Sub ["ATL_STARTCOLLECTD=${StartCollectd}", StartCollectd: !Ref StartCollectd]
                    - !Sub ["ATL_TOMCAT_ACCEPTCOUNT=${TomcatAcceptCount}", TomcatAcceptCount: !Ref TomcatAcceptCount]
                    - !Sub ["ATL_TOMCAT_CONNECTIONTIMEOUT=${TomcatConnectionTimeout}", TomcatConnectionTimeout: !Ref TomcatConnectionTimeout]
                    - !Sub ["ATL_TOMCAT_CONTEXTPATH=${TomcatContextPath}", TomcatContextPath: !Ref TomcatContextPath]
                    - !Sub ["ATL_TOMCAT_DEFAULTCONNECTORPORT=${TomcatDefaultConnectorPort}", TomcatDefaultConnectorPort: !Ref TomcatDefaultConnectorPort]
                    - !Sub ["ATL_TOMCAT_ENABLELOOKUPS=${TomcatEnableLookups}", TomcatEnableLookups: !Ref TomcatEnableLookups]
                    - !Sub ["ATL_TOMCAT_MAXTHREADS=${TomcatMaxThreads}", TomcatMaxThreads: !Ref TomcatMaxThreads]
                    - !Sub ["ATL_TOMCAT_MINSPARETHREADS=${TomcatMinSpareThreads}", TomcatMinSpareThreads: !Ref TomcatMinSpareThreads]
                    - !Sub ["ATL_TOMCAT_PROTOCOL=${TomcatProtocol}", TomcatProtocol: !Ref TomcatProtocol]
                    - !Sub ["ATL_TOMCAT_PROXYPORT=${TomcatProxyPort}", TomcatProxyPort: !If [SSLScheme, 443, 80]]
                    - !Sub ["ATL_TOMCAT_REDIRECTPORT=${TomcatRedirectPort}", TomcatRedirectPort: !Ref TomcatRedirectPort]
                    - !Sub ["ATL_TOMCAT_SCHEME=${TomcatScheme}", TomcatScheme: !If [SSLScheme, https, http]]
                    - !Sub ["ATL_TOMCAT_SECURE=${TomcatSecure}", TomcatSecure: !If [SSLScheme, true, false]]
                    - "ATL_APP_DATA_MOUNT_ENABLED=false"
                    - "ATL_CONFLUENCE_DATA_CENTER=true"
                    - "ATL_DB_NAME=confluence"
                    - "ATL_ENABLED_PRODUCTS=Confluence"
                    - "ATL_ENABLED_SHARED_HOMES="
                    - "ATL_HAZELCAST_NETWORK_AWS_TAG_KEY=Cluster"
                    - "ATL_HAZELCAST_NETWORK_AWS_HOST_HEADER=ec2.amazonaws.com"
                    - "ATL_JDBC_DRIVER=org.postgresql.Driver"
                    - "ATL_JDBC_USER=atlconfluence"
                    - "ATL_NGINX_ENABLED=false"
                    - "ATL_POSTGRES_ENABLED=false"
                    - "ATL_RELEASE_S3_BUCKET=atlassian-software"
                    - "ATL_RELEASE_S3_PATH=releases/confluence"
                    - "ATL_SSL_SELF_CERT_ENABLED=false"
              mode: "000640"
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                region=${AWS::Region}
                stack=${AWS::StackName}
              mode: "000400"
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content:
                !Join
                  - "\n"
                  -
                    - "[cfn-auto-reloader-hook]"
                    - triggers=post.update
                    - "path=Resources.ClusterNodeLaunchConfig.Metadata.AWS::CloudFormation::Init"
                    - !Sub
                      - "action=/opt/aws/bin/cfn-init -v --stack ${StackName} --resource ClusterNodeLaunchConfig --region ${Region}"
                      - StackName: !Ref "AWS::StackName"
                        Region: !Ref "AWS::Region"
                    - runas=root
            /tmp/bootstrap_local_ansible:
              content: !Sub |
                #!/usr/bin/env bash
                # bootstrap any local-ansible repo that is passed in on this template

                localansiblerepopath=/home/localansible
                gitkeylocation=/root/.ssh/gitkey

                # ensure awscli is up to date
                pip install --upgrade awscli
                gitkey=$(aws --region=${AWS::Region} ssm get-parameters --names "${LocalAnsibleGitSshKeyName}" --with-decryption | jq --raw-output '.Parameters[0] .Value')
                echo -e $gitkey > $gitkeylocation
                chmod 600 $gitkeylocation
                export GIT_SSH_COMMAND="ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -i $gitkeylocation"

                mkdir -p $localansiblerepopath
                cd $localansiblerepopath
                git clone "${LocalAnsibleGitRepo}"
                cp $localansiblerepopath/*/local-ansible-run /usr/local/bin/local-ansible-run
                chmod 750 /usr/local/bin/local-ansible-run
              mode: "000750"
              owner: root
              group: root
          commands:
            010_make_mount_point:
              command: mkdir -p /media/atl
              ignoreErrors: false
            020_add_nfs_mount:
              command:
                !Join
                  - ""
                  -
                    - "echo "
                    - !GetAtt NFSServer.PrivateIp
                    - ":/nfs /media/atl nfs4 rw,vers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 0 0 >>/etc/fstab"
              ignoreErrors: false
            030_mount_all:
              command: mount -a
              ignoreErrors: true
            040_make_shared_home_dir:
              command: mkdir -p /media/atl/confluence/shared-home
              ignoreErrors: false
            050_ssm_group:
              command: groupadd ssm-user --gid 400 || groupmod -g 400 ssm-user
            051_ssm_user:
              command: useradd ssm-user --uid 400 -g ssm-user || usermod -u 400 ssm-user
            052_ensure_ssm:
              command: yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
              ignoreErrors: true
            090_bootstrap_local_ansible:
              command: /tmp/bootstrap_local_ansible > /var/log/bootstrap_local_ansible.log 2>&1
              test: !Sub test -n "${LocalAnsibleGitRepo}"
          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              collectd:
                !If [DoCollectd, {enabled: true, ensureRunning: true}, !Ref 'AWS::NoValue']
              rpcbind:
                enabled: true
                ensureRunning: true
                packages:
                  yum: [nfs-utils]
    Properties:
      AssociatePublicIpAddress: false
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            Encrypted: !If [UseEncryption, true, false]
            VolumeSize: !Ref ClusterNodeVolumeSize
            VolumeType: gp2
        - DeviceName: /dev/xvdf
          Ebs: {}
          NoDevice: true
      KeyName: !Ref KeyPairName
      IamInstanceProfile: !Ref ConfluenceClusterNodeInstanceProfile
      ImageId:
        !FindInMap
          - AWSRegionArch2AMI
          - !Ref AWS::Region
          - !FindInMap
              - AWSInstanceType2Arch
              - !Ref ClusterNodeInstanceType
              - Arch
      InstanceType: !Ref ClusterNodeInstanceType
      SecurityGroups: [!Ref SecurityGroup]
      UserData:
        Fn::Base64:
          !Join
            - ""
            -
              - "#!/bin/bash -xe\n"
              - "yum update -y aws-cfn-bootstrap\n"
              - !Sub "/opt/aws/bin/cfn-init -v --stack ${AWS::StackName}"
              - !Sub " --resource ClusterNodeLaunchConfig --region ${AWS::Region}\n"
              - !Sub "/opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName}"
              - !Sub " --resource ClusterNodeGroup --region ${AWS::Region}"
  ClusterNodeScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref ClusterNodeGroup
      Cooldown: '600'
      ScalingAdjustment: 1
  ClusterNodeScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref ClusterNodeGroup
      Cooldown: '600'
      ScalingAdjustment: -1
  CPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale up if CPU > 60% for 5 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: 60
      EvaluationPeriods: 5
      Threshold: 60
      AlarmActions: [!Ref ClusterNodeScaleUpPolicy]
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref ClusterNodeGroup
      ComparisonOperator: GreaterThanThreshold
  CPUAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Scale down if CPU < 40% for 30 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: 60
      EvaluationPeriods: 30
      Threshold: 40
      AlarmActions: [!Ref ClusterNodeScaleDownPolicy]
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref ClusterNodeGroup
      ComparisonOperator: LessThanThreshold
# Synchrony node config
  SynchronyClusterNodeGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Condition: UseSynchronyAutoScalingGroup
    Properties:
      DesiredCapacity: !Ref SynchronyClusterNodeMin
      LaunchConfigurationName: !Ref SynchronyClusterNodeLaunchConfig
      MaxSize: !Ref SynchronyClusterNodeMax
      MinSize: !Ref SynchronyClusterNodeMin
      TargetGroupARNs: [!Ref SynchronyTargetGroup]
      VPCZoneIdentifier: !Ref InternalSubnets
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} Synchrony Node"
          PropagateAtLaunch: true
        - Key: synchrony_service
          Value: !Ref AWS::StackName
          PropagateAtLaunch: true
        - Key: environment
          Value: Production
          PropagateAtLaunch: true
      TerminationPolicies:
        - OldestInstance
  SynchronyClusterNodeLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Condition: UseSynchronyAutoScalingGroup
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            !If
              - DoCollectd
              - yum:
                  collectd: []
                  collectd-java: []
                  collectd-generic-jmx: []
                  collectd-rrdtool: []
                  collectd-disk: []
              - !Ref AWS::NoValue
          files:
            /etc/atl:
              mode: "000640"
              owner: root
              group: root
              content:
                !Join
                  - "\n"
                  -
                    - !If [SSLScheme, "ATL_SSL_PROXY=true", !Ref "AWS::NoValue"]
                    - !Sub ["ATL_AWS_STACK_NAME=${StackName}", StackName: !Ref "AWS::StackName"]
                    - !Sub ["ATL_CATALINA_OPTS=\"${CatalinaOpts} ${MailOpts}\"", { CatalinaOpts: !Ref CatalinaOpts, MailOpts: !If [DisableMail, '-Datlassian.mail.senddisabled=true -Datlassian.mail.fetchdisabled=true -Datlassian.mail.popdisabled=true -Dconfluence.disable.mailpolling=true', ''] }]
                    - !Sub ["ATL_CONFLUENCE_INSTALLER_DOWNLOAD_URL=${ConfluenceDownloadUrl}", ConfluenceDownloadUrl: !Ref ConfluenceDownloadUrl]
                    - !Sub ["ATL_CONFLUENCE_VERSION=${ConfluenceVersion}", ConfluenceVersion: !Ref ConfluenceVersion]
                    - !Sub ["ATL_DB_HOST=${DBEndpointAddress}", DBEndpointAddress: !GetAtt DB.Endpoint.Address]
                    - !Sub ["ATL_DB_PASSWORD=${DBMasterUserPassword}", DBMasterUserPassword: !Ref DBMasterUserPassword]
                    - !Sub ["ATL_DB_PORT=${DBEndpointPort}", DBEndpointPort: !GetAtt DB.Endpoint.Port]
                    - !Sub ["ATL_HAZELCAST_NETWORK_AWS_IAM_REGION=${HazelcastAWSRegion}", HazelcastAWSRegion: !Ref "AWS::Region"]
                    - !Sub ["ATL_HAZELCAST_NETWORK_AWS_IAM_ROLE=${ConfluenceClusterNodeRole}", ConfluenceClusterNodeRole: !Ref ConfluenceClusterNodeRole]
                    - !Sub ["ATL_HAZELCAST_NETWORK_AWS_TAG_VALUE=${HazelcastAWSTagValue}", HazelcastAWSTagValue: !Ref "AWS::StackName"]
                    - !Sub ["ATL_HOSTEDZONE=${HostedZone}", HostedZone: !Ref HostedZone]
                    - !Sub ["ATL_JDBC_PASSWORD=${DBPassword}", DBPassword: !Ref DBPassword]
                    - !Sub ["ATL_JDBC_URL=jdbc:postgresql://${DBEndpointAddress}:${DBEndpointPort}/confluence", { DBEndpointAddress: !GetAtt DB.Endpoint.Address, DBEndpointPort: !GetAtt DB.Endpoint.Port }]
                    - !Sub ["ATL_JVM_HEAP=${AtlJvmHeap}", AtlJvmHeap: !If [OverrideHeap, !Ref 'JvmHeapOverride', !FindInMap [AWSInstanceType2Arch, !Ref ClusterNodeInstanceType, Jvmheap]]]
                    - !Sub ["ATL_LOCALANSIBLE_REPO=${AnsibleRepo}", AnsibleRepo: !Ref LocalAnsibleGitRepo]
                    - !Sub ["ATL_LOCALANSIBLE_SSHKEYNAME=${AnsibleKey}", AnsibleKey: !Ref LocalAnsibleGitSshKeyName]
                    - !Sub ["ATL_PROXY_NAME=${AtlProxyName}", AtlProxyName: !If [UseCustomDnsName, !Ref CustomDnsName, !If [UseHostedZone, !Ref LoadBalancerCname, !GetAtt LoadBalancer.DNSName]]]
                    - !Sub ["ATL_SYNCHRONY_DATABASE_IDLE_CONNECTION_TEST_PERIOD=${TestPeriod}", TestPeriod: !Ref DBIdleTestPeriod]
                    - !Sub ["ATL_SYNCHRONY_DATABASE_MAX_IDLE_TIME=${Timeout}", Timeout: !Ref DBTimeout]
                    - !Sub ["ATL_SYNCHRONY_MEMORY=-Xmx${AtlJvmHeapSynchrony}", AtlJvmHeapSynchrony: !If [OverrideHeapSynchrony, !Ref 'JvmHeapOverrideSynchrony', '2g']]
                    - !Sub ["ATL_SYNCHRONY_SERVICE_URL=${Protocol}://${LoadBalancerName}/synchrony", {Protocol: !If [SSLScheme, "https", "http"], LoadBalancerName: !If [UseCustomDnsName, !Ref CustomDnsName, !If [UseHostedZone, !Ref LoadBalancerCname,  !Sub ["${HTTP}://${LoadBalancerDNSName}", {HTTP: !If [SSLScheme, 'https', 'http'], LoadBalancerDNSName: !If [UseCustomDnsName, !Ref CustomDnsName, !GetAtt LoadBalancer.DNSName]}]]]}]
                    - "ATL_APP_DATA_MOUNT_ENABLED=false"
                    - "ATL_CONFLUENCE_DATA_CENTER=true"
                    - "ATL_DB_NAME=confluence"
                    - "ATL_ENABLED_PRODUCTS=Synchrony"
                    - "ATL_ENABLED_SHARED_HOMES="
                    - "ATL_HAZELCAST_NETWORK_AWS_TAG_KEY=synchrony_service"
                    - "ATL_JDBC_DRIVER=org.postgresql.Driver"
                    - "ATL_JDBC_USER=atlconfluence"
                    - "ATL_NGINX_ENABLED=false"
                    - "ATL_NODE_TYPE=synchrony"
                    - "ATL_POSTGRES_ENABLED=false"
                    - "ATL_RELEASE_S3_BUCKET=atlassian-software"
                    - "ATL_RELEASE_S3_PATH=releases/confluence"
                    - "ATL_SSL_SELF_CERT_ENABLED=false"
                    - "ATL_SYNCHRONY_DATABASE_MAX_IDLE_TIME_EXCESS_CONNECTIONS=0"
                    - "ATL_SYNCHRONY_DATABASE_TEST_CONNECTION_ON_CHECKIN=true"
                    - "ATL_SYNCHRONY_STACK_SPACE=-Xss2048k"
                    - "ATL_SYNCHRONY_WAITING_CONFIG_TIME=20"
            /etc/cfn/cfn-hup.conf:
              content:
                !Join
                  - "\n"
                  -
                    - "[main]"
                    - !Sub ["region=${Region}", Region: !Ref "AWS::Region"]
                    - !Sub ["stack=${StackId}", StackId: !Ref "AWS::StackId"]
              mode: "000400"
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content:
                !Join
                  - "\n"
                  -
                    - "[cfn-auto-reloader-hook]"
                    - triggers=post.update
                    - "path=Resources.SynchronyClusterNodeLaunchConfig.Metadata.AWS::CloudFormation::Init"
                    - !Sub
                      - "action=/opt/aws/bin/cfn-init -v --stack ${StackName} --resource SynchronyClusterNodeLaunchConfig --region ${Region}"
                      - StackName: !Ref "AWS::StackName"
                        Region: !Ref "AWS::Region"
                    - runas=root
            /tmp/bootstrap_local_ansible:
              content: !Sub |
                #!/usr/bin/env bash
                # bootstrap any local-ansible repo that is passed in on this template

                localansiblerepopath=/home/localansible
                gitkeylocation=/root/.ssh/gitkey

                gitkey=$(aws --region=${AWS::Region} ssm get-parameters --names "${LocalAnsibleGitSshKeyName}" --with-decryption | jq --raw-output '.Parameters[0] .Value')
                echo -e $gitkey > $gitkeylocation
                chmod 600 $gitkeylocation
                export GIT_SSH_COMMAND="ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -i $gitkeylocation"

                mkdir -p $localansiblerepopath
                cd $localansiblerepopath
                git clone "${LocalAnsibleGitRepo}"
                cp $localansiblerepopath/*/local-ansible-run /usr/local/bin/local-ansible-run
                chmod 750 /usr/local/bin/local-ansible-run
              mode: "000750"
              owner: root
              group: root
          commands:
            010_make_mount_point:
              command: mkdir -p /media/atl
              ignoreErrors: false
            020_add_nfs_mount:
              command:
                !Join
                  - ""
                  -
                    - "echo "
                    - !GetAtt NFSServer.PrivateIp
                    - ":/nfs /media/atl nfs4 noatime,intr,rsize=32768,wsize=32768 0 0 >>/etc/fstab"
              ignoreErrors: false
            030_mount_all:
              command: mount -a
              ignoreErrors: true
            040_make_shared_home_dir:
              command: mkdir -p /media/atl/confluence/shared-home
              ignoreErrors: false
            050_ssm_group:
              command: groupadd ssm-user --gid 400 || groupmod -g 400 ssm-user
            051_ssm_user:
              command: useradd ssm-user --uid 400 -g ssm-user || usermod -u 400 ssm-user
            052_ensure_ssm:
              command: yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
            090_bootstrap_local_ansible:
              command: /tmp/bootstrap_local_ansible > /var/log/bootstrap_local_ansible.log 2>&1
              test: !Sub test -n "${LocalAnsibleGitRepo}"
          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              collectd:
                !If [DoCollectd, {enabled: true, ensureRunning: true}, !Ref 'AWS::NoValue']
              rpcbind:
                enabled: true
                ensureRunning: true
                packages:
                  yum:
                    - nfs-utils
    Properties:
      AssociatePublicIpAddress: false
      BlockDeviceMappings:
        - DeviceName: /dev/xvdf
          Ebs: {}
          NoDevice: true
      KeyName: !Ref KeyPairName
      IamInstanceProfile: !Ref ConfluenceClusterNodeInstanceProfile
      ImageId:
        !FindInMap
          - AWSRegionArch2AMI
          - !Ref AWS::Region
          - !FindInMap
              - AWSInstanceType2Arch
              - !Ref SynchronyNodeInstanceType
              - Arch
      InstanceType: !Ref SynchronyNodeInstanceType
      SecurityGroups: [!Ref SecurityGroup]
      UserData:
        Fn::Base64:
          !Join
            - ""
            -
              - "#!/bin/bash -xe\n"
              - "yum update -y aws-cfn-bootstrap\n"
              - !Sub "/opt/aws/bin/cfn-init -v --stack ${AWS::StackName}"
              - !Sub " --resource SynchronyClusterNodeLaunchConfig --region ${AWS::Region}\n"
              - !Sub "/opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName}"
              - !Sub " --resource SynchronyClusterNodeGroup --region ${AWS::Region}"
  SynchronyClusterNodeScaleUpPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Condition: UseSynchronyAutoScalingGroup
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref SynchronyClusterNodeGroup
      Cooldown: '600'
      ScalingAdjustment: 1
  SynchronyClusterNodeScaleDownPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Condition: UseSynchronyAutoScalingGroup
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref SynchronyClusterNodeGroup
      Cooldown: '600'
      ScalingAdjustment: -1
  SynchronyCPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Condition: UseSynchronyAutoScalingGroup
    Properties:
      AlarmDescription: Scale up if CPU > 60% for 5 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: 60
      EvaluationPeriods: 5
      Threshold: 60
      AlarmActions: [!Ref SynchronyClusterNodeScaleUpPolicy]
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref SynchronyClusterNodeGroup
      ComparisonOperator: GreaterThanThreshold
  SynchronyCPUAlarmLow:
    Type: AWS::CloudWatch::Alarm
    Condition: UseSynchronyAutoScalingGroup
    Properties:
      AlarmDescription: Scale down if CPU < 40% for 30 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: 60
      EvaluationPeriods: 30
      Threshold: 40
      AlarmActions: [!Ref SynchronyClusterNodeScaleDownPolicy]
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref SynchronyClusterNodeGroup
      ComparisonOperator: LessThanThreshold
  EBSRestoreVol:
    Type: AWS::EC2::Volume
    Properties:
      AvailabilityZone: !Join ['', [!Ref "AWS::Region", "a"]]
      SnapshotId: !Ref EBSSnapshotId
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} Confluence DR shared-home volume"
        - Key: Cluster
          Value: !Ref AWS::StackName
        - Key: Application
          Value: !Ref AWS::StackId
      VolumeType: gp2
  NFSServer:
    Type: 'AWS::EC2::Instance'
    Metadata:
      'AWS::CloudFormation::Init':
        config:
          files:
            /tmp/nfs:
              content: >-
                IwojIERlZmluZSB3aGljaCBwcm90b2NvbCB2ZXJzaW9ucyBtb3VudGQgCiMgd2lsbCBhZHZlcnRpc2UuIFRoZSB2YWx1ZXMgYXJlICJubyIgb3IgInllcyIKIyB3aXRoIHllcyBiZWluZyB0aGUgZGVmYXVsdAojTU9VTlREX05GU19WMj0ibm8iCiNNT1VOVERfTkZTX1YzPSJubyIKIwojCiMgUGF0aCB0byByZW1vdGUgcXVvdGEgc2VydmVyLiBTZWUgcnF1b3RhZCg4KQojUlFVT1RBRD0iL3Vzci9zYmluL3JwYy5ycXVvdGFkIgojIFBvcnQgcnF1b3RhZCBzaG91bGQgbGlzdGVuIG9uLgojUlFVT1RBRF9QT1JUPTg3NQojIE9wdGluYWwgb3B0aW9ucyBwYXNzZWQgdG8gcnF1b3RhZAojUlBDUlFVT1RBRE9QVFM9IiIKIwojCiMgT3B0aW9uYWwgYXJndW1lbnRzIHBhc3NlZCB0byBpbi1rZXJuZWwgbG9ja2QKI0xPQ0tEQVJHPQojIFRDUCBwb3J0IHJwYy5sb2NrZCBzaG91bGQgbGlzdGVuIG9uLgpMT0NLRF9UQ1BQT1JUPTMyODAzCiMgVURQIHBvcnQgcnBjLmxvY2tkIHNob3VsZCBsaXN0ZW4gb24uCkxPQ0tEX1VEUFBPUlQ9MzI3NjkKIwojCiMgT3B0aW9uYWwgYXJndW1lbnRzIHBhc3NlZCB0byBycGMubmZzZC4gU2VlIHJwYy5uZnNkKDgpCiMgVHVybiBvZmYgdjIgYW5kIHYzIHByb3RvY29sIHN1cHBvcnQKI1JQQ05GU0RBUkdTPSItTiAyIC1OIDMiCiMgVHVybiBvZmYgdjQgcHJvdG9jb2wgc3VwcG9ydAojUlBDTkZTREFSR1M9Ii1OIDQiCiMgTnVtYmVyIG9mIG5mcyBzZXJ2ZXIgcHJvY2Vzc2VzIHRvIGJlIHN0YXJ0ZWQuCiMgVGhlIGRlZmF1bHQgaXMgOC4gCiNSUENORlNEQ09VTlQ9OAojIFN0b3AgdGhlIG5mc2QgbW9kdWxlIGZyb20gYmVpbmcgcHJlLWxvYWRlZAojTkZTRF9NT0RVTEU9Im5vbG9hZCIKIyBTZXQgVjQgZ3JhY2UgcGVyaW9kIGluIHNlY29uZHMKI05GU0RfVjRfR1JBQ0U9OTAKIwojCiMKIyBPcHRpb25hbCBhcmd1bWVudHMgcGFzc2VkIHRvIHJwYy5tb3VudGQuIFNlZSBycGMubW91bnRkKDgpCiNSUENNT1VOVERPUFRTPSIiCiMgUG9ydCBycGMubW91bnRkIHNob3VsZCBsaXN0ZW4gb24uCk1PVU5URF9QT1JUPTg5MgojCiMKIyBPcHRpb25hbCBhcmd1bWVudHMgcGFzc2VkIHRvIHJwYy5zdGF0ZC4gU2VlIHJwYy5zdGF0ZCg4KQojU1RBVERBUkc9IiIKIyBQb3J0IHJwYy5zdGF0ZCBzaG91bGQgbGlzdGVuIG9uLgojU1RBVERfUE9SVD02NjIKIyBPdXRnb2luZyBwb3J0IHN0YXRkIHNob3VsZCB1c2VkLiBUaGUgZGVmYXVsdCBpcyBwb3J0CiMgaXMgcmFuZG9tCiNTVEFURF9PVVRHT0lOR19QT1JUPTIwMjAKIyBTcGVjaWZ5IGNhbGxvdXQgcHJvZ3JhbSAKI1NUQVREX0hBX0NBTExPVVQ9Ii91c3IvbG9jYWwvYmluL2ZvbyIKIwojCiMgT3B0aW9uYWwgYXJndW1lbnRzIHBhc3NlZCB0byBycGMuaWRtYXBkLiBTZWUgcnBjLmlkbWFwZCg4KQojUlBDSURNQVBEQVJHUz0iIgojCiMgU2V0IHRvIHR1cm4gb24gU2VjdXJlIE5GUyBtb3VudHMuIAojU0VDVVJFX05GUz0ieWVzIgojIE9wdGlvbmFsIGFyZ3VtZW50cyBwYXNzZWQgdG8gcnBjLmdzc2QuIFNlZSBycGMuZ3NzZCg4KQojUlBDR1NTREFSR1M9IiIKIyBPcHRpb25hbCBhcmd1bWVudHMgcGFzc2VkIHRvIHJwYy5zdmNnc3NkLiBTZWUgcnBjLnN2Y2dzc2QoOCkKI1JQQ1NWQ0dTU0RBUkdTPSIiCiMKIyBUbyBlbmFibGUgUkRNQSBzdXBwb3J0IG9uIHRoZSBzZXJ2ZXIgYnkgc2V0dGluZyB0aGlzIHRvCiMgdGhlIHBvcnQgdGhlIHNlcnZlciBzaG91bGQgbGlzdGVuIG9uCiNSRE1BX1BPUlQ9MjAwNDkgCg==
            /etc/atl:
              content:
                'Fn::Join':
                  - "\n"
                  -
                    - !Sub "ATL_AWS_STACK_NAME=${AWS::StackName}"
                    - !Sub "ATL_ENVIRONMENT=${DeployEnvironment}"
                    - "ATL_NODE_TYPE=nfs"
            /tmp/bootstrap_local_ansible:
              content: !Sub |
                #!/usr/bin/env bash
                # bootstrap any local-ansible repo that is passed in on this template

                localansiblerepopath=/home/localansible
                gitkeylocation=/root/.ssh/gitkey

                # ensure awscli is up to date
                pip install --upgrade awscli
                gitkey=$(aws --region=${AWS::Region} ssm get-parameters --names "${LocalAnsibleGitSshKeyName}" --with-decryption | jq --raw-output '.Parameters[0] .Value')
                echo -e $gitkey > $gitkeylocation
                chmod 600 $gitkeylocation
                export GIT_SSH_COMMAND="ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -i $gitkeylocation"

                mkdir -p $localansiblerepopath
                cd $localansiblerepopath
                git clone "${LocalAnsibleGitRepo}"
                cp $localansiblerepopath/*/local-ansible-run /usr/local/bin/local-ansible-run
                chmod 750 /usr/local/bin/local-ansible-run
              mode: "000750"
              owner: root
              group: root
          commands:
            010_make_mount_point:
              command: mkdir /nfs
              ignoreErrors: false
            020_add_nfs_mount:
              command:
                echo "/dev/xvdk   /nfs        ext4    defaults        0   2" >>/etc/fstab
              ignoreErrors: false
            030_mount_nfs:
              command: mount /nfs
            040_fix_exports:
              command: echo "/nfs *(rw,no_root_squash,no_subtree_check,sync)" > /etc/exports
            045_check_exports:
              command: cat /etc/exports
            050_restart_nfs:
              command: service nfs restart
            090_bootstrap_local_ansible:
              command: /tmp/bootstrap_local_ansible > /var/log/bootstrap_local_ansible.log 2>&1
              test: !Sub test -n "${LocalAnsibleGitRepo}"
          services:
            sysvinit:
              nfs:
                enabled: true
                ensureRunning: true
          packages:
            yum:
              nfs-utils: []
    Properties:
      AvailabilityZone: !Join ['', [!Ref "AWS::Region", "a"]]
      IamInstanceProfile: !Ref ConfluenceClusterNodeInstanceProfile
      ImageId:
        !FindInMap
          - AWSRegionArch2AMI
          - !Ref "AWS::Region"
          - !FindInMap
              - AWSInstanceType2Arch
              - !Ref ClusterNodeInstanceType
              - Arch
      InstanceType: !Ref ClusterNodeInstanceType
      KeyName: !Ref KeyPairName
      NetworkInterfaces:
        - GroupSet:
            - !Ref SecurityGroup
          AssociatePublicIpAddress: false
          DeviceIndex: '0'
          DeleteOnTermination: true
          SubnetId: !Select [0, !Ref InternalSubnets]
      UserData: !Base64
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -v
            - |
              yum update -y
            - |
              yum install aws-cfn-bootstrap -y
            - |
              # download data and install file
            - '/opt/aws/bin/cfn-init --stack '
            - !Ref 'AWS::StackName'
            - ' --resource NFSServer '
            - ' --region '
            - !Ref 'AWS::Region'
            - |2
               || error_exit 'Failed to run cfn-init'
            - |
              echo "/nfs *(rw,no_root_squash,no_subtree_check,sync)" > /etc/exports
            - |
              base64 -d /tmp/nfs > /etc/sysconfig/nfs
            - |
              exportfs -av
            - |
              /sbin/service rpcbind restart
            - |
              /sbin/service nfs restart
            - |
            - '/opt/aws/bin/cfn-signal -e $? '
            - ' --stack '
            - !Ref 'AWS::StackName'
            - " --resource NFSServer "
            - ' --region '
            - !Ref 'AWS::Region'
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} DR NFS Node"
      Volumes:
        - VolumeId: !Ref EBSRestoreVol
          Device: /dev/xvdk
    CreationPolicy:
      ResourceSignal:
        Timeout: PT20M
  NFSR53name:
    Type: AWS::Route53::RecordSet
    Condition: UseHostedZone
    Properties:
      HostedZoneName: !Ref HostedZone
      Comment: Route53 A rec for the nfs
      Name: !If [ UseHostedZone, !Join ['.', [!Ref 'AWS::StackName', 'nfs', !Ref 'HostedZone']], '']
      Type: A
      TTL: '900'
      ResourceRecords:
        - !GetAtt NFSServer.PrivateIp
# Database
  DB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: !Ref DBInstanceClass
      DBInstanceIdentifier: !Ref AWS::StackName
      DBSubnetGroupName: !Ref DBSubnetGroup
      DBSnapshotIdentifier: !Ref DBSnapshotName
      Engine: postgres
      EngineVersion: '9.6'
      Iops: !If [DBProvisionedIops, !Ref DBIops, !Ref 'AWS::NoValue']
      MasterUsername: postgres
      MasterUserPassword: !If [DoSetDBMasterUserPassword, !Ref DBMasterUserPassword, !Ref 'AWS::NoValue']
      MultiAZ: !Ref DBMultiAZ
      StorageType: !If [DBProvisionedIops, io1, gp2]
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} Confluence PostgreSQL Database"
      VPCSecurityGroups: [!Ref SecurityGroup]
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: DBSubnetGroup
      SubnetIds: !Ref InternalSubnets
  DBCname:
    Condition: UseHostedZone
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Ref HostedZone
      Comment: Route53 cname for the RDS
      Name: !Sub "${AWS::StackName}.db.${HostedZone}"
      Type: CNAME
      TTL: '900'
      ResourceRecords:
        - !GetAtt DB.Endpoint.Address
# Loadbalancer
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '300'
      Scheme: !Ref LoadBalancerScheme
      SecurityGroups: [!Ref SecurityGroup]
      Subnets: !Ref ExternalSubnets
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-LoadBalancer"
        - Key: Cluster
          Value: !Ref AWS::StackName
  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
        - CertificateArn:
            !If
              - DoSSL
              - !Ref SSLCertificateARN
              - !Ref AWS::NoValue
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref MainTargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: !If [DoSSL, 443, 80]
      Protocol: !If [DoSSL, HTTPS, HTTP]
  LoadBalancerCname:
    Condition: UseHostedZone
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Ref HostedZone
      Comment: Route53 cname for the ALB
      Name: !Sub
        - "${SubDomainName}.${HostedZone}"
        - SubDomainName: !If [UseSubDomainName, !Ref 'SubDomainName', !Ref 'AWS::StackName']
          HostedZone: !Ref 'HostedZone'
      Type: CNAME
      TTL: '900'
      ResourceRecords:
        - !GetAtt LoadBalancer.DNSName
  SynchronyListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Condition: UseSynchronyAutoScalingGroup
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref SynchronyTargetGroup
      Conditions:
        - Field: path-pattern
          Values:
            - '/synchrony/*'
      ListenerArn: !Ref LoadBalancerListener
      Priority: 1
  MainTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Join ['-', [!Ref 'AWS::StackName', !Select [2, !Split ['-', !GetAtt LoadBalancer.LoadBalancerName]]]]
      Port: !Ref TomcatDefaultConnectorPort
      Protocol: HTTP
      VpcId: !Ref VPC
      HealthCheckIntervalSeconds: 20
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: '200'
      HealthCheckPath: !If [UseContextPath, !Sub "${TomcatContextPath}/status", '/status']
      HealthCheckPort: !Ref TomcatDefaultConnectorPort
      HealthCheckProtocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: 'true'
        - Key: stickiness.type
          Value: lb_cookie
      Tags:
        - Key: Name
          Value: MainTargetGroup
        - Key: Cluster
          Value: !Ref AWS::StackName
    DependsOn:
      - LoadBalancer
  SynchronyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Condition: UseSynchronyAutoScalingGroup
    Properties:
      Port: 8091
      Protocol: HTTP
      VpcId: !Ref VPC
      HealthCheckIntervalSeconds: 20
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: '200'
      HealthCheckPath: /synchrony/heartbeat
      HealthCheckPort: '8091'
      HealthCheckProtocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: 'true'
        - Key: stickiness.type
          Value: lb_cookie
      Tags:
        - Key: Name
          Value: SynchronyTargetGroup
        - Key: synchrony_service
          Value: !Ref AWS::StackName
    DependsOn:
      - LoadBalancer
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group allowing SSH and HTTP/HTTPS access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref CidrBlock
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref CidrBlock
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref CidrBlock
        - IpProtocol: tcp
          FromPort: 25500
          ToPort: 25500
          CidrIp: !Ref CidrBlock
          Description: 'Confluence Collaborative Editing cluster base port (Aleph)'
        - IpProtocol: tcp
          FromPort: 5801
          ToPort: 5801
          CidrIp: !Ref CidrBlock
          Description: 'Confluence Data Center clustering (Hazelcast)'
        - IpProtocol: tcp
          FromPort: 8091
          ToPort: 8091
          CidrIp: !Ref CidrBlock
          Description: 'Confluence Collaborative Editing (Synchrony)'
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} sg"
      VpcId: !Ref VPC
  SecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: '-1'
      FromPort: -1
      ToPort: -1
      SourceSecurityGroupId: !Ref SecurityGroup
Outputs:
  ServiceURL:
    Description: The URL to access this Atlassian service
    Value: !If
      - UseCustomDnsName
      - !Sub
        - "${HTTP}://${CustomDNSName}${ContextPath}"
        - HTTP: !If [SSLScheme, 'https', 'http']
          CustomDNSName: !Ref CustomDnsName
          ContextPath: !Ref TomcatContextPath
      - !If
        - UseHostedZone
        - !Sub
          - "${HTTP}://${LBCName}${ContextPath}"
          - HTTP: !If [SSLScheme, 'https', 'http']
            LBCName: !Ref LoadBalancerCname
            ContextPath: !Ref TomcatContextPath
        - !Sub
          - "${HTTP}://${LoadBalancerDNSName}${ContextPath}"
          - HTTP: !If [SSLScheme, 'https', 'http']
            LoadBalancerDNSName: !GetAtt LoadBalancer.DNSName
            ContextPath: !Ref TomcatContextPath
  LoadBalancerURL:
    Description: The Load Balancer URL
    Value: !Sub
      - "${HTTP}://${LoadBalancerDNSName}"
      - HTTP: !If [DoSSL, 'https', 'http']
        LoadBalancerDNSName: !GetAtt LoadBalancer.DNSName
  SGname:
    Description: The name of the SecurityGroup
    Value: !Ref SecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-SGname"
  DBEndpointAddress:
    Description: The Database Connection String
    Value: !GetAtt DB.Endpoint.Address
  NFSR53name:
    Description: The DR NFS name
    Value: !If [ UseHostedZone, !Join ['.', [!Ref 'AWS::StackName', 'nfs', !Ref 'HostedZone']], '']
  ConfluenceTargetGroupARN:
    Description: The name of the load balancer of Confluence cluster nodes
    Value: !Ref MainTargetGroup
  ClusterNodeGroup:
    Description: The name of the auto scaling group of Confluence cluster nodes
    Value: !Ref ClusterNodeGroup
  SynchronyClusterNodeGroup:
    Description: The name of the auto scaling group of Synchrony cluster nodes
    Value: !If
      - UseSynchronyAutoScalingGroup
      - !Ref SynchronyClusterNodeGroup
      - 'local'
