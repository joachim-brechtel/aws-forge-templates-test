---
# Bring up diffs between this file and the BitbucketDataCenter.template.yaml, ConfluenceDataCenter.template.yaml, and JiraDataCenter.template.yaml
# As a rule, we should work to minimize our diffs between these files as best we can, so that future changes are easy to make across all supported CloudFormation templates.
# Using YAML as our file format will allow us to put a block comment at the top of the file saying exactly this.
AWSTemplateFormatVersion: 2010-09-09
Description: Atlassian Crowd Data Center
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Crowd setup
        Parameters:
          - CrowdVersion
      - Label:
          default: Deployment information
        Parameters:
          - DeployEnvironment
      - Label:
          default: Cluster nodes
        Parameters:
          - ClusterNodeInstanceType
          - ClusterNodeMax
          - ClusterNodeMin
          - ClusterNodeVolumeSize
      - Label:
          default: Database
        Parameters:
          - DBInstanceClass
          - DBIops
          - DBMasterUserPassword
          - DBMultiAZ
          - DBPassword
          - DBReadReplicaInstanceClass
          - DBStorage
          - DBStorageType
      - Label:
          default: Networking
        Parameters:
          - LoadBalancerScheme
          - CidrBlock
          - ExternalSubnets
          - InternalSubnets
          - KeyPairName
          - SSLCertificateARN
          - VPC
      - Label:
          default: DNS (Optional)
        Parameters:
          - CustomDnsName
          - HostedZone
          - SubDomainName
      - Label:
          default: Advanced (Optional)
        Parameters:
          - CrowdDownloadUrl
          - DeployFromAnsible
          - KmsKeyArn
          - LocalAnsibleGitRepo
          - LocalAnsibleGitSshKeyName
          - StartCollectd
      - Label:
          default: Application Tuning (Optional)
        Parameters:
          - TomcatContextPath
          - CatalinaOpts
          - JvmHeapOverride
          - DBPoolMaxSize
          - DBPoolMinSize
          - DBMaxIdle
          - DBMaxWaitMillis
          - DBMinEvictableIdleTimeMillis
          - DBMinIdle
          - DBRemoveAbandoned
          - DBRemoveAbandonedTimeout
          - DBTestOnBorrow
          - DBTestWhileIdle
          - DBTimeBetweenEvictionRunsMillis
          - MailEnabled
          - TomcatAcceptCount
          - TomcatConnectionTimeout
          - TomcatDefaultConnectorPort
          - TomcatEnableLookups
          - TomcatMaxThreads
          - TomcatMinSpareThreads
          - TomcatProtocol
          - TomcatRedirectPort
          - TomcatScheme
    ParameterLabels:
      CatalinaOpts:
        default: Catalina options
      CidrBlock:
        default: Permitted IP range
      ClusterNodeMax:
        default: Maximum number of cluster nodes
      ClusterNodeMin:
        default: Minimum number of cluster nodes
      ClusterNodeInstanceType:
        default: Cluster node instance type
      ClusterNodeVolumeSize:
        default: Cluster node instance volume size
      CrowdVersion:
        default: Version
      CrowdDownloadUrl:
        default: Crowd Download URL
      CustomDnsName:
        default: Existing DNS name (optional)
      DBInstanceClass:
        default: Database instance class
      DBIops:
        default: RDS Provisioned IOPS
      DBMasterUserPassword:
        default: Master (admin) password *
      DBMaxIdle:
        default: DB Maximum Idle
      DBMaxWaitMillis:
        default: DB Maximum Wait
      DBMinEvictableIdleTimeMillis:
        default: DB Minimum Evictable Idle Time
      DBMinIdle:
        default: DB Minimum Idle Connections
      DBMultiAZ:
        default: Enable RDS Multi-AZ deployment
      DBPassword:
        default: Application user database password *
      DBPoolMaxSize:
        default: DB Pool Maximum Size
      DBPoolMinSize:
        default: DB Pool Minimum Size
      DBReadReplicaInstanceClass:
        default: Read Replica Instance Class
      DBRemoveAbandoned:
        default: DB Remove Abandoned?
      DBRemoveAbandonedTimeout:
        default: DB Remove Abandoned Timeout
      DBStorage:
        default: Database storage
      DBStorageType:
        default: Database storage type
      DBTestOnBorrow:
        default: DB Test On Borrow?
      DBTestWhileIdle:
        default: DB Test While Idle?
      DBTimeBetweenEvictionRunsMillis:
        default: DB Time Between Eviction Runs
      DeployEnvironment:
        default: Deployment Environment
      DeployFromAnsible:
        default: Deployment Automation Git Repository details
      ExternalSubnets:
        default: External subnets *
      HostedZone:
        default: Route 53 Hosted Zone (optional)
      InternalSubnets:
        default: Internal subnets *
      JvmHeapOverride:
        default: JVM Heap Size Override
      KeyPairName:
        default: Key Name *
      KmsKeyArn:
        default: Encryption Key ARN
      LoadBalancerScheme:
        default: Load Balancer Scheme
      LocalAnsibleGitRepo:
        default: Git repo for local-ansible
      LocalAnsibleGitSshKeyName:
        default: Git SSH key name for local-ansible
      MailEnabled:
        default: Enable App to Process Email
      SSLCertificateARN:
        default: SSL Certificate ARN
      StartCollectd:
        default: Start the collectd metrics agent
      SubDomainName:
        default: Sub-domain for Hosted Zone (optional)
      TomcatAcceptCount:
        default: Tomcat Accept Count
      TomcatConnectionTimeout:
        default: Tomcat Connection Timeout
      TomcatContextPath:
        default: Tomcat Context Path
      TomcatDefaultConnectorPort:
        default: Tomcat Default Connector Port
      TomcatEnableLookups:
        default: Tomcat Enable DNS Lookups
      TomcatMaxThreads:
        default: Tomcat Maximum Threads
      TomcatMinSpareThreads:
        default: Tomcat Minimum Spare Threads
      TomcatProtocol:
        default: Tomcat Protocol
      TomcatRedirectPort:
        default: Tomcat Redirect Port
      TomcatScheme:
        default: Tomcat protocol Scheme
      VPC:
        default: VPC *
Parameters:
  CatalinaOpts:
    Description: Pass in any additional JVM options to tune Catalina Tomcat
    Type: String
  CidrBlock:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
    Description: CIDR block allowed to access the Atlassian product. This should be set to a trusted IP range; if you want to give public access use '0.0.0.0/0'.
    MinLength: 9
    MaxLength: 18
    Type: String
  ClusterNodeInstanceType:
    Default: t3.medium
    AllowedValues:
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - c5d.large
      - c5d.xlarge
      - c5d.2xlarge
      - c5d.4xlarge
      - c5d.9xlarge
      - c5d.18xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - h1.2xlarge
      - h1.4xlarge
      - h1.8xlarge
      - h1.16xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.12xlarge
      - m5a.24xlarge
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.12xlarge
      - m5d.24xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5a.large
      - r5a.xlarge
      - r5a.2xlarge
      - r5a.4xlarge
      - r5a.12xlarge
      - r5a.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - x1.16xlarge
      - x1.32xlarge
      - x1e.xlarge
      - x1e.2xlarge
      - x1e.4xlarge
      - x1e.8xlarge
      - x1e.16xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: Must be an EC2 instance type from the selection list
    Description: Instance type for the cluster application nodes.
    Type: String
  ClusterNodeMax:
    Default: 1
    Description: Maximum number of nodes in the cluster.
    Type: Number
  ClusterNodeMin:
    Default: 1
    Description: Set to 1 for new deployment. Can be updated post launch.
    Type: Number
  ClusterNodeVolumeSize:
    Default: 50
    Description: Size of cluster node root volume in GB (note - size based upon Application indexes x 4)
    Type: Number
  CrowdDownloadUrl:
    ConstraintDescription: Must be a valid Crowd download url
    Description: This parameter is used to download a custom Crowd version for testing purposes. Leave this parameter blank to automatically download the official version you specified earlier.
    Type: String
  CrowdVersion:
    Default: 3.7.0
    AllowedPattern: '(\d+\.\d+\.\d+(-?.*))'
    ConstraintDescription: Must be a valid Crowd version number, for example 3.3.3.
    Description: The version of Crowd to install
    Type: String
  CustomDnsName:
    Description: 'Use custom existing DNS name for this Atlassian service. This will take precedence over HostedZone. Please note: you must own the domain and configure it to point at the load balancer.'
    Type: String
  DBInstanceClass:
    Default: db.t2.medium
    AllowedValues:
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.m4.16xlarge
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
      - db.m5.12xlarge
      - db.m5.24xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
      - db.r5.large
      - db.r5.xlarge
      - db.r5.2xlarge
      - db.r5.4xlarge
      - db.r5.12xlarge
      - db.r5.24xlarge
      - db.t2.medium
      - db.t2.large
      - db.t2.xlarge
      - db.t2.2xlarge
      - db.t3.medium
      - db.t3.large
      - db.t3.xlarge
      - db.t3.2xlarge
    ConstraintDescription: Must be a valid RDS instance class, from the selection list
    Description: RDS instance type
    Type: String
  DBIops:
    Default: 1000
    ConstraintDescription: Must be in the range 1000 - 30000
    Description: 'Must be in the range of 1000 - 30000 and a multiple of 1000. This value is only used with Provisioned IOPS. Note: The ratio of IOPS per allocated-storage must be between 3.00 and 10.00.'
    MinValue: 1000
    MaxValue: 30000
    Type: Number
  DBMasterUserPassword:
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: Must be at least 8 alphanumeric characters.
    Description: Password for the master ('postgres') account.
    MinLength: 8
    MaxLength: 128
    NoEcho: true
    Type: String
  DBMaxIdle:
    Default: 20
    Description: The maximum number of database connections that are allowed to remain idle in the pool
    Type: String
  DBMaxWaitMillis:
    Default: 10000
    Description: The length of time (in milliseconds) that Crowd is allowed to wait for a database connection to become available (while there are no free ones available in the pool), before returning an error
    Type: String
  DBMinEvictableIdleTimeMillis:
    Default: 180000
    Description: The minimum amount of time an object may sit idle in the database connection pool before it is eligible for eviction by the idle object eviction
    Type: String
  DBMinIdle:
    Default: 10
    Description: The minimum number of idle database connections that are kept open at any time
    Type: String
  DBMultiAZ:
    Description: Whether to provision a multi-AZ RDS instance.
    Default: true
    AllowedValues:
      - true
      - false
    ConstraintDescription: Must be 'true' or 'false'.
    Type: String
  DBPassword:
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: Must be at least 8 alphanumeric characters.
    Description: Database user account password.
    MinLength: 8
    MaxLength: 128
    NoEcho: true
    Type: String
  DBPoolMaxSize:
    Default: 20
    Description: The maximum number of database connections that can be opened at any time
    Type: String
  DBPoolMinSize:
    Default: 20
    Description: The minimum number of idle database connections that are kept open at any time
    Type: String
  DBReadReplicaInstanceClass:
    Default: none
    Description: Select an instance class for a read replica DB (will not be used by application; intended for third-party/read-only access). Note that enabling this will require brief downtime for your database if Multi-AZ is not enabled!
    AllowedValues:
      - none
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.m4.16xlarge
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
      - db.m5.12xlarge
      - db.m5.24xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
      - db.t2.medium
      - db.t2.large
      - db.t2.xlarge
      - db.t2.2xlarge
      - db.t3.medium
      - db.t3.large
      - db.t3.xlarge
      - db.t3.2xlarge
    Type: String
  DBRemoveAbandoned:
    Default: true
    Description: Flag to remove abandoned database connections if they exceed the Removed Abandoned Timeout
    Type: String
  DBRemoveAbandonedTimeout:
    Default: 60
    Description: The length of time (in seconds) that a database connection can be idle before it is considered abandoned
    Type: String
  DBStorage:
    Default: 10
    Description: Database allocated storage size, in gigabytes (GB). If you choose Provisioned IOPS, storage should be between 100 and 6144
    Type: Number
  DBStorageType:
    Default: General Purpose (SSD)
    AllowedValues:
      - General Purpose (SSD)
      - Provisioned IOPS
    ConstraintDescription: Must be 'General Purpose (SSD)' or 'Provisioned IOPS'.
    Description: Database storage type
    Type: String
  DBTestOnBorrow:
    Default: false
    Description: Tests if the database connection is valid when it is borrowed from the database connection pool by Crowd
    Type: String
  DBTestWhileIdle:
    Default: true
    Description: Periodically tests if the database connection is valid when it is idle
    Type: String
  DBTimeBetweenEvictionRunsMillis:
    Default: 60000
    Description: The number of milliseconds to sleep between runs of the idle object eviction thread. When non-positive, no idle object eviction thread will be run
    Type: String
  DeployEnvironment:
    Default: prod
    AllowedValues:
      - dev
      - dr
      - prod
      - stg
    ConstraintDescription: Must be either Production (prod), Staging (stg), or Disaster Recovery (dr).
    Description: Environment of the application - either Production, Staging, or Disaster Recovery (DR)
    Type: String
  DeployFromAnsible:
    Default: https://bitbucket.org/atlassian/dc-deployments-automation.git;master;aws_crowd_dc_node.yml
    AllowedPattern: '^(http|https|git|ssh):\/\/(.+);(.+);(.+)$'
    ConstraintDescription: Must be a valid git repo, branch and playbook in the format <protocol>://<repo>;<branch>;<playbook>
    Description: Repository, branch and playbook to use for Ansible based deployment.
    Type: String
  ExternalSubnets:
    ConstraintDescription: Must be a list of two or more Subnet IDs within the selected VPC.
    Description: Subnets (two or more) where your user-facing load balancer will be deployed. MUST be within the selected VPC.
    Type: List<AWS::EC2::Subnet::Id>
  HostedZone:
    ConstraintDescription: Must be the name of an existing Route53 Hosted Zone.
    Description: The domain name of the Route53 PRIVATE Hosted Zone in which to create cnames
    Type: String
  InternalSubnets:
    ConstraintDescription: Must be a list of two or more Subnet IDs within the selected VPC.
    Description: Subnets (two or more) where your cluster nodes and other internal infrastructure will be deployed. MUST be within the selected VPC. Specify the ExternalSubnets again here if you wish to deploy the whole stack into the same subnets.
    Type: List<AWS::EC2::Subnet::Id>
  JvmHeapOverride:
    Description: Override the default amount of memory to allocate to the JVM for your instance type - set size in meg or gig e.g. 1024m or 1g
    Type: String
  KeyPairName:
    ConstraintDescription: Must be the name of an existing EC2 Key Pair.
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
  KmsKeyArn:
    Default: ''
    AllowedPattern: '^arn:aws:kms:[\w\-]+:\d{12}:key\/[\w\-]+|^(?![\s\S])'
    Description: Provide the KMS key ARN for a pre-generated encryption key. If this is provided, RDS and EFS will be encrypted at-rest using this key
    Type: String
  LoadBalancerScheme:
    Default: internet-facing
    AllowedValues:
      - internet-facing
      - internal
    ConstraintDescription: Must be 'internet-facing' or 'internal'.
    Description: Controls if the load balancer is assigned a public IP address
    Type: String
  LocalAnsibleGitRepo:
    Description: For additional node customization, provide repo location to git clone. This must be in format git@bitbucket.org:atlassian/atlassian-local-ansible-example.git if using Bitbucket Cloud, or ssh://git@stash.example.com:7997/my-local-ansible.git (ie protocol included) if using Bitbucket Server.
    Type: String
  LocalAnsibleGitSshKeyName:
    Description: If your git repo is private, provide an AWS Systems Manager ParameterStore key name that holds an SSH private key that can access the repo
    Type: String
  MailEnabled:
    AllowedValues:
      - true
      - false
    ConstraintDescription: Must be 'true' or 'false'.
    Default: true
    Description: Enable mail processing and sending
    Type: String
  SSLCertificateARN:
    Description: Amazon Resource Name (ARN) of your SSL certificate. If you want to use your own certificate that you generated outside of Amazon, you need to first import it to AWS Certificate Manager. After a successful import, you'll receive the ARN. If you want to create a certificate with AWS Certificate Manager (ACM certificate), you will receive the ARN after it's successfully created.
    MinLength: 0
    MaxLength: 90
    Type: String
  StartCollectd:
    Default: true
    AllowedValues:
      - true
      - false
    ConstraintDescription: Must be 'true' or 'false'.
    Description: Start the collectd service
    Type: String
  SubDomainName:
    Description: Leave this field blank to use your stack name as the sub-domain.
    Type: String
  TomcatAcceptCount:
    Default: 10
    Description: The maximum queue length for incoming connection requests when all possible request processing threads are in use
    Type: String
  TomcatConnectionTimeout:
    Default: 20000
    Description: The number of milliseconds this Connector will wait, after accepting a connection, for the request URI line to be presented
    Type: String
  TomcatContextPath:
    AllowedPattern: '^(\/[A-z_\-0-9\.]+)?$'
    Description: The context path of this web application, which is matched against the beginning of each request URI to select the appropriate web application for processing. If used, must include leading "/"
    Type: String
  TomcatDefaultConnectorPort:
    Default: 8080
    Description: The port on which to serve the application
    Type: String
  TomcatEnableLookups:
    Default: false
    Description: Set to true if you want calls to request.getRemoteHost() to perform DNS lookups in order to return the actual host name of the remote client
    Type: String
  TomcatMaxThreads:
    Default: 200
    Description: The maximum number of request processing threads to be created by this Connector, which therefore determines the maximum number of simultaneous requests that can be handled
    Type: String
  TomcatMinSpareThreads:
    Default: 10
    Description: The minimum number of threads always kept running
    Type: String
  TomcatProtocol:
    Default: 'HTTP/1.1'
    Description: Sets the protocol to handle incoming traffic
    Type: String
  TomcatRedirectPort:
    Default: 8443
    Description: The port number for Catalina to use when automatically redirecting a non-SSL connector actioning a redirect to a SSL URI
    Type: String
  TomcatScheme:
    Default: http
    Description: "The name of the protocol you wish to have returned, ie 'https' for an SSL Connector. The value of this setting also configures Tomcat's proxy port (443/80) and secure (true/false) settings appropriately."
    Type: String
    AllowedValues: [http, https]
  VPC:
    ConstraintDescription: Must be the ID of a VPC.
    Description: Virtual Private Cloud
    Type: AWS::EC2::VPC::Id
Conditions:
  DBProvisionedIops:
    !Equals [!Ref DBStorageType, Provisioned IOPS]
  DisableMail:
    !Not [!Equals [!Ref MailEnabled, true]]
  DoCollectd:
    !Equals [!Ref StartCollectd, true]
  DoCreateReadReplica:
    !Not [!Equals [!Ref DBReadReplicaInstanceClass, 'none']]
  DoSetDBMasterUserPassword:
    !Not [!Equals [!Ref DBMasterUserPassword, '']]
  DoSSL:
    !Not [!Equals [!Ref SSLCertificateARN, '']]
  SSLScheme:
    !Equals [!Ref TomcatScheme, 'https']
  OverrideHeap:
    !Not [!Equals [!Ref JvmHeapOverride, '']]
  UseContextPath:
    !Not [!Equals [!Ref TomcatContextPath, '']]
  UseCustomDnsName:
    !Not [!Equals [!Ref CustomDnsName, '']]
  UseEncryption:
    !Not [!Equals [!Ref KmsKeyArn, '']]
  UseHostedZone:
    !Not [!Equals [!Ref HostedZone, '']]
  UseHostedZoneAndDoCreateReadReplica:
    !And
      - !Condition DoCreateReadReplica
      - !Condition UseHostedZone
  UseSubDomainName:
    !Not [!Equals [!Ref SubDomainName, '']]
Mappings:
  AWSInstanceType2Arch:
    c4.xlarge:
      Jvmheap: 3584m
    c4.2xlarge:
      Jvmheap: 9216m
    c4.4xlarge:
      Jvmheap: 12288m
    c4.8xlarge:
      Jvmheap: 12288m
    c5.xlarge:
      Jvmheap: 4096m
    c5.2xlarge:
      Jvmheap: 10240m
    c5.4xlarge:
      Jvmheap: 12288m
    c5.9xlarge:
      Jvmheap: 12288m
    c5.18xlarge:
      Jvmheap: 12288m
    c5d.xlarge:
      Jvmheap: 4096m
    c5d.2xlarge:
      Jvmheap: 10240m
    c5d.4xlarge:
      Jvmheap: 12288m
    c5d.9xlarge:
      Jvmheap: 12288m
    c5d.18xlarge:
      Jvmheap: 12288m
    d2.xlarge:
      Jvmheap: 12288m
    d2.2xlarge:
      Jvmheap: 12288m
    d2.4xlarge:
      Jvmheap: 12288m
    d2.8xlarge:
      Jvmheap: 12288m
    h1.2xlarge:
      Jvmheap: 12288m
    h1.4xlarge:
      Jvmheap: 12288m
    h1.8xlarge:
      Jvmheap: 12288m
    h1.16xlarge:
      Jvmheap: 12288m
    i3.large:
      Jvmheap: 9472m
    i3.xlarge:
      Jvmheap: 12288m
    i3.2xlarge:
      Jvmheap: 12288m
    i3.4xlarge:
      Jvmheap: 12288m
    i3.8xlarge:
      Jvmheap: 12288m
    i3.16xlarge:
      Jvmheap: 12288m
    m4.large:
      Jvmheap: 4096m
    m4.xlarge:
      Jvmheap: 10240m
    m4.2xlarge:
      Jvmheap: 12288m
    m4.4xlarge:
      Jvmheap: 12288m
    m4.10xlarge:
      Jvmheap: 12288m
    m4.16xlarge:
      Jvmheap: 12288m
    m5.large:
      Jvmheap: 4096m
    m5.xlarge:
      Jvmheap: 10240m
    m5.2xlarge:
      Jvmheap: 12288m
    m5.4xlarge:
      Jvmheap: 12288m
    m5.12xlarge:
      Jvmheap: 12288m
    m5.24xlarge:
      Jvmheap: 12288m
    m5a.large:
      Jvmheap: 4096m
    m5a.xlarge:
      Jvmheap: 10240m
    m5a.2xlarge:
      Jvmheap: 12288m
    m5a.4xlarge:
      Jvmheap: 12288m
    m5a.12xlarge:
      Jvmheap: 12288m
    m5a.24xlarge:
      Jvmheap: 12288m
    m5d.large:
      Jvmheap: 4096m
    m5d.xlarge:
      Jvmheap: 10240m
    m5d.2xlarge:
      Jvmheap: 12288m
    m5d.4xlarge:
      Jvmheap: 12288m
    m5d.12xlarge:
      Jvmheap: 12288m
    m5d.24xlarge:
      Jvmheap: 12288m
    r4.large:
      Jvmheap: 9472m
    r4.xlarge:
      Jvmheap: 12288m
    r4.2xlarge:
      Jvmheap: 12288m
    r4.4xlarge:
      Jvmheap: 12288m
    r4.8xlarge:
      Jvmheap: 12288m
    r4.16xlarge:
      Jvmheap: 12288m
    r5.large:
      Jvmheap: 10240m
    r5.xlarge:
      Jvmheap: 12288m
    r5.2xlarge:
      Jvmheap: 12288m
    r5.4xlarge:
      Jvmheap: 12288m
    r5.12xlarge:
      Jvmheap: 12288m
    r5.24xlarge:
      Jvmheap: 12288m
    r5a.large:
      Jvmheap: 10240m
    r5a.xlarge:
      Jvmheap: 12288m
    r5a.2xlarge:
      Jvmheap: 12288m
    r5a.4xlarge:
      Jvmheap: 12288m
    r5a.12xlarge:
      Jvmheap: 12288m
    r5a.24xlarge:
      Jvmheap: 12288m
    r5d.large:
      Jvmheap: 10240m
    r5d.xlarge:
      Jvmheap: 12288m
    r5d.2xlarge:
      Jvmheap: 12288m
    r5d.4xlarge:
      Jvmheap: 12288m
    r5d.12xlarge:
      Jvmheap: 12288m
    r5d.24xlarge:
      Jvmheap: 12288m
    t2.medium:
      Jvmheap: 2048m
    t2.large:
      Jvmheap: 4096m
    t2.xlarge:
      Jvmheap: 10240m
    t2.2xlarge:
      Jvmheap: 12288m
    t3.medium:
      Jvmheap: 2048m
    t3.large:
      Jvmheap: 4096m
    t3.xlarge:
      Jvmheap: 10240m
    t3.2xlarge:
      Jvmheap: 12288m
    x1.16xlarge:
      Jvmheap: 12288m
    x1.32xlarge:
      Jvmheap: 12288m
    x1e.xlarge:
      Jvmheap: 12288m
    x1e.2xlarge:
      Jvmheap: 12288m
    x1e.4xlarge:
      Jvmheap: 12288m
    x1e.8xlarge:
      Jvmheap: 12288m
    x1e.16xlarge:
      Jvmheap: 12288m
    z1d.large:
      Jvmheap: 10240m
    z1d.xlarge:
      Jvmheap: 12288m
    z1d.2xlarge:
      Jvmheap: 12288m
    z1d.3xlarge:
      Jvmheap: 12288m
    z1d.6xlarge:
      Jvmheap: 12288m
    z1d.12xlarge:
      Jvmheap: 12288m
  AWSRegion2AMI:
    ap-northeast-1:
      AMI: ami-0c3fd0f5d33134a76
    ap-northeast-2:
      AMI:  ami-095ca789e0549777d
    ap-south-1:
      AMI:  ami-0d2692b6acea72ee6
    ap-southeast-1:
      AMI:  ami-01f7527546b557442
    ap-southeast-2:
      AMI:  ami-0dc96254d5535925f
    ca-central-1:
      AMI:  ami-0d4ae09ec9361d8ac
    eu-central-1:
      AMI:  ami-0cc293023f983ed53
    eu-north-1:
      AMI:  ami-3f36be41
    eu-west-1:
      AMI:  ami-0bbc25e23a7640b9b
    eu-west-2:
      AMI:  ami-0d8e27447ec2c8410
    eu-west-3:
      AMI:  ami-0adcddd3324248c4c
    sa-east-1:
      AMI:  ami-058943e7d9b9cabfb
    us-east-1:
      AMI:  ami-0b898040803850657
    us-east-2:
      AMI:  ami-0d8f6eb4f641ef691
    us-west-1:
      AMI:  ami-056ee704806822732
    us-west-2:
      AMI:  ami-082b5a644766e0e6f
Resources:
  ClusterNodeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ['sts:AssumeRole']
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Path: /
      Policies:
        - PolicyName: ClusterNodePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                - 'ec2:DescribeInstances'
                - 'ec2:DescribeSecurityGroups'
                Effect: Allow
                Resource: ['*']
              - Action:
                  - 'ec2:AuthorizeSecurityGroupIngress'
                Condition:
                  StringEquals:
                    'ec2:ResourceTag/Name':
                    - !Sub '${AWS::StackName} sg'
                Effect: Allow
                Resource: ['*']
        - PolicyName: !Sub '${AWS::StackName}-ansible-custom-policy'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action: ['iam:ListRolePolicies', 'iam:GetRolePolicy']
                Effect: Allow
                Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-ClusterNodeRole*'
              - Action: ['rds:ModifyDBInstance']
                Effect: Allow
                Resource: ['arn:aws:rds:*:*:db:*']
              - Action: ['iam:PassRole']
                Effect: Allow
                Resource: ['*']
  CrowdClusterNodeInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles: [!Ref ClusterNodeRole]
# Crowd node config
  ClusterNodeGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: !Ref ClusterNodeMin
      LaunchConfigurationName: !Ref ClusterNodeLaunchConfig
      MaxSize: !Ref ClusterNodeMax
      MinSize: !Ref ClusterNodeMin
      TargetGroupARNs: [!Ref MainTargetGroup]
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} Crowd Node"
          PropagateAtLaunch: true
        - Key: Cluster
          Value: !Ref AWS::StackName
          PropagateAtLaunch: true
      TerminationPolicies:
        - OldestInstance
      VPCZoneIdentifier: !Ref InternalSubnets
  ClusterNodeLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    DependsOn:
      - EFSMountAz1
      - EFSMountAz2
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              git: []
              jq: []
              python2-pip: []
          files:
            /etc/atl:
              content:
                !Join
                  - "\n"
                  -
                    - !If [SSLScheme, "ATL_SSL_PROXY=true", !Ref "AWS::NoValue"]
                    - !Sub ["ATL_AWS_STACK_NAME=${StackName}", StackName: !Ref "AWS::StackName"]
                    - !Sub ["ATL_CATALINA_OPTS=\"${CatalinaOpts} ${MailOpts}\"", { CatalinaOpts: !Ref CatalinaOpts, MailOpts: !If [DisableMail, '-Datlassian.mail.senddisabled=true -Datlassian.mail.fetchdisabled=true -Datlassian.mail.popdisabled=true ', ''] }]
                    - !Sub ["ATL_CROWD_INSTALLER_DOWNLOAD_URL=${CrowdDownloadUrl}", CrowdDownloadUrl: !Ref CrowdDownloadUrl]
                    - !Sub ["ATL_CROWD_VERSION=${CrowdVersion}", CrowdVersion: !Ref CrowdVersion]
                    - !Sub ["ATL_DB_HOST=${DBEndpointAddress}", DBEndpointAddress: !GetAtt DB.Endpoint.Address]
                    - !Sub ["ATL_DB_MAXIDLE=${DBMaxIdle}", DBMaxIdle: !Ref DBMaxIdle]
                    - !Sub ["ATL_DB_MAXWAITMILLIS=${DBMaxWaitMillis}", DBMaxWaitMillis: !Ref DBMaxWaitMillis]
                    - !Sub ["ATL_DB_MINEVICTABLEIDLETIMEMILLIS=${DBMinEvictableIdleTimeMillis}", DBMinEvictableIdleTimeMillis: !Ref DBMinEvictableIdleTimeMillis]
                    - !Sub ["ATL_DB_MINIDLE=${DBMinIdle}", DBMinIdle: !Ref DBMinIdle]
                    - !Sub ["ATL_DB_PASSWORD=${DBMasterUserPassword}", DBMasterUserPassword: !Ref DBMasterUserPassword]
                    - !Sub ["ATL_DB_ROOT_PASSWORD=${DBMasterUserPassword}", DBMasterUserPassword: !Ref DBMasterUserPassword]
                    - !Sub ["ATL_DB_POOLMAXSIZE=${DBPoolMaxSize}", DBPoolMaxSize: !Ref DBPoolMaxSize]
                    - !Sub ["ATL_DB_POOLMINSIZE=${DBPoolMinSize}", DBPoolMinSize: !Ref DBPoolMinSize]
                    - !Sub ["ATL_DB_PORT=${DBEndpointPort}", DBEndpointPort: !GetAtt DB.Endpoint.Port]
                    - !Sub ["ATL_DB_REMOVEABANDONED=${DBRemoveAbandoned}", DBRemoveAbandoned: !Ref DBRemoveAbandoned]
                    - !Sub ["ATL_DB_REMOVEABANDONEDTIMEOUT=${DBRemoveAbandonedTimeout}", DBRemoveAbandonedTimeout: !Ref DBRemoveAbandonedTimeout]
                    - !Sub ["ATL_DB_TESTONBORROW=${DBTestOnBorrow}", DBTestOnBorrow: !Ref DBTestOnBorrow]
                    - !Sub ["ATL_DB_TESTWHILEIDLE=${DBTestWhileIdle}", DBTestWhileIdle: !Ref DBTestWhileIdle]
                    - !Sub ["ATL_DB_TIMEBETWEENEVICTIONRUNSMILLIS=${DBTimeBetweenEvictionRunsMillis}", DBTimeBetweenEvictionRunsMillis: !Ref DBTimeBetweenEvictionRunsMillis]
                    - !Sub ["ATL_DEPLOYMENT_REPOSITORY=${DeployRepository}", DeployRepository: !Select [0, !Split [";", !Ref DeployFromAnsible]]]
                    - !Sub ["ATL_DEPLOYMENT_REPOSITORY_BRANCH=${DeployRepositoryBranch}", DeployRepositoryBranch: !Select [1, !Split [";", !Ref DeployFromAnsible]]]
                    - !Sub ["ATL_DEPLOYMENT_REPOSITORY_PLAYBOOK=${DeployRepositoryPlaybook}", DeployRepositoryPlaybook: !Select [2, !Split [";", !Ref DeployFromAnsible]]]
                    - !Sub ["ATL_DEPLOYMENT_REPOSITORY_KEYNAME=${DeployRepositoryKeyName}", DeployRepositoryKeyName: !Ref LocalAnsibleGitSshKeyName]
                    - !Sub ["ATL_EFS_ID=${ElasticFileSystem}", ElasticFileSystem: !Ref "ElasticFileSystem"]
                    - !Sub ["ATL_ENVIRONMENT=${DeployEnvironment}", DeployEnvironment: !Ref DeployEnvironment]
                    - !Sub ["ATL_HOSTEDZONE=${HostedZone}", HostedZone: !Ref HostedZone]
                    - !Sub ["ATL_JDBC_PASSWORD=${DBPassword}", DBPassword: !Ref DBPassword]
                    - !Sub ["ATL_JDBC_URL=jdbc:postgresql://${DBEndpointAddress}:${DBEndpointPort}/crowd", { DBEndpointAddress: !GetAtt DB.Endpoint.Address, DBEndpointPort: !GetAtt DB.Endpoint.Port }]
                    - !Sub ["ATL_JVM_HEAP=${AtlJvmHeap}", AtlJvmHeap: !If [OverrideHeap, !Ref 'JvmHeapOverride', !FindInMap [AWSInstanceType2Arch, !Ref ClusterNodeInstanceType, Jvmheap]]]
                    - !Sub ["ATL_LOCALANSIBLE_REPO=${AnsibleRepo}", AnsibleRepo: !Ref LocalAnsibleGitRepo]
                    - !Sub ["ATL_LOCALANSIBLE_SSHKEYNAME=${AnsibleKey}", AnsibleKey: !Ref LocalAnsibleGitSshKeyName]
                    - !Sub ["ATL_PRODUCT_DOWNLOAD_URL=${CrowdDownloadUrl}", CrowdDownloadUrl: !Ref CrowdDownloadUrl]
                    - !Sub ["ATL_PRODUCT_VERSION=${CrowdVersion}", CrowdVersion: !Ref CrowdVersion]
                    - !Sub ["ATL_PROXY_NAME=${AtlProxyName}", AtlProxyName: !If [UseCustomDnsName, !Ref CustomDnsName, !If [UseHostedZone, !Ref LoadBalancerCname, !GetAtt LoadBalancerV2.DNSName]]]
                    - !Sub ["ATL_TOMCAT_ACCEPTCOUNT=${TomcatAcceptCount}", TomcatAcceptCount: !Ref TomcatAcceptCount]
                    - !Sub ["ATL_TOMCAT_CONNECTIONTIMEOUT=${TomcatConnectionTimeout}", TomcatConnectionTimeout: !Ref TomcatConnectionTimeout]
                    - !Sub ["ATL_TOMCAT_CONTEXTPATH=${TomcatContextPath}", TomcatContextPath: !Ref TomcatContextPath]
                    - !Sub ["ATL_TOMCAT_DEFAULTCONNECTORPORT=${TomcatDefaultConnectorPort}", TomcatDefaultConnectorPort: !Ref TomcatDefaultConnectorPort]
                    - !Sub ["ATL_TOMCAT_ENABLELOOKUPS=${TomcatEnableLookups}", TomcatEnableLookups: !Ref TomcatEnableLookups]
                    - !Sub ["ATL_TOMCAT_MAXTHREADS=${TomcatMaxThreads}", TomcatMaxThreads: !Ref TomcatMaxThreads]
                    - !Sub ["ATL_TOMCAT_MINSPARETHREADS=${TomcatMinSpareThreads}", TomcatMinSpareThreads: !Ref TomcatMinSpareThreads]
                    - !Sub ["ATL_TOMCAT_PROTOCOL=${TomcatProtocol}", TomcatProtocol: !Ref TomcatProtocol]
                    - !Sub ["ATL_TOMCAT_PROXYPORT=${TomcatProxyPort}", TomcatProxyPort: !If [SSLScheme, 443, 80]]
                    - !Sub ["ATL_TOMCAT_REDIRECTPORT=${TomcatRedirectPort}", TomcatRedirectPort: !Ref TomcatRedirectPort]
                    - !Sub ["ATL_TOMCAT_SCHEME=${TomcatScheme}", TomcatScheme: !If [SSLScheme, https, http]]
                    - !Sub ["ATL_TOMCAT_SECURE=${TomcatSecure}", TomcatSecure: !If [SSLScheme, true, false]]
                    - "ATL_CROWD_FULL_DISPLAY_NAME=\"Atlassian Crowd\""
                    - "ATL_CROWD_NAME=crowd"
                    - "ATL_CROWD_SHORT_DISPLAY_NAME=Crowd"
                    - "ATL_APP_DATA_MOUNT_ENABLED=false"
                    - "ATL_DB_NAME=crowd"
                    - "ATL_JDBC_DB_NAME=crowd"
                    - "ATL_ENABLED_PRODUCTS=Crowd"
                    - "ATL_ENABLED_SHARED_HOMES="
                    - "ATL_JDBC_DRIVER=org.postgresql.Driver"
                    - "ATL_JDBC_USER=atlcrowd"
                    - "ATL_NGINX_ENABLED=false"
                    - "ATL_POSTGRES_ENABLED=false"
                    - "ATL_RELEASE_S3_BUCKET=atlassian-software"
                    - "ATL_RELEASE_S3_PATH=releases"
                    - "ATL_SSL_SELF_CERT_ENABLED=false"
              mode: "000640"
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                region=${AWS::Region}
                stack=${AWS::StackName}
              mode: "000400"
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content:
                !Join
                  - "\n"
                  -
                    - "[cfn-auto-reloader-hook]"
                    - triggers=post.update
                    - "path=Resources.ClusterNodeLaunchConfig.Metadata.AWS::CloudFormation::Init"
                    - !Sub
                      - "action=/opt/aws/bin/cfn-init -v --stack ${StackName} --resource ClusterNodeLaunchConfig --region ${Region}"
                      - StackName: !Ref "AWS::StackName"
                        Region: !Ref "AWS::Region"
                    - runas=root
            /tmp/bootstrap_local_ansible:
              content: !Sub |
                  #!/usr/bin/env bash
                  # bootstrap any local-ansible repo that is passed in on this template
                  localansiblerepopath=/home/localansible
                  gitkeylocation=/root/.ssh/gitkey
                  # ensure awscli is up to date
                  pip install --upgrade awscli
                  gitkey=$(aws --region=${AWS::Region} ssm get-parameters --names "${LocalAnsibleGitSshKeyName}" --with-decryption | jq --raw-output '.Parameters[0] .Value')
                  echo -e $gitkey > $gitkeylocation
                  chmod 600 $gitkeylocation
                  export GIT_SSH_COMMAND="ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -i $gitkeylocation"
                  mkdir -p $localansiblerepopath
                  cd $localansiblerepopath
                  git clone "${LocalAnsibleGitRepo}"
                  cp $localansiblerepopath/*/local-ansible-run /usr/local/bin/local-ansible-run
                  chmod 750 /usr/local/bin/local-ansible-run
              mode: "000750"
              owner: root
              group: root
            /tmp/clone_deployment_repo:
              content: !Sub
                - |
                    #!/bin/bash
                    mkdir -p /opt/atlassian/dc-deployments-automation/
                    gitkeylocation=/root/.ssh/gitkey
                    key_name="${LocalAnsibleGitSshKeyName}"
                    if [[ ! -z "$key_name" ]]; then
                        # Ensure awscli is up to date
                        pip install --upgrade awscli jq
                        gitkey=$(aws --region=${AWS::Region} ssm get-parameters --names "$key_name" --with-decryption | jq --raw-output '.Parameters[0] .Value')
                        echo -e gitkey > $gitkeylocation
                        chmod 600 $gitkeylocation
                        export GIT_SSH_COMMAND="ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -i $gitkeylocation"
                    else
                        export GIT_SSH_COMMAND="ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no"
                    fi
                    git clone "${DeploymentAutomationRepository}" -b "${DeploymentAutomationBranch}" /opt/atlassian/dc-deployments-automation/
                - { DeploymentAutomationRepository: !Select [0, !Split [";", !Ref DeployFromAnsible]], DeploymentAutomationBranch: !Select [1, !Split [";", !Ref DeployFromAnsible]] }
              mode: "000750"
              owner: root
              group: root
          commands:
            010_make_mount_point:
              command: mkdir -p /media/atl
              ignoreErrors: false
            020_ensure_efs_utils:
              command: yum install -y amazon-efs-utils
              ignoreErrors: false
            021_add_efs_mount:
              command: !Sub "echo \"${ElasticFileSystem}:/ /media/atl efs defaults,_netdev 0 0\" >>/etc/fstab"
              ignoreErrors: false
            030_mount_all:
              command: mount -a
              ignoreErrors: true
            040_make_shared_home_dir:
              command: mkdir -p /media/atl/crowd/shared
              ignoreErrors: false
            050_ssm_group:
              command: groupadd ssm-user --gid 400 || groupmod -g 400 ssm-user
            051_ssm_user:
              command: useradd ssm-user --uid 400 -g ssm-user || usermod -u 400 ssm-user
            052_ensure_ssm:
              command: yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
              ignoreErrors: true
            070_create_atl_dir:
              test: "test ! -d /opt/atlassian/"
              command: mkdir -p /opt/atlassian
              ignoreErrors: false
            071_install_packages:
              command: yum install -y git python-virtualenv
              ignoreErrors: true
            072_clone_atl_scripts:
              test: "test ! -d /opt/atlassian/dc-deployments-automation/"
              command: /tmp/clone_deployment_repo
              ignoreErrors: true
            080_run_atl_init_node:
              command: !Sub
                - cd /opt/atlassian/dc-deployments-automation/ && ./bin/install-ansible && ./bin/ansible-with-atl-env inv/aws_node_local ${DeploymentAutomationPlaybook} /var/log/ansible-bootstrap.log
                - { DeploymentAutomationPlaybook: !Select [2, !Split [";", !Ref DeployFromAnsible]] }
              ignoreErrors: true
            090_bootstrap_local_ansible:
              command: /tmp/bootstrap_local_ansible > /var/log/bootstrap_local_ansible.log 2>&1
              test: !Sub test -n "${LocalAnsibleGitRepo}"
            100_run_local_ansible:
              command: /usr/local/bin/local-ansible-run
              test: test -f /usr/local/bin/local-ansible-run
              ignoreErrors: true
          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              collectd:
                !If [DoCollectd, {enabled: true, ensureRunning: true}, !Ref 'AWS::NoValue']
              rpcbind:
                enabled: true
                ensureRunning: true
                packages:
                  yum: [nfs-utils]
    Properties:
      AssociatePublicIpAddress: false
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            Encrypted: true
            VolumeSize: !Ref ClusterNodeVolumeSize
            VolumeType: gp2
        - DeviceName: /dev/xvdf
          Ebs: {}
          NoDevice: true
      KeyName: !Ref KeyPairName
      IamInstanceProfile: !Ref CrowdClusterNodeInstanceProfile
      ImageId:
        !FindInMap
          - AWSRegion2AMI
          - !Ref AWS::Region
          - AMI
      InstanceType: !Ref ClusterNodeInstanceType
      SecurityGroups: [!Ref SecurityGroup]
      UserData:
        Fn::Base64:
          !Join
            - ""
            -
              - "#!/bin/bash -xe\n"
              - "yum update -y aws-cfn-bootstrap\n"
              - !Sub "/opt/aws/bin/cfn-init -v --stack ${AWS::StackName}"
              - !Sub " --resource ClusterNodeLaunchConfig --region ${AWS::Region}\n"
              - !Sub "/opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName}"
              - !Sub " --resource ClusterNodeLaunchConfig --region ${AWS::Region}"
# Elastic file system
# EFS isn't available in all AWS regions; check https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/ to ensure your target region is supported
  ElasticFileSystem:
    Type: AWS::EFS::FileSystem
    UpdateReplacePolicy: Retain
    Properties:
      Encrypted: !If [UseEncryption, true, !Ref 'AWS::NoValue']
      FileSystemTags:
        - Key: Name
          Value: !Join [' ', [!Ref 'AWS::StackName', 'cluster shared-files']]
        - Key: Application
          Value: !Ref AWS::StackId
      KmsKeyId: !If [UseEncryption, !Ref KmsKeyArn, !Ref 'AWS::NoValue']
  EFSMountAz1:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref ElasticFileSystem
      SecurityGroups: [!Ref SecurityGroup]
      SubnetId: !Select [0, !Ref InternalSubnets]
  EFSMountAz2:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref ElasticFileSystem
      SecurityGroups: [!Ref SecurityGroup]
      SubnetId: !Select [1, !Ref InternalSubnets]
  EFSCname:
    Type: AWS::Route53::RecordSet
    Condition: UseHostedZone
    Properties:
      HostedZoneName: !Ref HostedZone
      Comment: Route53 cname for the efs
      Name: !If [ UseHostedZone, !Join ['.', [!Ref 'AWS::StackName', 'efs', !Ref 'HostedZone']], '']
      Type: CNAME
      TTL: '60'
      ResourceRecords:
        - !Join ['.', [!Ref ElasticFileSystem, 'efs', !Ref 'AWS::Region', 'amazonaws.com.']]
# Database
  DB:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot
    Properties:
      AllocatedStorage: !Ref DBStorage
      BackupRetentionPeriod: !If [DoCreateReadReplica, 1, !Ref 'AWS::NoValue']
      CopyTagsToSnapshot: true
      DBInstanceClass: !Ref DBInstanceClass
      DBInstanceIdentifier: !Ref AWS::StackName
      DBSubnetGroupName: !Ref DBSubnetGroup
      Engine: postgres
      EngineVersion: '9.6'
      Iops: !If [DBProvisionedIops, !Ref DBIops, !Ref 'AWS::NoValue']
      KmsKeyId: !If [UseEncryption, !Ref KmsKeyArn, !Ref 'AWS::NoValue']
      MasterUsername: postgres
      MasterUserPassword: !If [DoSetDBMasterUserPassword, !Ref DBMasterUserPassword, !Ref 'AWS::NoValue']
      MultiAZ: !Ref DBMultiAZ
      StorageEncrypted: !If [UseEncryption, true, !Ref 'AWS::NoValue']
      StorageType: !If [DBProvisionedIops, io1, gp2]
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} Crowd PostgreSQL Database"
      VPCSecurityGroups: [!Ref SecurityGroup]
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: DBSubnetGroup
      SubnetIds: !Ref InternalSubnets
  DBCname:
    Condition: UseHostedZone
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Ref HostedZone
      Comment: Route53 cname for the RDS
      Name: !Sub "${AWS::StackName}.db.${HostedZone}"
      Type: CNAME
      TTL: '60'
      ResourceRecords:
        - !GetAtt DB.Endpoint.Address
  DBReplica:
    Condition: DoCreateReadReplica
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: !Ref DBReadReplicaInstanceClass
      DBInstanceIdentifier: !Sub "${AWS::StackName}-replica"
      SourceDBInstanceIdentifier: !Ref DB
      StorageType: gp2
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} Crowd PostgreSQL Read Replica Database"
      VPCSecurityGroups: [!Ref SecurityGroup]
  DBReadReplicaCname:
    Condition: UseHostedZoneAndDoCreateReadReplica
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Ref HostedZone
      Comment: Route53 cname for the RDS read replica
      Name: !Sub "${AWS::StackName}.db-replica.${HostedZone}"
      Type: CNAME
      TTL: '60'
      ResourceRecords:
        - !GetAtt DBReplica.Endpoint.Address
# Loadbalancer
  LoadBalancerV2:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '3600'
      Scheme: !Ref LoadBalancerScheme
      SecurityGroups: [!Ref SecurityGroup]
      Subnets: !Ref ExternalSubnets
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-LoadBalancerV2"
        - Key: Cluster
          Value: !Ref AWS::StackName
  LoadBalancerV2Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
        - CertificateArn:
            !If
              - DoSSL
              - !Ref SSLCertificateARN
              - !Ref AWS::NoValue
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref MainTargetGroup
      LoadBalancerArn: !Ref LoadBalancerV2
      Port: !If [DoSSL, 443, 80]
      Protocol: !If [DoSSL, HTTPS, HTTP]
  LoadBalancerCname:
    Condition: UseHostedZone
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Ref HostedZone
      Comment: Route53 cname for the ALB
      Name: !Sub
        - "${SubDomainName}.${HostedZone}"
        - SubDomainName: !If [UseSubDomainName, !Ref 'SubDomainName', !Ref 'AWS::StackName']
          HostedZone: !Ref 'HostedZone'
      Type: CNAME
      TTL: '60'
      ResourceRecords:
        - !GetAtt LoadBalancerV2.DNSName
  MainTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: !Ref TomcatDefaultConnectorPort
      Protocol: HTTP
      VpcId: !Ref VPC
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 29
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: '200'
      HealthCheckPath: !If [UseContextPath, !Sub "${TomcatContextPath}/status", '/status']
      HealthCheckPort: !Ref TomcatDefaultConnectorPort
      HealthCheckProtocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: "true"
        - Key: stickiness.type
          Value: lb_cookie
        - Key: stickiness.lb_cookie.duration_seconds
          Value: '18000'
      Tags:
        - Key: Name
          Value: MainTargetGroup
        - Key: Cluster
          Value: !Ref AWS::StackName
    DependsOn:
      - LoadBalancerV2
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group allowing SSH and HTTP/HTTPS access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref CidrBlock
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref CidrBlock
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref CidrBlock
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} sg"
      VpcId: !Ref VPC
  SecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: '-1'
      FromPort: -1
      ToPort: -1
      SourceSecurityGroupId: !Ref SecurityGroup
Outputs:
  ServiceURL:
    Description: The URL to access this Atlassian service
    Value: !If
      - UseCustomDnsName
      - !Sub
        - "${HTTP}://${CustomDNSName}${ContextPath}"
        - HTTP: !If [SSLScheme, 'https', 'http']
          CustomDNSName: !Ref CustomDnsName
          ContextPath: !Ref TomcatContextPath
      - !If
        - UseHostedZone
        - !Sub
          - "${HTTP}://${LBCName}${ContextPath}"
          - HTTP: !If [SSLScheme, 'https', 'http']
            LBCName: !Ref LoadBalancerCname
            ContextPath: !Ref TomcatContextPath
        - !Sub
          - "${HTTP}://${LoadBalancerDNSName}${ContextPath}"
          - HTTP: !If [SSLScheme, 'https', 'http']
            LoadBalancerDNSName: !GetAtt LoadBalancerV2.DNSName
            ContextPath: !Ref TomcatContextPath
  LoadBalancerURL:
    Description: The Load Balancer URL
    Value: !Sub
      - "${HTTP}://${LoadBalancerDNSName}"
      - HTTP: !If [DoSSL, 'https', 'http']
        LoadBalancerDNSName: !GetAtt LoadBalancerV2.DNSName
  SGname:
    Description: The name of the SecurityGroup
    Value: !Ref SecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-SGname"
  DBEndpointAddress:
    Description: The Database Connection String
    Value: !GetAtt DB.Endpoint.Address
  DBReplicaEndpointAddress:
    Condition: DoCreateReadReplica
    Description: The endpoint for the read replica
    Value: !If
      - UseHostedZone
      - !Ref DBReadReplicaCname
      - !GetAtt DBReplica.Endpoint.Address
  EFSCname:
    Description: The cname of the EFS
    Value: !If
      - UseHostedZone
      - !Ref EFSCname
      - !Ref ElasticFileSystem
    Export:
      Name: !Sub "${AWS::StackName}-EFSCname"
